[
    {
        "type": "metadata_comments",
        "description": "Metadata comments example",
        "code": "*AUTHOR.   DDS TEAM.\n\n000400*UPDATE.   FY 2021 PRODUCTION.\n000500*\n000600*REMARKS.  - CALLS THE PPCAL__ MODULES\n000700*          - FINDS  WAGE-INDEX RECORD FOR",
        "comments": "Metadata and author information about the program."
    },
    {
        "type": "module_interaction",
        "description": "Module interaction example",
        "code": "CALLS THE PPCAL__ MODULES\n\n000700*          - FINDS  WAGE-INDEX RECORD FOR\n000800*            GIVEN BILL TO BE PASSED TO PPCAL__ MODULES.\n000900 DATE-COMPILED.\n001000****************************************************************\n001100*   THE RESPONSIBILITY FOR INSTALLING, MODIFYING, TESTING,     *\n001200*   MAINTAINING, AND VERIFYING THE ACCURACY OF THIS PROGRAM    *",
        "comments": "Indicates interaction with external modules for modular functionality."
    },
    {
        "type": "module_interaction",
        "description": "Module interaction example",
        "code": "CALL THE PPCAL MODULES\n.\n122300*        B. THE PROV-RECORD AND WAGE-INDEX-RECORD ASSOCIATED WITH\n122400*           EACH BILL WILL BE PASSED TO THE PPCAL PROGRAMS.\n122500*****************************************************************\n122600\n122700     MOVE DRV-VERSION TO PPDRV-VERSION.",
        "comments": "Indicates interaction with external modules for modular functionality."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "*AUTHOR.   DDS TEAM.\n000400*UPDATE.   FY 2021 PRODUCTION.\n000500*\n000600*REMARKS.  - CALLS THE PPCAL__ MODULES\n000700*          - FINDS  WAGE-INDEX RECORD FOR\n000800*            GIVEN BILL TO BE PASSED TO PPCAL__ MODULES.",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "*\n000600*REMARKS.  - CALLS THE PPCAL__ MODULES\n000700*          - FINDS  WAGE-INDEX RECORD FOR\n000800*            GIVEN BILL TO BE PASSED TO PPCAL__ MODULES.\n000900 DATE-COMPILED.",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "*          - FINDS  WAGE-INDEX RECORD FOR\n000800*            GIVEN BILL TO BE PASSED TO PPCAL__ MODULES.\n000900 DATE-COMPILED.\n001000****************************************************************\n001100*   THE RESPONSIBILITY FOR INSTALLING, MODIFYING, TESTING,     *\n001200*   MAINTAINING, AND VERIFYING THE ACCURACY OF THIS PROGRAM    *\n001300*   IS THAT OF THE USER.                                       *",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "*   MAINTAINING, AND VERIFYING THE ACCURACY OF THIS PROGRAM    *\n001300*   IS THAT OF THE USER.                                       *\n001400*                  *  *  *  *  *  *  *  *                      *\n001500*   ONCE GROUPED THE PROSPECTIVE PAYMENT SUBROUTINE IS CALLED  *\n001600*   TO CALCULATE THE TOTAL PAYMENT PRIOR TO DEDUCTIBLE,        *\n001700*   CO-INSURANCE, AND CASES WHERE MEDICARE IS SECONDARY PAYOR. *",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "*                  *  *  *  *  *  *  *  *                      *\n001500*   ONCE GROUPED THE PROSPECTIVE PAYMENT SUBROUTINE IS CALLED  *\n001600*   TO CALCULATE THE TOTAL PAYMENT PRIOR TO DEDUCTIBLE,        *\n001700*   CO-INSURANCE, AND CASES WHERE MEDICARE IS SECONDARY PAYOR. *\n001800*   THE PROGRAM WILL:                                          *",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "*   TO CALCULATE THE TOTAL PAYMENT PRIOR TO DEDUCTIBLE,        *\n001700*   CO-INSURANCE, AND CASES WHERE MEDICARE IS SECONDARY PAYOR. *\n001800*   THE PROGRAM WILL:                                          *\n001900*       1. FIND THE WAGE INDEX  TO CALCULATE PPS.              *\n002000*       2. EDIT THE BILL INFORMATION PASSED TO IT.             *\n002100*       3. PASS BACK RETURN CODES.                             *\n002200*       4. CALCULATE WHEN APPLICABLE                           *\n002300*          A. THE COVERED DAYS UTILIZATION.                    *",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "*   THE PROGRAM WILL:                                          *\n001900*       1. FIND THE WAGE INDEX  TO CALCULATE PPS.              *\n002000*       2. EDIT THE BILL INFORMATION PASSED TO IT.             *\n002100*       3. PASS BACK RETURN CODES.                             *\n002200*       4. CALCULATE WHEN APPLICABLE                           *\n002300*          A. THE COVERED DAYS UTILIZATION.                    *\n002400*          B. THE HOSPITAL SPECIFIC PART OF PAYMENT.           *\n002500*          C. THE FEDERAL  SPECIFIC PART OF PAYMENT            *\n002600*          D. THE OUTLIER PORTION (COST).                      *",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "*       2. EDIT THE BILL INFORMATION PASSED TO IT.             *\n002100*       3. PASS BACK RETURN CODES.                             *\n002200*       4. CALCULATE WHEN APPLICABLE                           *\n002300*          A. THE COVERED DAYS UTILIZATION.                    *\n002400*          B. THE HOSPITAL SPECIFIC PART OF PAYMENT.           *",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "*       4. CALCULATE WHEN APPLICABLE                           *\n002300*          A. THE COVERED DAYS UTILIZATION.                    *\n002400*          B. THE HOSPITAL SPECIFIC PART OF PAYMENT.           *\n002500*          C. THE FEDERAL  SPECIFIC PART OF PAYMENT            *\n002600*          D. THE OUTLIER PORTION (COST).                      *\n002700*          E. THE NUMBER OF OUTLIER DAYS.                      *",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "*          B. THE HOSPITAL SPECIFIC PART OF PAYMENT.           *\n002500*          C. THE FEDERAL  SPECIFIC PART OF PAYMENT            *\n002600*          D. THE OUTLIER PORTION (COST).                      *\n002700*          E. THE NUMBER OF OUTLIER DAYS.                      *\n002800*          F. TOTAL PAYMENT (B + C + D  ABOVE).                *\n002900*          G. DISPROPORTIONATE SHARE ADJUSTMENT                *\n003000*          H. INDIRECT TEACH ADJUSTMENT.                       *\n003100*                  *  *  *  *  *  *  *  *                      *\n003200*   THIS SUBROUTINE CALCULATES THE PROVIDER SPECIFIC           *",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "*          D. THE OUTLIER PORTION (COST).                      *\n002700*          E. THE NUMBER OF OUTLIER DAYS.                      *\n002800*          F. TOTAL PAYMENT (B + C + D  ABOVE).                *\n002900*          G. DISPROPORTIONATE SHARE ADJUSTMENT                *",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "*          F. TOTAL PAYMENT (B + C + D  ABOVE).                *\n002900*          G. DISPROPORTIONATE SHARE ADJUSTMENT                *\n003000*          H. INDIRECT TEACH ADJUSTMENT.                       *\n003100*                  *  *  *  *  *  *  *  *                      *\n003200*   THIS SUBROUTINE CALCULATES THE PROVIDER SPECIFIC           *",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "*          H. INDIRECT TEACH ADJUSTMENT.                       *\n003100*                  *  *  *  *  *  *  *  *                      *\n003200*   THIS SUBROUTINE CALCULATES THE PROVIDER SPECIFIC           *\n003300*   ELEMENTS ON A PROVIDER BREAK, THEREFORE IT WILL RUN FASTER *\n003400*   WHEN BILLS ARE BATCHED BY PROVIDER.                        *\n003500*                                                              *\n003600****************************************************************\n003700 ENVIRONMENT DIVISION.",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "*   THIS SUBROUTINE CALCULATES THE PROVIDER SPECIFIC           *\n003300*   ELEMENTS ON A PROVIDER BREAK, THEREFORE IT WILL RUN FASTER *\n003400*   WHEN BILLS ARE BATCHED BY PROVIDER.                        *\n003500*                                                              *\n003600****************************************************************\n003700 ENVIRONMENT DIVISION.\n003800 CONFIGURATION SECTION.\n003900 SOURCE-COMPUTER.            IBM-370.\n004000 OBJECT-COMPUTER.            IBM-370.",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "*   WHEN BILLS ARE BATCHED BY PROVIDER.                        *\n003500*                                                              *\n003600****************************************************************\n003700 ENVIRONMENT DIVISION.\n003800 CONFIGURATION SECTION.\n003900 SOURCE-COMPUTER.            IBM-370.\n004000 OBJECT-COMPUTER.            IBM-370.",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "**************YEARCHANGE 2015.1 ******************************\n015600* USED FOR FY15 BLENDED TRANSITION WI FOR CERTAIN PR PROVIDERS\n015700**************************************************************\n015800 01  PRSPC-PROV-TABLE.",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "**************YEARCHANGE 2015.1 ******************************\n020800* USED FOR FY15 BLENDED TRANSITION WI FOR CERTAIN PR PROVIDERS\n020900**************************************************************\n021000 01  MES-PRSPC.\n021100     05  MES-PRSPC-PROV                PIC X(6).\n021200     05  FILLER                        PIC XXX.\n021300     05  MESWK-PRSPC-WAGEIN-BLEND      PIC S9(02)V9(04).\n021400",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "*\n021600************************************************************\n021700**    OLD PROVIDER RECORD FORMAT\n021800************************************************************\n021900 01  W-PROV-OLD-HOLD.\n022000     02  W-PROV-OLDREC-HOLD1.\n022100         05  W-P-PROVIDER-NO.\n022200             10  W-P-STATE                PIC X(02).",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "**    OLD PROVIDER RECORD FORMAT\n021800************************************************************\n021900 01  W-PROV-OLD-HOLD.\n022000     02  W-PROV-OLDREC-HOLD1.\n022100         05  W-P-PROVIDER-NO.\n022200             10  W-P-STATE                PIC X(02).\n022300             10  FILLER                   PIC X(04).",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "*      THE PPCAL001 PROGRAM THRU PPCAL047 FOR PROCESSING\n042500*      MSAX TABLE\n042600***************************************************************\n042700 01  WAGE-NEW-INDEX-RECORD.\n042800     05  W-NEW-MSA               PIC 9(4).\n042900     05  W-NEW-SIZE              PIC X(01).\n043000         88  NEW-LARGE-URBAN       VALUE 'L'.\n043100         88  NEW-OTHER-URBAN       VALUE 'O'.",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "*      THE PPCAL052 PROGRAM AND AFTER FOR PROCESSING\n044600*      CBSA TABLE\n044700***************************************************************\n044800 01  WAGE-NEW-CBSA-INDEX-RECORD.",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "*      TO THE URBAN CBSA RECORD FOR RURAL FLOOR PROCESSING\n046800*      CBSA TABLE\n046900***************************************************************\n047000 01  WAGE-RURAL-CBSA-INDEX-RECORD.\n047100     05  W-RURAL-CBSA             PIC 9(5).\n047200     05  W-RURAL-CBSA-X REDEFINES W-RURAL-CBSA  PIC X(05).",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "*      THIS IS THE WAGE-INDEX RECORD THAT WILL BE PASSED TO   *\n049000*      PPCAL983 PROGRAM  AND PRIOR YEARS FOR PROCESSING       *\n049100***************************************************************\n049200 01  WAGE-INDEX-RECORD.\n049300     05  W-MSA               PIC 9(4).\n049400     05  W-SIZE              PIC X(01).\n049500         88  LARGE-URBAN       VALUE 'L'.",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "*      THIS IS THE PROV-RECORD THAT WILL BE PASSED TO        *\n050600*      THE PPCAL001 PROGRAM AND AFTER FOR PROCESSING         *\n050700*      IN THE NEW FORMAT                                     *\n050800**************************************************************",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "*      IN THE NEW FORMAT                                     *\n050800**************************************************************\n050900 01  PROV-NEW-HOLD.\n051000     02  PROV-NEWREC-HOLD1.\n051100         05  P-NEW-NPI10.\n051200             10  P-NEW-NPI8             PIC X(08).\n051300             10  P-NEW-NPI-FILLER       PIC X(02).",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "***          Y = LOW VOLUME PERCENTAGE  25 % ADD ON\n060000         05  P-NEW-FED-PPS-BLEND-IND        PIC X.\n060100         05  P-NEW-STATE-CODE               PIC 9(02).\n060200         05  P-NEW-STATE-CODE-X REDEFINES\n060300             P-NEW-STATE-CODE               PIC X(02).\n060400         05  FILLER                         PIC X(03).\n060500     02  PROV-NEWREC-HOLD2.\n060600         05  P-NEW-VARIABLES.",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "***                  1 = ANYTHING OR HOLD HARMLESS WITH SPEC WI\n062900***                  2 = RECLASS WITH SPEC WI\n063000                 88  P-NEW-CBSA-WI-DUAL       VALUE 'D'.\n063100                 88  P-NEW-CBSA-WI-BLANK      VALUE ' ' '0'.\n063200             10  P-NEW-CBSA-HOSP-QUAL-IND  PIC X.\n063300                 88  P-NEW-CBSA-HOSP-QUAL-MET   VALUE '1'.\n063400                 88  P-NEW-CBSA-HOSP-QUAL-25PER VALUE '2'.",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "*\n069300**************************************************************\n069400*      THIS IS THE PROV-RECORD THAT WILL BE PASSED TO        *\n069500*      THE PPCAL984 PROGRAM AND PRIOR PPCAL MODULES          *\n069600*      FOR PROCESSING --- OLD PSF FORMAT                     *",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "*      THIS IS THE PROV-RECORD THAT WILL BE PASSED TO        *\n069500*      THE PPCAL984 PROGRAM AND PRIOR PPCAL MODULES          *\n069600*      FOR PROCESSING --- OLD PSF FORMAT                     *\n069700**************************************************************\n069800 01  PROV-HOLD.\n069900     02  PROV-REC-HOLD1.\n070000         05  P-PROVIDER-NO.",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "*      FOR PROCESSING --- OLD PSF FORMAT                     *\n069700**************************************************************\n069800 01  PROV-HOLD.\n069900     02  PROV-REC-HOLD1.\n070000         05  P-PROVIDER-NO.\n070100             10  P-STATE                PIC X(02).",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "*                                                                      *\n079500* THIS IS THE BILL-RECORD THAT WILL BE PASSED TO THE PPCAL983 PROGRAM  *\n079600* AND PRIOR PPCAL MODULES FOR PROCESSING.                              *\n079700*                                                                      *\n079800* B-CHARGES-CLAIMED = TOTAL COVERED CHARGES ON THE 0001 (TOTALS        *\n079900* LINE) MINUS BLOOD CLOT COST, KIDNEY COSTS, ACQUISITION COSTS AND     *\n080000* TECHNICAL PROVIDER CHARGES.                                          *\n080100************************************************************************",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "* AND PRIOR PPCAL MODULES FOR PROCESSING.                              *\n079700*                                                                      *\n079800* B-CHARGES-CLAIMED = TOTAL COVERED CHARGES ON THE 0001 (TOTALS        *\n079900* LINE) MINUS BLOOD CLOT COST, KIDNEY COSTS, ACQUISITION COSTS AND     *\n080000* TECHNICAL PROVIDER CHARGES.                                          *",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "* B-CHARGES-CLAIMED = TOTAL COVERED CHARGES ON THE 0001 (TOTALS        *\n079900* LINE) MINUS BLOOD CLOT COST, KIDNEY COSTS, ACQUISITION COSTS AND     *\n080000* TECHNICAL PROVIDER CHARGES.                                          *\n080100************************************************************************\n080200 01  BILL-DATA.\n080300         10  B-PROVIDER-NO          PIC X(06).",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "* TECHNICAL PROVIDER CHARGES.                                          *\n080100************************************************************************\n080200 01  BILL-DATA.\n080300         10  B-PROVIDER-NO          PIC X(06).\n080400         10  B-REVIEW-CODE          PIC 9(02).\n080500             88  VALID-REVIEW-CODE     VALUE 00 THRU 08.\n080600             88  PAY-WITH-OUTLIER      VALUE 00 07.",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "*                                                                      *\n082800* THIS IS THE BILL-RECORD THAT WILL BE PASSED TO THE PPCAL001 PROGRAM  *\n082900* AND AFTER FOR PROCESSING IN THE NEW FORMAT.                          *\n083000*                                                                      *",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "* AND AFTER FOR PROCESSING IN THE NEW FORMAT.                          *\n083000*                                                                      *\n083100* B-N-CHARGES-CLAIMED = TOTAL COVERED CHARGES ON THE 0001 (TOTALS      *\n083200* LINE) MINUS BLOOD CLOT COST, KIDNEY COSTS, ACQUISITION COSTS AND     *\n083300* TECHNICAL PROVIDER CHARGES.                                          *\n083400************************************************************************\n083500 01  BILL-NEW-DATA.",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "* B-N-CHARGES-CLAIMED = TOTAL COVERED CHARGES ON THE 0001 (TOTALS      *\n083200* LINE) MINUS BLOOD CLOT COST, KIDNEY COSTS, ACQUISITION COSTS AND     *\n083300* TECHNICAL PROVIDER CHARGES.                                          *\n083400************************************************************************",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "* TECHNICAL PROVIDER CHARGES.                                          *\n083400************************************************************************\n083500 01  BILL-NEW-DATA.\n083600         10  B-N-NPI10.\n083700            15  B-N-NPI8              PIC X(08).\n083800            15  B-N-NPI-FILLER        PIC X(02).\n083900         10  B-N-PROVIDER-NO          PIC X(06).",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "*                                                              *\n093300* THIS IS THE PPS-ADDITIONAL-VARIABLES FORMAT WHICH IS PASSED  *\n093400* TO THE PPCAL04E THROUGH PPCAL125 MODULES FOR PROCESSING.     *\n093500* RECORD LENGTH: 1320                                          *\n093600* TRANSFER ADJ. IS 9(01)V9(05)                                 *\n093700* THIS RECORD WILL FILL PPS-ADDITIONAL-VARIABLES AFTER         *",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "* TO THE PPCAL04E THROUGH PPCAL125 MODULES FOR PROCESSING.     *\n093500* RECORD LENGTH: 1320                                          *\n093600* TRANSFER ADJ. IS 9(01)V9(05)                                 *\n093700* THIS RECORD WILL FILL PPS-ADDITIONAL-VARIABLES AFTER         *\n093800* RETURNING FROM PPCAL FOR RETURN TO FISS.                     *\n093900****************************************************************",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "* TRANSFER ADJ. IS 9(01)V9(05)                                 *\n093700* THIS RECORD WILL FILL PPS-ADDITIONAL-VARIABLES AFTER         *\n093800* RETURNING FROM PPCAL FOR RETURN TO FISS.                     *\n093900****************************************************************\n094000 01  PPS-ADDITIONAL-VARIABLES-PRE13.\n094100     02  PPS-VARIABLES-SECTION1-PRE13     PIC X(218).",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "* RETURNING FROM PPCAL FOR RETURN TO FISS.                     *\n093900****************************************************************\n094000 01  PPS-ADDITIONAL-VARIABLES-PRE13.\n094100     02  PPS-VARIABLES-SECTION1-PRE13     PIC X(218).\n094200     02  PPS-VARIABLES-SECTION2-PRE13.\n094300         05  PPS-OTHER-VARIABLES-PRE13.\n094400             10  PPS-NON-TEMP-RELIEF-PMT-PRE13    PIC 9(07)V9(02).\n094500             10  PPS-NEW-TECH-PAY-ADD-ON-PRE13    PIC 9(07)V9(02).\n094600             10  PPS-LOW-VOL-PAYMENT-PRE13        PIC 9(07)V9(02).",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "*                                                              *\n095200* THIS IS THE PPS-ADDITIONAL-VARIABLES FORMAT WHICH IS PASSED  *\n095300* TO THE PPCAL135 AND PPCAL14B MODULES FOR PROCESSING.         *\n095400* RECORD LENGTH: 1319                                          *\n095500* TRANSFER ADJ. IS 9(01)V9(04)                                 *\n095600* THIS RECORD WILL FILL PPS-ADDITIONAL-VARIABLES AFTER         *",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "* TO THE PPCAL135 AND PPCAL14B MODULES FOR PROCESSING.         *\n095400* RECORD LENGTH: 1319                                          *\n095500* TRANSFER ADJ. IS 9(01)V9(04)                                 *\n095600* THIS RECORD WILL FILL PPS-ADDITIONAL-VARIABLES AFTER         *\n095700* RETURNING FROM PPCAL FOR RETURN TO FISS.                     *",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "* TRANSFER ADJ. IS 9(01)V9(04)                                 *\n095600* THIS RECORD WILL FILL PPS-ADDITIONAL-VARIABLES AFTER         *\n095700* RETURNING FROM PPCAL FOR RETURN TO FISS.                     *\n095800****************************************************************\n095900 01  PPS-ADDITIONAL-VARIABLES-1314.\n096000     02  PPS-VARIABLES-SECTION1-1314      PIC X(218).",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "* RETURNING FROM PPCAL FOR RETURN TO FISS.                     *\n095800****************************************************************\n095900 01  PPS-ADDITIONAL-VARIABLES-1314.\n096000     02  PPS-VARIABLES-SECTION1-1314      PIC X(218).\n096100     02  PPS-VARIABLES-SECTION2-1314.",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "* CHANGE TO THE NDC CODES PER FY 2021 CR# #####                        *\n097300\n097400* THIS IS THE BILL-RECORD THAT WILL BE PASSED TO THE PPCAL215 PROGRAM  *\n097500* AND AFTER FOR PROCESSING IN THE NEW FORMAT.                          *\n097600************************************************************************\n097700 01  BILL-DATA-2021.",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "* THIS IS THE BILL-RECORD THAT WILL BE PASSED TO THE PPCAL215 PROGRAM  *\n097500* AND AFTER FOR PROCESSING IN THE NEW FORMAT.                          *\n097600************************************************************************\n097700 01  BILL-DATA-2021.\n097800         10  B-21-NPI10.\n097900             15  B-21-NPI8             PIC X(08).",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "**YEARCHANGE 2015.2             **********************\n121000*****************************************************************\n121100 PROCEDURE DIVISION  USING BILL-DATA-2021\n121200                           PPS-DATA\n121300                           PRICER-OPT-VERS-SW\n121400                           PPS-ADDITIONAL-VARIABLES",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "*        A. THIS MODULE WILL CALL THE PPCAL MODULES.\n122300*        B. THE PROV-RECORD AND WAGE-INDEX-RECORD ASSOCIATED WITH\n122400*           EACH BILL WILL BE PASSED TO THE PPCAL PROGRAMS.\n122500*****************************************************************\n122600\n122700     MOVE DRV-VERSION TO PPDRV-VERSION.",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "*           EACH BILL WILL BE PASSED TO THE PPCAL PROGRAMS.\n122500*****************************************************************\n122600\n122700     MOVE DRV-VERSION TO PPDRV-VERSION.",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "*    MOVE ZEROES  TO W-PR-INDEX-RECORD\n123500*                    W-NEW-INDEX-RECORD\n123600*                    W-NEW-PR-INDEX-RECORD\n123700*                    W-NEW-CBSA-PR-WI\n123800*                    W-NEW-CBSA-WI\n123900*                    W-RURAL-CBSA-WI\n124000*                    W-RURAL-CBSA-PR-WI\n124100\n124200*****************************************************************",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "*                    W-NEW-PR-INDEX-RECORD\n123700*                    W-NEW-CBSA-PR-WI\n123800*                    W-NEW-CBSA-WI\n123900*                    W-RURAL-CBSA-WI\n124000*                    W-RURAL-CBSA-PR-WI\n124100\n124200*****************************************************************\n124300\n124400     INITIALIZE WAGE-NEW-INDEX-RECORD",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "*                    W-NEW-CBSA-WI\n123900*                    W-RURAL-CBSA-WI\n124000*                    W-RURAL-CBSA-PR-WI\n124100\n124200*****************************************************************\n124300\n124400     INITIALIZE WAGE-NEW-INDEX-RECORD\n124500                WAGE-NEW-CBSA-INDEX-RECORD",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "*                    W-RURAL-CBSA-PR-WI\n124100\n124200*****************************************************************\n124300\n124400     INITIALIZE WAGE-NEW-INDEX-RECORD",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "***     RTC = 98 >> A BILL OLDER THEN 20021001\n128500***\n128600***   THIS NEXT STATEMENT WILL ONLY ALLOW\n128700***      THE LATEST 5 YEARS TO PROCESS\n128800***\n128900",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "***   THIS NEXT STATEMENT WILL ONLY ALLOW\n128700***      THE LATEST 5 YEARS TO PROCESS\n128800***\n128900\n129000***  IF B-21-DISCHARGE-DATE < 20021001\n129100***          MOVE ALL '0' TO  PPS-ADDITIONAL-VARIABLES",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "***  IF B-21-DISCHARGE-DATE < 20021001\n129100***          MOVE ALL '0' TO  PPS-ADDITIONAL-VARIABLES\n129200***          MOVE 98 TO PPS-RTC\n129300***          GOBACK.\n129400***\n129500*****************************************************************\n129600\n129700*EHR INDICATOR CHECK FOR 2015 FORWARD",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "***          MOVE 98 TO PPS-RTC\n129300***          GOBACK.\n129400***\n129500*****************************************************************\n129600",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "*EHR INDICATOR CHECK FOR 2015 FORWARD\n129800\n129900 CHECK-EHR-IND.\n130000     IF B-21-DISCHARGE-DATE > 20140930 AND\n130100        (P-NEW-EHR-REDUC-INDN NOT = 'Y' AND\n130200         P-NEW-EHR-REDUC-INDN NOT = ' ')\n130300           MOVE 65 TO PPS-RTC\n130400             GOBACK\n130500     END-IF.",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "***  GET THE WAGE-INDEX\n130900\n131000     IF B-21-DISCHARGE-DATE > 19990930 AND\n131100        B-21-DISCHARGE-DATE < 20001001\n131200      IF (P-NEW-CHG-CODE-INDEX = 'Y' AND\n131300          P-NEW-GEO-LOC-MSAX = P-NEW-WAGE-INDEX-LOC-MSA)",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "*' = P-NEW-GEO-MSA-1ST OR\n132400                 P-NEW-GEO-MSA-2ND OR\n132500                 P-NEW-GEO-MSA-3RD OR\n132600                 P-NEW-GEO-MSA-4TH\n132700         MOVE ALL '0' TO PPS-ADDITIONAL-VARIABLES\n132800         MOVE 52 TO PPS-RTC\n132900         GOBACK.\n133000",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "*' = P-NEW-CBSA-GEO-1ST OR\n133900                 P-NEW-CBSA-GEO-2ND OR\n134000                 P-NEW-CBSA-GEO-3RD OR\n134100                 P-NEW-CBSA-GEO-4TH OR\n134200                 P-NEW-CBSA-GEO-5TH",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "***     RTC = 52  --  WAGE-INDEX NOT FOUND\n139300     IF PPS-RTC = 52\n139400          MOVE ALL '0' TO  PPS-ADDITIONAL-VARIABLES\n139500          GOBACK.\n139600\n139700*****************************************************************\n139800**            FY 2021 \"            \"                        *****\n139900**          THIS NEXT CALL WILL PROCESS 2021 BILLS  WITH\n140000**              A DISCHARGE DATE ON OR AFTER 20201001",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "**          THIS NEXT CALL WILL PROCESS 2021 BILLS  WITH\n140000**              A DISCHARGE DATE ON OR AFTER 20201001\n140100*****************************************************************\n140200     IF B-21-DISCHARGE-DATE",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "**   TO PROCESS BEFORE 19981001 NON-MILLENNNIUM STANDARD\n141600*****************************************************************\n141700\n141800     MOVE B-21-PROVIDER-NO      TO B-N-PROVIDER-NO.\n141900     MOVE B-21-REVIEW-CODE      TO B-N-REVIEW-CODE.",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "**          THIS NEXT CALL WILL PROCESS 2020 BILLS  WITH\n143800**              A DISCHARGE DATE ON OR AFTER 20191001\n143900*****************************************************************\n144000     IF B-21-DISCHARGE-DATE\n144100              > 20190930",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "**          THIS NEXT CALL WILL PROCESS 2019 BILLS  WITH\n145300**              A DISCHARGE DATE ON OR AFTER 20181001\n145400*****************************************************************\n145500     IF B-21-DISCHARGE-DATE",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "**          THIS NEXT CALL WILL PROCESS 2018 BILLS  WITH\n146800**              A DISCHARGE DATE ON OR AFTER 20171001\n146900*****************************************************************\n147000     IF B-21-DISCHARGE-DATE\n147100              > 20170930\n147200         CALL  PPCAL182 USING BILL-NEW-DATA\n147300                              PPS-DATA\n147400                              PRICER-OPT-VERS-SW\n147500                              PPS-ADDITIONAL-VARIABLES",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "**          THIS NEXT CALL WILL PROCESS 2017 BILLS  WITH\n148300**              A DISCHARGE DATE ON OR AFTER 20161001\n148400*****************************************************************\n148500     IF B-21-DISCHARGE-DATE\n148600              > 20160930\n148700         CALL  PPCAL171 USING BILL-NEW-DATA",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "**          THIS NEXT CALL WILL PROCESS 2016 BILLS  WITH\n149800**              A DISCHARGE DATE ON OR AFTER 20151001\n149900*****************************************************************\n150000     IF B-21-DISCHARGE-DATE\n150100              > 20150930\n150200         CALL  PPCAL163 USING BILL-NEW-DATA",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "**          THIS NEXT CALL WILL PROCESS 2015 BILLS  WITH\n151400**              A DISCHARGE DATE ON OR AFTER 20141001\n151500*****************************************************************\n151600     IF B-21-DISCHARGE-DATE\n151700              > 20140930\n151800         CALL  PPCAL156 USING BILL-NEW-DATA\n151900                              PPS-DATA\n152000                              PRICER-OPT-VERS-SW",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "**            FY 2014 \"HEALTH REFORM\"                       *****\n153000**          THIS NEXT CALL WILL PROCESS 2014 BILLS  WITH\n153100**              A DISCHARGE DATE ON OR AFTER 20131001\n153200*****************************************************************\n153300     IF B-21-DISCHARGE-DATE\n153400              > 20130930\n153500         CALL  PPCAL14B USING BILL-NEW-DATA\n153600                              PPS-DATA\n153700                              PRICER-OPT-VERS-SW",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "**              A DISCHARGE DATE ON OR AFTER 20131001\n153200*****************************************************************\n153300     IF B-21-DISCHARGE-DATE\n153400              > 20130930\n153500         CALL  PPCAL14B USING BILL-NEW-DATA",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "**          THIS NEXT CALL WILL PROCESS 2011 BILLS  WITH\n154900**              A DISCHARGE DATE ON OR AFTER 20121001\n155000*****************************************************************\n155100     IF B-21-DISCHARGE-DATE\n155200              > 20120930\n155300         CALL  PPCAL135 USING BILL-NEW-DATA",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "**          THIS NEXT CALL WILL PROCESS 2011 BILLS  WITH\n156700**              A DISCHARGE DATE ON OR AFTER 20111001\n156800*****************************************************************\n156900     IF B-21-DISCHARGE-DATE\n157000              > 20110930\n157100         CALL  PPCAL125 USING BILL-NEW-DATA",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "**            FY 2011 \"HEALTH REFORM\"                       *****\n158300**          THIS NEXT CALL WILL PROCESS 2011 BILLS  WITH\n158400**              A DISCHARGE DATE ON OR AFTER 20101001\n158500*****************************************************************\n158600     IF B-21-DISCHARGE-DATE\n158700              > 20100930\n158800         CALL  PPCAL119 USING BILL-NEW-DATA\n158900                              PPS-DATA\n159000                              PRICER-OPT-VERS-SW",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "**              A DISCHARGE DATE ON OR AFTER 20101001\n158500*****************************************************************\n158600     IF B-21-DISCHARGE-DATE\n158700              > 20100930\n158800         CALL  PPCAL119 USING BILL-NEW-DATA\n158900                              PPS-DATA\n159000                              PRICER-OPT-VERS-SW\n159100                              PPS-ADDITIONAL-VARIABLES-PRE13",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "**            FY 2010 \"HEALTH REFORM\"                       *****\n160000**          THIS NEXT CALL WILL PROCESS 2010 BILLS  WITH\n160100**              A DISCHARGE DATE ON OR AFTER 20100401\n160200*****************************************************************\n160300     IF B-21-DISCHARGE-DATE\n160400              > 20100331\n160500         CALL  PPCAL10P USING BILL-NEW-DATA\n160600                              PPS-DATA\n160700                              PRICER-OPT-VERS-SW",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "**              A DISCHARGE DATE ON OR AFTER 20100401\n160200*****************************************************************\n160300     IF B-21-DISCHARGE-DATE\n160400              > 20100331\n160500         CALL  PPCAL10P USING BILL-NEW-DATA",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "**          THIS NEXT CALL WILL PROCESS 2010 BILLS  WITH\n161700**        A DISCHARGE DATE ON OR AFTER 20091001 TO 4/01/2010\n161800*****************************************************************\n161900     IF B-21-DISCHARGE-DATE\n162000              > 20090930\n162100         CALL  PPCAL10O USING BILL-NEW-DATA\n162200                              PPS-DATA\n162300                              PRICER-OPT-VERS-SW\n162400                              PPS-ADDITIONAL-VARIABLES-PRE13",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "**          THIS NEXT CALL WILL PROCESS 2009 BILLS  WITH\n163300**              A DISCHARGE DATE ON OR AFTER 20081001\n163400*****************************************************************\n163500     IF B-21-DISCHARGE-DATE\n163600              > 20080930\n163700         CALL  PPCAL09D USING BILL-NEW-DATA\n163800                              PPS-DATA\n163900                              PRICER-OPT-VERS-SW",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "**          THIS NEXT CALL WILL PROCESS 2008 BILLS  WITH\n164900**              A DISCHARGE DATE ON OR AFTER 20071001\n165000*****************************************************************\n165100     IF B-21-DISCHARGE-DATE\n165200              > 20070930",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "**          THIS NEXT CALL WILL PROCESS 2007 BILLS  WITH\n166500**              A DISCHARGE DATE ON OR AFTER 20061001\n166600*****************************************************************\n166700     IF B-21-DISCHARGE-DATE\n166800              > 20060930\n166900         CALL  PPCAL07B USING BILL-NEW-DATA\n167000                              PPS-DATA\n167100                              PRICER-OPT-VERS-SW\n167200                              PPS-ADDITIONAL-VARIABLES-PRE13",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "**          THIS NEXT CALL WILL PROCESS 2006 BILLS  WITH\n168100**              A DISCHARGE DATE ON OR AFTER 20051001\n168200*****************************************************************\n168300     IF B-21-DISCHARGE-DATE\n168400              > 20050930\n168500         CALL  PPCAL069 USING BILL-NEW-DATA\n168600                              PPS-DATA\n168700                              PRICER-OPT-VERS-SW\n168800                              PPS-ADDITIONAL-VARIABLES-PRE13",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "**          THIS NEXT CALL WILL PROCESS 2005 BILLS  WITH\n169900**              A DISCHARGE DATE ON OR AFTER 20041001\n170000*****************************************************************\n170100     IF B-21-DISCHARGE-DATE\n170200              > 20040930",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "**              A DISCHARGE DATE ON OR AFTER 20031001\n171700*****************************************************************\n171800     IF B-21-DISCHARGE-DATE\n171900              > 20030930",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "**              A DISCHARGE DATE ON OR AFTER 20021001\n173400*****************************************************************\n173500     IF B-21-DISCHARGE-DATE\n173600              > 20020930\n173700         CALL  PPCAL038 USING BILL-NEW-DATA\n173800                              PPS-DATA",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "**              A DISCHARGE DATE ON OR AFTER 20011001\n175100*****************************************************************\n175200     IF B-21-DISCHARGE-DATE\n175300              > 20010930\n175400         CALL  PPCAL026 USING BILL-NEW-DATA\n175500                              PPS-DATA\n175600                              PRICER-OPT-VERS-SW",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "**              A DISCHARGE DATE ON OR AFTER 20001001\n176800*****************************************************************\n176900     IF B-21-DISCHARGE-DATE\n177000              > 20000930\n177100         CALL  PPCAL017 USING BILL-NEW-DATA\n177200                              PPS-DATA",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "**              A DISCHARGE DATE ON OR AFTER 19991001\n178500*****************************************************************\n178600     IF B-21-DISCHARGE-DATE\n178700              > 19990930\n178800         CALL  PPCAL006 USING BILL-NEW-DATA\n178900                              PPS-DATA\n179000                              PRICER-OPT-VERS-SW\n179100                              PPS-ADDITIONAL-VARIABLES-PRE13\n179200                              PROV-NEW-HOLD",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "**          THIS NEXT CALL WILL PROCESS 1999 BILLS  WITH\n180000**              A DISCHARGE DATE ON OR AFTER 19981001\n180100*****************************************************************\n180200     IF B-21-DISCHARGE-DATE\n180300              > 19980930\n180400         CALL  PPCAL998 USING BILL-NEW-DATA",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "**   MOVE NEW DATA FORMAT INTO OLD DATA FORMAT\n181600**   TO PROCESS BEFORE 19981001 NON-MILLENNNIUM STANDARD\n181700*****************************************************************\n181800     MOVE ALL '9' TO W-PROV-NEW-HOLD.\n181900     MOVE PROV-NEW-HOLD TO W-PROV-NEW-HOLD.\n182000     PERFORM 2400-CONVERT-PSF.",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "**              A DISCHARGE DATE ON OR AFTER 19971001\n184300*****************************************************************\n184400     IF B-21-DISCHARGE-DATE\n184500              > 19970930\n184600         CALL  PPCAL987 USING BILL-DATA\n184700                              PPS-DATA",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "**          THIS NEXT CALL WILL PROCESS 1997 BILLS  WITH\n185800**              A DISCHARGE DATE ON OR AFTER 19961001\n185900*****************************************************************\n186000     IF B-21-DISCHARGE-DATE\n186100              > 19960930\n186200         CALL  PPCAL974 USING BILL-DATA\n186300                              PPS-DATA\n186400                              PRICER-OPT-VERS-SW\n186500                              PPS-ADDITIONAL-VARIABLES-PRE13",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "**          THIS NEXT CALL WILL PROCESS 1996 BILLS  WITH\n187400**              A DISCHARGE DATE ON OR AFTER 19951001\n187500*****************************************************************\n187600     IF B-21-DISCHARGE-DATE\n187700              > 19950930\n187800         CALL  PPCAL964 USING BILL-DATA\n187900                              PPS-DATA\n188000                              PRICER-OPT-VERS-SW",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "**          THIS NEXT CALL WILL PROCESS 1995 BILLS  WITH\n189000**              A DISCHARGE DATE ON OR AFTER 19941001\n189100*****************************************************************\n189200     IF B-21-DISCHARGE-DATE\n189300              > 19940930\n189400         CALL  PPCAL954 USING BILL-DATA",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "**          THIS NEXT CALL WILL PROCESS 1994 BILLS  WITH\n190600**              A DISCHARGE DATE ON OR AFTER 19931001\n190700*****************************************************************\n190800     IF B-21-DISCHARGE-DATE\n190900              > 19930930\n191000         CALL  PPCAL944 USING BILL-DATA",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "**          THIS NEXT CALL WILL PROCESS 1993 BILLS  WITH\n192200**              A DISCHARGE DATE ON OR AFTER 19921001\n192300*****************************************************************\n192400     IF B-21-DISCHARGE-DATE\n192500              > 19920930\n192600         CALL  PPCAL935 USING BILL-DATA\n192700                              PPS-DATA\n192800                              PRICER-OPT-VERS-SW\n192900                              PPS-ADDITIONAL-VARIABLES-PRE13",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "**          THIS NEXT CALL WILL PROCESS 1992 BILLS  WITH\n193800**              A DISCHARGE DATE ON OR AFTER 19911001\n193900*****************************************************************\n194000     IF B-21-DISCHARGE-DATE\n194100              > 19910930\n194200         CALL  PPCAL926 USING BILL-DATA\n194300                              PPS-DATA\n194400                              PRICER-OPT-VERS-SW\n194500                              PPS-ADDITIONAL-VARIABLES-PRE13",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "**          THIS NEXT CALL WILL PROCESS 1991 BILLS  WITH\n195400**              A DISCHARGE DATE ON OR AFTER 19901001\n195500*****************************************************************\n195600     IF B-21-DISCHARGE-DATE\n195700              > 19900930",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "**          THIS NEXT CALL WILL PROCESS 1990 BILLS  WITH\n197000**              A DISCHARGE DATE ON OR AFTER 19891001\n197100*****************************************************************\n197200     IF B-21-DISCHARGE-DATE\n197300              > 19890930\n197400         CALL  PPCAL905 USING BILL-DATA\n197500                              PPS-DATA\n197600                              PRICER-OPT-VERS-SW",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "**          THIS NEXT CALL WILL PROCESS 1989 BILLS  WITH\n198600**              A DISCHARGE DATE ON OR AFTER 19881001\n198700*****************************************************************\n198800     IF B-21-DISCHARGE-DATE",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "**          THIS NEXT CALL WILL PROCESS 1988 BILLS  WITH\n200200**              A DISCHARGE DATE ON OR AFTER 19871001\n200300*****************************************************************\n200400     IF B-21-DISCHARGE-DATE\n200500              > 19870930\n200600         CALL  PPCAL884 USING BILL-DATA",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "*' TO H-MSAX-LAST-POS.\n209400     PERFORM 0100-GET-MSA THRU 0100-EXIT.\n209500\n209600     IF PPS-RTC = 00\n209700      PERFORM 0300-N-GET-PR-WAGE-INDX",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "*' TO H-CBSA-LAST-POS.\n212300     PERFORM 0150-GET-CBSA THRU 0150-EXIT.\n212400\n212500     IF PPS-RTC = 00\n212600      PERFORM 0350-N-GET-PR-WAGE-INDX\n212700           THRU 0350-EXIT VARYING MA2\n212800           FROM MA1 BY 1 UNTIL",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "*' TO H-CBSA-RURAL-LAST-POS.\n213600     PERFORM 0175-GET-RURAL-CBSA THRU 0175-EXIT.\n213700\n213800     IF PPS-RTC = 00\n213900      PERFORM 0360-N-GET-PR-RURAL-WAGE-INDX\n214000           THRU 0360-EXIT VARYING MA2",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "*\n218300***************************************************************\n218400* USE IPPS COMPARABLE BLENDED WAGE INDEX FROM TABLE IF        *\n218500* PROVIDER FOUND IN TABLE - FOR FY 2015                       *\n218600***************************************************************\n218700***********************************************************\n218800 0370-PRSPC-CODE-RTN.\n218900*",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "* USE IPPS COMPARABLE BLENDED WAGE INDEX FROM TABLE IF        *\n218500* PROVIDER FOUND IN TABLE - FOR FY 2015                       *\n218600***************************************************************\n218700***********************************************************\n218800 0370-PRSPC-CODE-RTN.\n218900*\n219000     SET PRSPC-IDX TO 1.\n219100     SEARCH PRSPC-TAB VARYING PRSPC-IDX\n219200         AT END",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "*\n219000     SET PRSPC-IDX TO 1.\n219100     SEARCH PRSPC-TAB VARYING PRSPC-IDX\n219200         AT END\n219300           MOVE ZERO TO MESWK-PRSPC-WAGEIN-BLEND\n219400       WHEN WK-PRSPC-PROV (PRSPC-IDX) = P-NEW-PROVIDER-NO\n219500         MOVE WK-PRSPC-WAGEIN-BLEND(PRSPC-IDX)\n219600                            TO MESWK-PRSPC-WAGEIN-BLEND.\n219700",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "**1998***********************************************************\n220900     IF B-21-DISCHARGE-DATE > 19970930 AND\n221000        B-21-DISCHARGE-DATE < 19981001\n221100        PERFORM 2300-1998-FLOOR-MSA THRU 2300-1998-EXIT.\n221200",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "**1999***********************************************************\n221400     IF B-21-DISCHARGE-DATE > 19980930 AND\n221500        B-21-DISCHARGE-DATE < 19991001\n221600        PERFORM 2300-1999-FLOOR-MSA THRU 2300-1999-EXIT.\n221700\n221800**2000***********************************************************\n221900     IF B-21-DISCHARGE-DATE > 19990930 AND\n222000        B-21-DISCHARGE-DATE < 20001001",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "**2000***********************************************************\n221900     IF B-21-DISCHARGE-DATE > 19990930 AND\n222000        B-21-DISCHARGE-DATE < 20001001\n222100        PERFORM 2300-2000-FLOOR-MSA THRU 2300-2000-EXIT.\n222200\n222300**2001***********************************************************\n222400     IF B-21-DISCHARGE-DATE > 20000930 AND\n222500        B-21-DISCHARGE-DATE < 20011001\n222600        PERFORM 2300-2001-FLOOR-MSA THRU 2300-2001-EXIT.",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "**2001***********************************************************\n222400     IF B-21-DISCHARGE-DATE > 20000930 AND\n222500        B-21-DISCHARGE-DATE < 20011001\n222600        PERFORM 2300-2001-FLOOR-MSA THRU 2300-2001-EXIT.\n222700\n222800**2002***********************************************************\n222900     IF B-21-DISCHARGE-DATE > 20010930 AND\n223000        B-21-DISCHARGE-DATE < 20021001",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "**2002***********************************************************\n222900     IF B-21-DISCHARGE-DATE > 20010930 AND\n223000        B-21-DISCHARGE-DATE < 20021001\n223100        PERFORM 2300-2002-FLOOR-MSA THRU 2300-2002-EXIT.\n223200\n223300     IF B-21-DISCHARGE-DATE > 20010930 AND\n223400        B-21-DISCHARGE-DATE < 20021001\n223500          PERFORM 2700-2002-WI-401-HOSPITAL THRU 2700-2002-EXIT.\n223600",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "**2003***********************************************************\n223800     IF B-21-DISCHARGE-DATE > 20020930 AND\n223900        B-21-DISCHARGE-DATE < 20031001\n224000          PERFORM 2700-2003-WI-401-HOSPITAL THRU 2700-2003-EXIT.\n224100\n224200     IF B-21-DISCHARGE-DATE > 20020930 AND\n224300        B-21-DISCHARGE-DATE < 20031001",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "**2004***********************************************************\n224700     IF B-21-DISCHARGE-DATE > 20030930 AND\n224800        B-21-DISCHARGE-DATE < 20041001\n224900          PERFORM 2700-2004-WI-401-HOSPITAL THRU 2700-2004-EXIT.\n225000\n225100     IF B-21-DISCHARGE-DATE > 20030930 AND\n225200        B-21-DISCHARGE-DATE < 20041001\n225300        PERFORM 2300-2004-FLOOR-MSA THRU 2300-2004-EXIT.",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "***     RTC = 52  --  MSA NOT FOUND\n225900     IF PPS-RTC = 52    GOBACK.\n226000\n226100     IF PPS-RTC = 00\n226200        PERFORM 0600-N-GET-WAGE-INDX\n226300           THRU 0600-N-EXIT VARYING MU2\n226400           FROM MU1 BY 1 UNTIL",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "***     RTC = 52  --  WAGE-INDEX NOT FOUND\n227200     IF PPS-RTC = 52    GOBACK.\n227300\n227400**2000***********************************************************\n227500     IF B-21-DISCHARGE-DATE > 19990930 AND\n227600        B-21-DISCHARGE-DATE < 20001001\n227700          PERFORM 2500-2000-WI-LUGAR THRU 2500-2000-EXIT.\n227800\n227900**2001***********************************************************",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "**2000***********************************************************\n227500     IF B-21-DISCHARGE-DATE > 19990930 AND\n227600        B-21-DISCHARGE-DATE < 20001001\n227700          PERFORM 2500-2000-WI-LUGAR THRU 2500-2000-EXIT.\n227800",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "**2001***********************************************************\n228000     IF B-21-DISCHARGE-DATE > 20000930 AND\n228100        B-21-DISCHARGE-DATE < 20011001\n228200          PERFORM 2500-2001-WI-LUGAR THRU 2500-2001-EXIT.\n228300\n228400**2003***********************************************************\n228500     IF B-21-DISCHARGE-DATE > 20020930 AND\n228600        B-21-DISCHARGE-DATE < 20031001",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "**2003***********************************************************\n228500     IF B-21-DISCHARGE-DATE > 20020930 AND\n228600        B-21-DISCHARGE-DATE < 20031001\n228700          PERFORM 2500-2003-WI-LUGAR THRU 2500-2003-EXIT.\n228800\n228900**2004***********************************************************",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "**2004***********************************************************\n229000     IF B-21-DISCHARGE-DATE > 20031231 AND\n229100        B-21-DISCHARGE-DATE < 20041001\n229200        PERFORM 2300-2004-RECLASS152 THRU 2300-2004-RECLASS-EXIT.\n229300",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "***  GET THE WAGE-SIZE\n230000\n230100     MOVE P-NEW-STAND-AMT-LOC-MSA TO HOLD-PROV-MSAX.\n230200\n230300     PERFORM 0100-GET-MSA THRU 0100-EXIT.\n230400\n230500     IF PPS-RTC = 00",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "***     RTC = 52  --  PR-WAGE-INDEX NOT FOUND\n231600     IF PPS-RTC = 52\n231700          MOVE ALL '0' TO  PPS-ADDITIONAL-VARIABLES\n231800          GOBACK.",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "**2005*  OCT 1, 2004 CBSA REPLACED MSA\n232400\n232500**----------------------------------------------------------------\n232600** CBSA DOESN'T APPLY TO CLAIMS DISCHARGED BEFORE 10/01/2004\n232700**----------------------------------------------------------------\n232800     IF P-NEW-EFF-DATE < 20041001\n232900        MOVE ALL '0' TO PPS-ADDITIONAL-VARIABLES\n233000        MOVE 52 TO PPS-RTC\n233100        GOBACK.",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "** (EQUIVALENT TO GEO LOCATION CBSA IF NO STAND AMT LOC CBSA)\n233600**----------------------------------------------------------------\n233700     MOVE P-NEW-CBSA-STAND-AMT-LOC TO HOLD-PROV-CBSA.\n233800\n233900**----------------------------------------------------------------\n234000** HOLD THE PROVIDER'S RECLASS CBSA IF RECLASS STATUS INDICATED\n234100**----------------------------------------------------------------\n234200     IF P-NEW-CBSA-WI-RECLASS OR P-NEW-CBSA-WI-DUAL",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "** VALIDATE THE SPECIAL WAGE INDEX VALUE AND EFFECTIVE DATE. IF\n234800** VALID, USE THE SPECIAL WAGE INDEX AND SKIP THE NON-PR SPECIFIC\n234900** CBSA WAGE INDEX SEARCH.\n235000**----------------------------------------------------------------\n235100     IF (P-NEW-CBSA-WI-SPECIAL AND\n235200         P-NEW-CBSA-SPEC-WI-N NOT NUMERIC)",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "** CBSA WAGE INDEX SEARCH.\n235000**----------------------------------------------------------------\n235100     IF (P-NEW-CBSA-WI-SPECIAL AND\n235200         P-NEW-CBSA-SPEC-WI-N NOT NUMERIC)\n235300        MOVE ALL '0' TO PPS-ADDITIONAL-VARIABLES\n235400        MOVE 52 TO PPS-RTC\n235500        GOBACK.",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "*'            TO W-NEW-CBSA-X\n237200        MOVE P-NEW-EFF-DATE     TO W-NEW-CBSA-EFF-DATE\n237300        MOVE P-NEW-CBSA-SPEC-WI TO W-NEW-CBSA-WI\n237400        GO TO 0550-BYPASS.\n237500\n237600**----------------------------------------------------------------\n237700** FOR FYS 2005 - 2014, CHANGE THE HOLD CBSA TO APPLY THE SECTION",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "** 401 HOSPITAL AND RURAL FLOOR POLICIES FOR CERTAIN PROVIDERS\n237900**----------------------------------------------------------------\n238000\n238100**2005***********************************************************\n238200     IF B-21-DISCHARGE-DATE > 20040930 AND\n238300        B-21-DISCHARGE-DATE < 20050401",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "**2005***********************************************************\n238200     IF B-21-DISCHARGE-DATE > 20040930 AND\n238300        B-21-DISCHARGE-DATE < 20050401\n238400          PERFORM 2700-2005-WI-401-HOSPITAL THRU 2700-2005-EXIT.\n238500\n238600     IF B-21-DISCHARGE-DATE > 20050331 AND",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "**2006***********************************************************\n239500\n239600     IF B-21-DISCHARGE-DATE > 20050930 AND\n239700        B-21-DISCHARGE-DATE < 20061001\n239800          PERFORM 2800-2006-WI-401-HOSPITAL THRU 2800-2006-EXIT.\n239900\n240000     IF B-21-DISCHARGE-DATE > 20050930 AND\n240100        B-21-DISCHARGE-DATE < 20061001\n240200        PERFORM 2300-2006-FLOOR-CBSA THRU 2300-2006-EXIT.",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "**2007***********************************************************\n240500\n240600     IF B-21-DISCHARGE-DATE > 20060930 AND\n240700        B-21-DISCHARGE-DATE < 20071001\n240800          PERFORM 2800-2007-WI-401-HOSPITAL THRU 2800-2007-EXIT.\n240900\n241000     IF B-21-DISCHARGE-DATE > 20060930 AND\n241100        B-21-DISCHARGE-DATE < 20071001\n241200        PERFORM 2300-2007-FLOOR-CBSA THRU 2300-2007-EXIT.",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "**2012***********************************************************\n245900\n246000     IF B-21-DISCHARGE-DATE > 20110930 AND\n246100        B-21-DISCHARGE-DATE < 20121001",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "**2014***********************************************************\n248000\n248100     IF B-21-DISCHARGE-DATE > 20130930 AND\n248200        B-21-DISCHARGE-DATE < 20141001",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "**2015***********************************************************\n249000* 401 HOSPITAL PROCESS STOPPED FOR FY2015\n249100**2015***********************************************************\n249200*\n249300*    IF B-21-DISCHARGE-DATE > 20140930\n249400*         PERFORM 2800-2015-WI-401-HOSPITAL THRU 2800-2015-EXIT.\n249500*",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "**2015***********************************************************\n249200*\n249300*    IF B-21-DISCHARGE-DATE > 20140930\n249400*         PERFORM 2800-2015-WI-401-HOSPITAL THRU 2800-2015-EXIT.\n249500*",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "*    IF B-21-DISCHARGE-DATE > 20140930\n249400*         PERFORM 2800-2015-WI-401-HOSPITAL THRU 2800-2015-EXIT.\n249500*\n249600*****************************************************************\n249700\n249800**----------------------------------------------------------------\n249900** SEARCH FOR THE HOLD CBSA IN THE CBSA WAGE INDEX TABLE, AND\n250000** ID THE FIRST RECORD FOR THE HOLD CBSA IN THE TABLE\n250100**----------------------------------------------------------------",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "*\n249600*****************************************************************\n249700\n249800**----------------------------------------------------------------\n249900** SEARCH FOR THE HOLD CBSA IN THE CBSA WAGE INDEX TABLE, AND\n250000** ID THE FIRST RECORD FOR THE HOLD CBSA IN THE TABLE\n250100**----------------------------------------------------------------\n250200     PERFORM 0150-GET-CBSA THRU 0150-EXIT.",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "** ID THE FIRST RECORD FOR THE HOLD CBSA IN THE TABLE\n250100**----------------------------------------------------------------\n250200     PERFORM 0150-GET-CBSA THRU 0150-EXIT.\n250300\n250400***  RTC = 52  --  CBSA NOT FOUND\n250500     IF PPS-RTC = 52 GOBACK.\n250600",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "***  RTC = 52  --  CBSA NOT FOUND\n250500     IF PPS-RTC = 52 GOBACK.\n250600\n250700**----------------------------------------------------------------\n250800** GET CBSA WAGE INDEX - BASED ON DISCHARGE DATE\n250900**----------------------------------------------------------------\n251000     IF PPS-RTC = 00",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "* WI_PCT_ADJ_FY2020.\n256700\n256800 0550-BYPASS.\n256900\n257000**----------------------------------------------------------------\n257100** GET WAGE INDEX FOR INDIAN HEALTH SERVICE PROVIDERS",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "***  RTC = 52  --  WAGE-INDEX NOT FOUND\n257800     IF PPS-RTC = 52 GOBACK.\n257900\n258000     IF W-NEW-CBSA-WI NOT NUMERIC\n258100        MOVE 0 TO W-NEW-CBSA-WI.\n258200\n258300     IF W-NEW-CBSA-WI = 00.0000",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "***  RTC = 52  --  WAGE-INDEX NOT FOUND\n259600     IF PPS-RTC = 52 GOBACK.\n259700\n259800     IF PPS-RTC = 00",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "** WAGE INDEX\n260700**----------------------------------------------------------------\n260800     IF P-PR-NEW-STATE AND B-21-DISCHARGE-DATE < 20161001\n260900        PERFORM 0250-N-GET-CBSA-PR THRU 0250-EXIT.\n261000\n261100**----------------------------------------------------------------\n261200** FOR FYS 2015 AND AFTER, APPLY THE RURAL FLOOR POLICY TO THE\n261300** PUERTO RICO SPECIFIC WAGE INDEX",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "** PUERTO RICO SPECIFIC WAGE INDEX\n261400**----------------------------------------------------------------\n261500     IF P-PR-NEW-STATE AND B-21-DISCHARGE-DATE > 20140930\n261600                       AND B-21-DISCHARGE-DATE < 20161001\n261700        PERFORM 2350-2015-FWD-FLOOR-CBSA-PR\n261800           THRU 2350-2015-EXIT.",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "***  RTC = 52  --  WAGE-INDEX NOT FOUND\n262100     IF PPS-RTC = 52 GOBACK.\n262200\n262300     IF P-PR-NEW-STATE AND B-21-DISCHARGE-DATE > 20160930\n262400        GO TO 0550-EXIT.",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "**************YEARCHANGE 2009.3 **********************      *****\n354300\n354400 2300-2009-FLOOR-CBSA.\n354500\n354600        IF HOLD-PROV-CBSA = '   04'\n354700           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n354800           AND P-NEW-STATE = 04\n354900               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n355000               MOVE '   04' TO HOLD-PROV-CBSA.",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "**************YEARCHANGE 2009.3 **********************      *****\n374300\n374400 2300-2009-EXIT. EXIT.\n374500\n374600**************YEARCHANGE 2010.0 **********************      *****\n374700\n374800 2300-2010-FLOOR-CBSA.\n374900\n375000        IF HOLD-PROV-CBSA = '   33'",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "**************YEARCHANGE 2010.0 **********************      *****\n374700\n374800 2300-2010-FLOOR-CBSA.\n374900\n375000        IF HOLD-PROV-CBSA = '   33'\n375100          AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n375200          AND P-NEW-STATE = 33\n375300               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "**************YEARCHANGE 2010.0 **********************      *****\n390600\n390700 2300-2010-EXIT. EXIT.\n390800\n390900\n391000**************YEARCHANGE 2011.0 **********************      *****",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "**************YEARCHANGE 2011.0 **********************      *****\n391100\n391200 2300-2011-FLOOR-CBSA.\n391300\n391400        IF HOLD-PROV-CBSA = '   45'\n391500          AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n391600          AND P-NEW-STATE = 45\n391700               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n391800               MOVE '   45' TO HOLD-PROV-CBSA.",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "**************YEARCHANGE 2011.0 **********************      *****\n409200\n409300 2300-2011-EXIT. EXIT.\n409400\n409500**************YEARCHANGE 2012.0 **********************      *****\n409600\n409700 2300-2012-FLOOR-CBSA.",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "**************YEARCHANGE 2012.0 **********************      *****\n409600\n409700 2300-2012-FLOOR-CBSA.\n409800\n409900**************YEARCHANGE 2012.0 ******************************\n410000",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "**************YEARCHANGE 2012.0 ******************************\n410000\n410100        IF HOLD-PROV-CBSA = '   30'\n410200          AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n410300          AND P-NEW-STATE = 30\n410400               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "**************YEARCHANGE 2012.0 ******************************\n431200\n431300 2300-2012-EXIT. EXIT.\n431400\n431500**************YEARCHANGE 2013.0 **********************      *****\n431600\n431700 2300-2013-FLOOR-CBSA.\n431800\n431900**************YEARCHANGE 2013.0 ******************************",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "**************YEARCHANGE 2013.0 **********************      *****\n431600\n431700 2300-2013-FLOOR-CBSA.\n431800\n431900**************YEARCHANGE 2013.0 ******************************",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "**************YEARCHANGE 2013.0 ******************************\n432000\n432100        IF HOLD-PROV-CBSA = '10900'\n432200           AND P-NEW-STATE = 31\n432300               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n432400               MOVE '   31' TO HOLD-PROV-CBSA.",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "**************YEARCHANGE 2013.0 ******************************\n450900\n451000 2300-2013-EXIT. EXIT.\n451100\n451200\n451300 2300-2014-FLOOR-CBSA.\n451400",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "**************YEARCHANGE 2014.0 ******************************\n451600\n451700        IF HOLD-PROV-CBSA = '   07'\n451800           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n451900           AND P-NEW-STATE = 07\n452000               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n452100               MOVE '   07' TO HOLD-PROV-CBSA.",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "**************YEARCHANGE 2014.0 ******************************\n467700\n467800 2300-2014-EXIT. EXIT.\n467900\n468000**************YEARCHANGE 2015.0 ******************************\n468100 2300-2015-FWD-FLOOR-CBSA.\n468200\n468300**----------------------------------------------------------------\n468400** ENSURE THE CBSA WAGE INDEX IS A VALID VALUE, ELSE SET ERROR RTC",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "**************YEARCHANGE 2015.0 ******************************\n468100 2300-2015-FWD-FLOOR-CBSA.\n468200\n468300**----------------------------------------------------------------\n468400** ENSURE THE CBSA WAGE INDEX IS A VALID VALUE, ELSE SET ERROR RTC",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "*    IF W-NEW-CBSA-WI NOT NUMERIC\n475000*       MOVE 0 TO W-NEW-CBSA-WI.\n475100\n475200*------------------------------------------------------------*\n475300* IF NO RURAL WAGE INDEX FOUND, SET TO ZERO (VALID BECAUSE   *",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "* SOME STATES DO NOT HAVE A RURAL AREA)                      *\n475500*------------------------------------------------------------*\n475600     IF W-RURAL-CBSA-WI NOT NUMERIC\n475700        MOVE 0 TO W-RURAL-CBSA-WI.",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "* PROVIDER'S CBSA WAGE INDEX, REPLACE THE CBSA AND WAGE      *\n476200* INDEX WITH STATE CODE AND RURAL FLOOR WAGE INDEX           *\n476300*------------------------------------------------------------*\n476400     IF W-RURAL-CBSA-WI > W-NEW-CBSA-WI",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "**************YEARCHANGE 2015.0 ******************************\n477300 2350-2015-FWD-FLOOR-CBSA-PR.\n477400\n477500**----------------------------------------------------------------\n477600** ENSURE PR CBSA WAGE INDEX IS A VALID VALUE, ELSE SET ERROR RTC\n477700**----------------------------------------------------------------\n477800     IF W-NEW-CBSA-PR-WI NOT NUMERIC",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "* ANY YEAR WITH NO PUERTO RICO RURAL AREA)                   *\n480000*------------------------------------------------------------*\n480100     IF W-RURAL-CBSA-PR-WI NOT NUMERIC\n480200        MOVE 0 TO W-RURAL-CBSA-PR-WI.\n480300\n480400*------------------------------------------------------------*\n480500* IF THE STATE'S RURAL FLOOR WAGE INDEX IS HIGHER THAN THE   *",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "* PROVIDER'S CBSA WAGE INDEX, REPLACE THE CBSA AND WAGE      *\n480700* INDEX WITH STATE CODE AND RURAL FLOOR WAGE INDEX           *\n480800*------------------------------------------------------------*\n480900     IF W-RURAL-CBSA-PR-WI > W-NEW-CBSA-PR-WI\n481000        MOVE W-RURAL-CBSA-PR-WI TO W-NEW-CBSA-PR-WI.\n481100\n481200 2350-2015-EXIT. EXIT.\n481300\n481400**************YEARCHANGE 2015.0 ******************************",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "**************YEARCHANGE 2015.0 ******************************\n481500 2400-CONVERT-PSF.\n481600***************************************************************\n481700*              CONVERSION FOR MILLENNIUM                      *\n481800*    CONVERTS TO PSF FROM NEW FORMAT TO OLD FORMAT            *",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "*    CONVERTS TO PSF FROM NEW FORMAT TO OLD FORMAT            *\n481900*    THIS OLD PSF FORMAT IS PROCESSED IN NON-MILLENNIUN       *\n482000*    PPS PROGRAMS                                             *\n482100***************************************************************\n482200     MOVE SPACES TO W-PROV-OLD-HOLD.\n482300     MOVE W-P-NEW-PROVIDER-OSCAR-NO TO W-P-PROVIDER-NO.\n482400\n482500     IF W-P-NEW-EFF-DATE < 0 OR",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "*    PPS PROGRAMS                                             *\n482100***************************************************************\n482200     MOVE SPACES TO W-PROV-OLD-HOLD.\n482300     MOVE W-P-NEW-PROVIDER-OSCAR-NO TO W-P-PROVIDER-NO.\n482400\n482500     IF W-P-NEW-EFF-DATE < 0 OR\n482600        W-P-NEW-EFF-DATE = '00000000'\n482700        MOVE ZEROES TO W-P-EFF-DATE",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "***FYS 2013 AND 2014 - 1319 BYTES***\n617600     IF B-21-DISCHARGE-DATE >= 20121001 AND\n617700        B-21-DISCHARGE-DATE <= 20140930\n617800        MOVE PPS-VARIABLES-SECTION1-1314\n617900            TO PPS-VARIABLES-SECTION1",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "code_snippet_with_comments",
        "description": "Code snippet with comments example",
        "code": "***FYS 2012 AND EARLIER - 1320 BYTES***\n619200     IF B-21-DISCHARGE-DATE < 20121001\n619300        MOVE PPS-VARIABLES-SECTION1-PRE13\n619400            TO PPS-VARIABLES-SECTION1\n619500        MOVE PPS-NON-TEMP-RELIEF-PMT-PRE13\n619600            TO PPS-NON-TEMP-RELIEF-PAYMENT\n619700        MOVE PPS-NEW-TECH-PAY-ADD-ON-PRE13\n619800            TO PPS-NEW-TECH-PAY-ADD-ON",
        "comments": "Example code snippet with accompanying comments."
    },
    {
        "type": "error_pattern",
        "description": "Error pattern example",
        "code": "NOT NUMERIC\n)\n235300        MOVE ALL '0' TO PPS-ADDITIONAL-VARIABLES\n235400        MOVE 52 TO PPS-RTC",
        "comments": "Error or validation pattern to ensure data integrity."
    },
    {
        "type": "error_pattern",
        "description": "Error pattern example",
        "code": "NOT NUMERIC\n\n258100        MOVE 0 TO W-NEW-CBSA-WI.\n258200\n258300     IF W-NEW-CBSA-WI = 00.0000",
        "comments": "Error or validation pattern to ensure data integrity."
    },
    {
        "type": "error_pattern",
        "description": "Error pattern example",
        "code": "NOT NUMERIC\n\n262800        MOVE 0 TO W-NEW-CBSA-PR-WI.",
        "comments": "Error or validation pattern to ensure data integrity."
    },
    {
        "type": "error_pattern",
        "description": "Error pattern example",
        "code": "ERROR RTC\n\n468500**----------------------------------------------------------------\n468600     IF W-NEW-CBSA-WI NOT NUMERIC\n468700        MOVE 0 TO W-NEW-CBSA-WI.\n468800\n468900     IF W-NEW-CBSA-WI = 00.0000",
        "comments": "Error or validation pattern to ensure data integrity."
    },
    {
        "type": "error_pattern",
        "description": "Error pattern example",
        "code": "NOT NUMERIC\n\n468700        MOVE 0 TO W-NEW-CBSA-WI.\n468800\n468900     IF W-NEW-CBSA-WI = 00.0000\n469000        MOVE ALL '0' TO PPS-ADDITIONAL-VARIABLES\n469100        MOVE 52 TO PPS-RTC\n469200        GO TO 2300-2015-EXIT.",
        "comments": "Error or validation pattern to ensure data integrity."
    },
    {
        "type": "error_pattern",
        "description": "Error pattern example",
        "code": "NOT NUMERIC\n\n475000*       MOVE 0 TO W-NEW-CBSA-WI.\n475100\n475200*------------------------------------------------------------*",
        "comments": "Error or validation pattern to ensure data integrity."
    },
    {
        "type": "error_pattern",
        "description": "Error pattern example",
        "code": "NOT NUMERIC\n\n475700        MOVE 0 TO W-RURAL-CBSA-WI.\n475800\n475900*------------------------------------------------------------*",
        "comments": "Error or validation pattern to ensure data integrity."
    },
    {
        "type": "error_pattern",
        "description": "Error pattern example",
        "code": "ERROR RTC\n\n477700**----------------------------------------------------------------\n477800     IF W-NEW-CBSA-PR-WI NOT NUMERIC\n477900        MOVE 0 TO W-NEW-CBSA-WI.\n478000\n478100     IF W-NEW-CBSA-PR-WI = 00.0000\n478200        MOVE ALL '0' TO PPS-ADDITIONAL-VARIABLES",
        "comments": "Error or validation pattern to ensure data integrity."
    },
    {
        "type": "error_pattern",
        "description": "Error pattern example",
        "code": "NOT NUMERIC\n\n477900        MOVE 0 TO W-NEW-CBSA-WI.\n478000\n478100     IF W-NEW-CBSA-PR-WI = 00.0000\n478200        MOVE ALL '0' TO PPS-ADDITIONAL-VARIABLES\n478300        MOVE 52 TO PPS-RTC",
        "comments": "Error or validation pattern to ensure data integrity."
    },
    {
        "type": "error_pattern",
        "description": "Error pattern example",
        "code": "NOT NUMERIC\n\n480200        MOVE 0 TO W-RURAL-CBSA-PR-WI.\n480300\n480400*------------------------------------------------------------*\n480500* IF THE STATE'S RURAL FLOOR WAGE INDEX IS HIGHER THAN THE   *",
        "comments": "Error or validation pattern to ensure data integrity."
    },
    {
        "type": "error_pattern",
        "description": "Error pattern example",
        "code": "NOT NUMERIC\n\n487800        MOVE ZEROES TO W-P-FISCAL-YEAR-END.\n487900\n488000     IF P-NEW-FYE-DATE               < 0  OR",
        "comments": "Error or validation pattern to ensure data integrity."
    },
    {
        "type": "data_structure",
        "description": "Data structure example",
        "code": "005000 01  DRV-VERSION\n                    PIC X(05) VALUE 'D21.5'.\n005100 01  PPCAL884                       PIC X(08) VALUE 'PPCAL884'.\n005200 01  PPCAL894                       PIC X(08) VALUE 'PPCAL894'.\n005300 01  PPCAL905                       PIC X(08) VALUE 'PPCAL905'.\n005400 01  PPCAL915                       PIC X(08) VALUE 'PPCAL915'.",
        "comments": "Definition of a data structure within the Data Division."
    },
    {
        "type": "data_structure",
        "description": "Data structure example",
        "code": "005100 01  PPCAL884\n                       PIC X(08) VALUE 'PPCAL884'.\n005200 01  PPCAL894                       PIC X(08) VALUE 'PPCAL894'.\n005300 01  PPCAL905                       PIC X(08) VALUE 'PPCAL905'.",
        "comments": "Definition of a data structure within the Data Division."
    },
    {
        "type": "data_structure",
        "description": "Data structure example",
        "code": "005200 01  PPCAL894\n                       PIC X(08) VALUE 'PPCAL894'.\n005300 01  PPCAL905                       PIC X(08) VALUE 'PPCAL905'.\n005400 01  PPCAL915                       PIC X(08) VALUE 'PPCAL915'.\n005500 01  PPCAL926                       PIC X(08) VALUE 'PPCAL926'.\n005600 01  PPCAL935                       PIC X(08) VALUE 'PPCAL935'.",
        "comments": "Definition of a data structure within the Data Division."
    },
    {
        "type": "data_structure",
        "description": "Data structure example",
        "code": "005300 01  PPCAL905\n                       PIC X(08) VALUE 'PPCAL905'.\n005400 01  PPCAL915                       PIC X(08) VALUE 'PPCAL915'.\n005500 01  PPCAL926                       PIC X(08) VALUE 'PPCAL926'.",
        "comments": "Definition of a data structure within the Data Division."
    },
    {
        "type": "data_structure",
        "description": "Data structure example",
        "code": "005400 01  PPCAL915\n                       PIC X(08) VALUE 'PPCAL915'.\n005500 01  PPCAL926                       PIC X(08) VALUE 'PPCAL926'.\n005600 01  PPCAL935                       PIC X(08) VALUE 'PPCAL935'.\n005700 01  PPCAL944                       PIC X(08) VALUE 'PPCAL944'.",
        "comments": "Definition of a data structure within the Data Division."
    },
    {
        "type": "data_structure",
        "description": "Data structure example",
        "code": "005500 01  PPCAL926\n                       PIC X(08) VALUE 'PPCAL926'.\n005600 01  PPCAL935                       PIC X(08) VALUE 'PPCAL935'.\n005700 01  PPCAL944                       PIC X(08) VALUE 'PPCAL944'.\n005800 01  PPCAL954                       PIC X(08) VALUE 'PPCAL954'.",
        "comments": "Definition of a data structure within the Data Division."
    },
    {
        "type": "data_structure",
        "description": "Data structure example",
        "code": "005600 01  PPCAL935\n                       PIC X(08) VALUE 'PPCAL935'.\n005700 01  PPCAL944                       PIC X(08) VALUE 'PPCAL944'.\n005800 01  PPCAL954                       PIC X(08) VALUE 'PPCAL954'.\n005900 01  PPCAL964                       PIC X(08) VALUE 'PPCAL964'.\n006000 01  PPCAL974                       PIC X(08) VALUE 'PPCAL974'.\n006100 01  PPCAL987                       PIC X(08) VALUE 'PPCAL987'.",
        "comments": "Definition of a data structure within the Data Division."
    },
    {
        "type": "data_structure",
        "description": "Data structure example",
        "code": "005700 01  PPCAL944\n                       PIC X(08) VALUE 'PPCAL944'.\n005800 01  PPCAL954                       PIC X(08) VALUE 'PPCAL954'.\n005900 01  PPCAL964                       PIC X(08) VALUE 'PPCAL964'.",
        "comments": "Definition of a data structure within the Data Division."
    },
    {
        "type": "data_structure",
        "description": "Data structure example",
        "code": "005800 01  PPCAL954\n                       PIC X(08) VALUE 'PPCAL954'.\n005900 01  PPCAL964                       PIC X(08) VALUE 'PPCAL964'.",
        "comments": "Definition of a data structure within the Data Division."
    },
    {
        "type": "data_structure",
        "description": "Data structure example",
        "code": "005900 01  PPCAL964\n                       PIC X(08) VALUE 'PPCAL964'.\n006000 01  PPCAL974                       PIC X(08) VALUE 'PPCAL974'.\n006100 01  PPCAL987                       PIC X(08) VALUE 'PPCAL987'.\n006200 01  PPCAL998                       PIC X(08) VALUE 'PPCAL998'.\n006300 01  PPCAL006                       PIC X(08) VALUE 'PPCAL006'.",
        "comments": "Definition of a data structure within the Data Division."
    },
    {
        "type": "data_structure",
        "description": "Data structure example",
        "code": "006000 01  PPCAL974\n                       PIC X(08) VALUE 'PPCAL974'.\n006100 01  PPCAL987                       PIC X(08) VALUE 'PPCAL987'.\n006200 01  PPCAL998                       PIC X(08) VALUE 'PPCAL998'.\n006300 01  PPCAL006                       PIC X(08) VALUE 'PPCAL006'.",
        "comments": "Definition of a data structure within the Data Division."
    },
    {
        "type": "data_structure",
        "description": "Data structure example",
        "code": "006100 01  PPCAL987\n                       PIC X(08) VALUE 'PPCAL987'.\n006200 01  PPCAL998                       PIC X(08) VALUE 'PPCAL998'.\n006300 01  PPCAL006                       PIC X(08) VALUE 'PPCAL006'.\n006400 01  PPCAL017                       PIC X(08) VALUE 'PPCAL017'.\n006500 01  PPCAL026                       PIC X(08) VALUE 'PPCAL026'.",
        "comments": "Definition of a data structure within the Data Division."
    },
    {
        "type": "data_structure",
        "description": "Data structure example",
        "code": "006200 01  PPCAL998\n                       PIC X(08) VALUE 'PPCAL998'.\n006300 01  PPCAL006                       PIC X(08) VALUE 'PPCAL006'.\n006400 01  PPCAL017                       PIC X(08) VALUE 'PPCAL017'.\n006500 01  PPCAL026                       PIC X(08) VALUE 'PPCAL026'.",
        "comments": "Definition of a data structure within the Data Division."
    },
    {
        "type": "data_structure",
        "description": "Data structure example",
        "code": "006300 01  PPCAL006\n                       PIC X(08) VALUE 'PPCAL006'.\n006400 01  PPCAL017                       PIC X(08) VALUE 'PPCAL017'.\n006500 01  PPCAL026                       PIC X(08) VALUE 'PPCAL026'.\n006600 01  PPCAL038                       PIC X(08) VALUE 'PPCAL038'.\n006700 01  PPCAL04D                       PIC X(08) VALUE 'PPCAL04D'.\n006800 01  PPCAL059                       PIC X(08) VALUE 'PPCAL059'.\n006900 01  PPCAL069                       PIC X(08) VALUE 'PPCAL069'.",
        "comments": "Definition of a data structure within the Data Division."
    },
    {
        "type": "data_structure",
        "description": "Data structure example",
        "code": "006400 01  PPCAL017\n                       PIC X(08) VALUE 'PPCAL017'.\n006500 01  PPCAL026                       PIC X(08) VALUE 'PPCAL026'.\n006600 01  PPCAL038                       PIC X(08) VALUE 'PPCAL038'.\n006700 01  PPCAL04D                       PIC X(08) VALUE 'PPCAL04D'.\n006800 01  PPCAL059                       PIC X(08) VALUE 'PPCAL059'.\n006900 01  PPCAL069                       PIC X(08) VALUE 'PPCAL069'.\n007000 01  PPCAL07B                       PIC X(08) VALUE 'PPCAL07B'.",
        "comments": "Definition of a data structure within the Data Division."
    },
    {
        "type": "data_structure",
        "description": "Data structure example",
        "code": "006500 01  PPCAL026\n                       PIC X(08) VALUE 'PPCAL026'.\n006600 01  PPCAL038                       PIC X(08) VALUE 'PPCAL038'.",
        "comments": "Definition of a data structure within the Data Division."
    },
    {
        "type": "data_structure",
        "description": "Data structure example",
        "code": "006600 01  PPCAL038\n                       PIC X(08) VALUE 'PPCAL038'.\n006700 01  PPCAL04D                       PIC X(08) VALUE 'PPCAL04D'.",
        "comments": "Definition of a data structure within the Data Division."
    },
    {
        "type": "data_structure",
        "description": "Data structure example",
        "code": "006700 01  PPCAL04D\n                       PIC X(08) VALUE 'PPCAL04D'.\n006800 01  PPCAL059                       PIC X(08) VALUE 'PPCAL059'.\n006900 01  PPCAL069                       PIC X(08) VALUE 'PPCAL069'.\n007000 01  PPCAL07B                       PIC X(08) VALUE 'PPCAL07B'.",
        "comments": "Definition of a data structure within the Data Division."
    },
    {
        "type": "data_structure",
        "description": "Data structure example",
        "code": "006800 01  PPCAL059\n                       PIC X(08) VALUE 'PPCAL059'.\n006900 01  PPCAL069                       PIC X(08) VALUE 'PPCAL069'.\n007000 01  PPCAL07B                       PIC X(08) VALUE 'PPCAL07B'.\n007100 01  PPCAL08D                       PIC X(08) VALUE 'PPCAL08D'.\n007200 01  PPCAL09D                       PIC X(08) VALUE 'PPCAL09D'.\n007300 01  PPCAL10O                       PIC X(08) VALUE 'PPCAL10O'.",
        "comments": "Definition of a data structure within the Data Division."
    },
    {
        "type": "data_structure",
        "description": "Data structure example",
        "code": "006900 01  PPCAL069\n                       PIC X(08) VALUE 'PPCAL069'.\n007000 01  PPCAL07B                       PIC X(08) VALUE 'PPCAL07B'.\n007100 01  PPCAL08D                       PIC X(08) VALUE 'PPCAL08D'.\n007200 01  PPCAL09D                       PIC X(08) VALUE 'PPCAL09D'.",
        "comments": "Definition of a data structure within the Data Division."
    },
    {
        "type": "data_structure",
        "description": "Data structure example",
        "code": "007000 01  PPCAL07B\n                       PIC X(08) VALUE 'PPCAL07B'.\n007100 01  PPCAL08D                       PIC X(08) VALUE 'PPCAL08D'.\n007200 01  PPCAL09D                       PIC X(08) VALUE 'PPCAL09D'.\n007300 01  PPCAL10O                       PIC X(08) VALUE 'PPCAL10O'.\n007400 01  PPCAL10P                       PIC X(08) VALUE 'PPCAL10P'.\n007500 01  PPCAL119                       PIC X(08) VALUE 'PPCAL119'.",
        "comments": "Definition of a data structure within the Data Division."
    },
    {
        "type": "data_structure",
        "description": "Data structure example",
        "code": "007100 01  PPCAL08D\n                       PIC X(08) VALUE 'PPCAL08D'.\n007200 01  PPCAL09D                       PIC X(08) VALUE 'PPCAL09D'.",
        "comments": "Definition of a data structure within the Data Division."
    },
    {
        "type": "data_structure",
        "description": "Data structure example",
        "code": "007200 01  PPCAL09D\n                       PIC X(08) VALUE 'PPCAL09D'.\n007300 01  PPCAL10O                       PIC X(08) VALUE 'PPCAL10O'.\n007400 01  PPCAL10P                       PIC X(08) VALUE 'PPCAL10P'.\n007500 01  PPCAL119                       PIC X(08) VALUE 'PPCAL119'.",
        "comments": "Definition of a data structure within the Data Division."
    },
    {
        "type": "data_structure",
        "description": "Data structure example",
        "code": "007300 01  PPCAL10O\n                       PIC X(08) VALUE 'PPCAL10O'.\n007400 01  PPCAL10P                       PIC X(08) VALUE 'PPCAL10P'.\n007500 01  PPCAL119                       PIC X(08) VALUE 'PPCAL119'.",
        "comments": "Definition of a data structure within the Data Division."
    },
    {
        "type": "data_structure",
        "description": "Data structure example",
        "code": "007400 01  PPCAL10P\n                       PIC X(08) VALUE 'PPCAL10P'.\n007500 01  PPCAL119                       PIC X(08) VALUE 'PPCAL119'.",
        "comments": "Definition of a data structure within the Data Division."
    },
    {
        "type": "data_structure",
        "description": "Data structure example",
        "code": "007500 01  PPCAL119\n                       PIC X(08) VALUE 'PPCAL119'.\n007600 01  PPCAL125                       PIC X(08) VALUE 'PPCAL125'.\n007700 01  PPCAL135                       PIC X(08) VALUE 'PPCAL135'.\n007800 01  PPCAL14B                       PIC X(08) VALUE 'PPCAL14B'.",
        "comments": "Definition of a data structure within the Data Division."
    },
    {
        "type": "data_structure",
        "description": "Data structure example",
        "code": "007600 01  PPCAL125\n                       PIC X(08) VALUE 'PPCAL125'.\n007700 01  PPCAL135                       PIC X(08) VALUE 'PPCAL135'.\n007800 01  PPCAL14B                       PIC X(08) VALUE 'PPCAL14B'.",
        "comments": "Definition of a data structure within the Data Division."
    },
    {
        "type": "data_structure",
        "description": "Data structure example",
        "code": "007700 01  PPCAL135\n                       PIC X(08) VALUE 'PPCAL135'.\n007800 01  PPCAL14B                       PIC X(08) VALUE 'PPCAL14B'.\n007900 01  PPCAL156                       PIC X(08) VALUE 'PPCAL156'.",
        "comments": "Definition of a data structure within the Data Division."
    },
    {
        "type": "data_structure",
        "description": "Data structure example",
        "code": "007800 01  PPCAL14B\n                       PIC X(08) VALUE 'PPCAL14B'.\n007900 01  PPCAL156                       PIC X(08) VALUE 'PPCAL156'.",
        "comments": "Definition of a data structure within the Data Division."
    },
    {
        "type": "data_structure",
        "description": "Data structure example",
        "code": "007900 01  PPCAL156\n                       PIC X(08) VALUE 'PPCAL156'.\n008000 01  PPCAL163                       PIC X(08) VALUE 'PPCAL163'.\n008100 01  PPCAL171                       PIC X(08) VALUE 'PPCAL171'.\n008200 01  PPCAL182                       PIC X(08) VALUE 'PPCAL182'.\n008300 01  PPCAL192                       PIC X(08) VALUE 'PPCAL192'.\n008400 01  PPCAL204                       PIC X(08) VALUE 'PPCAL204'.\n008500 01  PPCAL215                       PIC X(08) VALUE 'PPCAL215'.",
        "comments": "Definition of a data structure within the Data Division."
    },
    {
        "type": "data_structure",
        "description": "Data structure example",
        "code": "008000 01  PPCAL163\n                       PIC X(08) VALUE 'PPCAL163'.\n008100 01  PPCAL171                       PIC X(08) VALUE 'PPCAL171'.\n008200 01  PPCAL182                       PIC X(08) VALUE 'PPCAL182'.",
        "comments": "Definition of a data structure within the Data Division."
    },
    {
        "type": "data_structure",
        "description": "Data structure example",
        "code": "008100 01  PPCAL171\n                       PIC X(08) VALUE 'PPCAL171'.\n008200 01  PPCAL182                       PIC X(08) VALUE 'PPCAL182'.\n008300 01  PPCAL192                       PIC X(08) VALUE 'PPCAL192'.\n008400 01  PPCAL204                       PIC X(08) VALUE 'PPCAL204'.",
        "comments": "Definition of a data structure within the Data Division."
    },
    {
        "type": "data_structure",
        "description": "Data structure example",
        "code": "008200 01  PPCAL182\n                       PIC X(08) VALUE 'PPCAL182'.\n008300 01  PPCAL192                       PIC X(08) VALUE 'PPCAL192'.\n008400 01  PPCAL204                       PIC X(08) VALUE 'PPCAL204'.\n008500 01  PPCAL215                       PIC X(08) VALUE 'PPCAL215'.\n008600\n008700 01  TABLES-LOADED-SW               PIC 9(01) VALUE 0.\n008800 01  EOF-SW                         PIC 9(01) VALUE 0.",
        "comments": "Definition of a data structure within the Data Division."
    },
    {
        "type": "data_structure",
        "description": "Data structure example",
        "code": "008300 01  PPCAL192\n                       PIC X(08) VALUE 'PPCAL192'.\n008400 01  PPCAL204                       PIC X(08) VALUE 'PPCAL204'.\n008500 01  PPCAL215                       PIC X(08) VALUE 'PPCAL215'.\n008600\n008700 01  TABLES-LOADED-SW               PIC 9(01) VALUE 0.\n008800 01  EOF-SW                         PIC 9(01) VALUE 0.\n008900 01  WS-9S                          PIC X(08) VALUE '99999999'.",
        "comments": "Definition of a data structure within the Data Division."
    },
    {
        "type": "data_structure",
        "description": "Data structure example",
        "code": "008400 01  PPCAL204\n                       PIC X(08) VALUE 'PPCAL204'.\n008500 01  PPCAL215                       PIC X(08) VALUE 'PPCAL215'.\n008600\n008700 01  TABLES-LOADED-SW               PIC 9(01) VALUE 0.\n008800 01  EOF-SW                         PIC 9(01) VALUE 0.\n008900 01  WS-9S                          PIC X(08) VALUE '99999999'.\n009000",
        "comments": "Definition of a data structure within the Data Division."
    },
    {
        "type": "data_structure",
        "description": "Data structure example",
        "code": "008500 01  PPCAL215\n                       PIC X(08) VALUE 'PPCAL215'.\n008600\n008700 01  TABLES-LOADED-SW               PIC 9(01) VALUE 0.\n008800 01  EOF-SW                         PIC 9(01) VALUE 0.\n008900 01  WS-9S                          PIC X(08) VALUE '99999999'.\n009000",
        "comments": "Definition of a data structure within the Data Division."
    },
    {
        "type": "data_structure",
        "description": "Data structure example",
        "code": "008700 01  TABLES-LOADED-SW\n               PIC 9(01) VALUE 0.\n008800 01  EOF-SW                         PIC 9(01) VALUE 0.\n008900 01  WS-9S                          PIC X(08) VALUE '99999999'.\n009000\n009100 01  WI_QUARTILE_FY2020       PIC 9(02)V9(04)  VALUE 0.8457.\n009200 01  WI_QUARTILE_FY2021       PIC 9(02)V9(04)  VALUE 0.8469.",
        "comments": "Definition of a data structure within the Data Division."
    },
    {
        "type": "data_structure",
        "description": "Data structure example",
        "code": "008800 01  EOF-SW\n                         PIC 9(01) VALUE 0.\n008900 01  WS-9S                          PIC X(08) VALUE '99999999'.\n009000\n009100 01  WI_QUARTILE_FY2020       PIC 9(02)V9(04)  VALUE 0.8457.\n009200 01  WI_QUARTILE_FY2021       PIC 9(02)V9(04)  VALUE 0.8469.\n009300 01  WI_PCT_REDUC_FY2020      PIC S9(01)V9(02) VALUE -0.05.",
        "comments": "Definition of a data structure within the Data Division."
    },
    {
        "type": "data_structure",
        "description": "Data structure example",
        "code": "008900 01  WS-9S\n                          PIC X(08) VALUE '99999999'.\n009000\n009100 01  WI_QUARTILE_FY2020       PIC 9(02)V9(04)  VALUE 0.8457.",
        "comments": "Definition of a data structure within the Data Division."
    },
    {
        "type": "data_structure",
        "description": "Data structure example",
        "code": "010100 01  HOLD-OUTM-DATA\n.\n010200     05  OUTM-IND                       PIC 9(01) VALUE 0.",
        "comments": "Definition of a data structure within the Data Division."
    },
    {
        "type": "data_structure",
        "description": "Data structure example",
        "code": "011100 01  HOLD-RUFL-DATA\n.\n011200     05  RUFL-IDX2                      PIC 9(03) VALUE 0.\n011300",
        "comments": "Definition of a data structure within the Data Division."
    },
    {
        "type": "data_structure",
        "description": "Data structure example",
        "code": "011900 01  HOLD-PREV-DATA\n.\n012000     05  HLD-PREV-WI                    PIC S9(02)V9(04).\n012100\n012200 01  HOLD-PROV-MSAX.\n012300         10  H-MSAX-PROV-BLANK   PIC X(2).\n012400         10  H-MSAX-PROV-STATE.\n012500             15  FILLER          PIC X.",
        "comments": "Definition of a data structure within the Data Division."
    },
    {
        "type": "data_structure",
        "description": "Data structure example",
        "code": "012200 01  HOLD-PROV-MSAX\n.\n012300         10  H-MSAX-PROV-BLANK   PIC X(2).\n012400         10  H-MSAX-PROV-STATE.",
        "comments": "Definition of a data structure within the Data Division."
    },
    {
        "type": "data_structure",
        "description": "Data structure example",
        "code": "012800 01  HOLD-PROV-CBSA\n.\n012900         10  H-CBSA-PROV-BLANK      PIC X(3).\n013000         10  H-CBSA-PROV-STATE.\n013100             15  FILLER             PIC X.\n013200             15  H-CBSA-LAST-POS    PIC X.",
        "comments": "Definition of a data structure within the Data Division."
    },
    {
        "type": "data_structure",
        "description": "Data structure example",
        "code": "013400 01  HOLD-RURAL-CBSA\n.\n013500         10  H-CBSA-RURAL-BLANK     PIC X(3).",
        "comments": "Definition of a data structure within the Data Division."
    },
    {
        "type": "data_structure",
        "description": "Data structure example",
        "code": "014300 01  W-FY-BEGIN-DATE\n.\n014400         05  W-FY-BEGIN-CC              PIC 9(02).\n014500         05  W-FY-BEGIN-YY              PIC 9(02).\n014600         05  W-FY-BEGIN-MM              PIC 9(02) VALUE 10.\n014700         05  W-FY-BEGIN-DD              PIC 9(02) VALUE 01.\n014800",
        "comments": "Definition of a data structure within the Data Division."
    },
    {
        "type": "data_structure",
        "description": "Data structure example",
        "code": "014900 01  W-FY-END-DATE\n.\n015000         05  W-FY-END-CC                PIC 9(02).\n015100         05  W-FY-END-YY                PIC 9(02).",
        "comments": "Definition of a data structure within the Data Division."
    },
    {
        "type": "data_structure",
        "description": "Data structure example",
        "code": "015800 01  PRSPC-PROV-TABLE\n.\n015900     05 PRSPC-PROV-BLEND-DATA.\n016000         10  FILLER      PIC X(14) VALUE '400001  010206'.\n016100         10  FILLER      PIC X(14) VALUE '400003  009532'.\n016200         10  FILLER      PIC X(14) VALUE '400004  010206'.",
        "comments": "Definition of a data structure within the Data Division."
    },
    {
        "type": "data_structure",
        "description": "Data structure example",
        "code": "021000 01  MES-PRSPC\n.\n021100     05  MES-PRSPC-PROV                PIC X(6).\n021200     05  FILLER                        PIC XXX.\n021300     05  MESWK-PRSPC-WAGEIN-BLEND      PIC S9(02)V9(04).\n021400",
        "comments": "Definition of a data structure within the Data Division."
    },
    {
        "type": "data_structure",
        "description": "Data structure example",
        "code": "021900 01  W-PROV-OLD-HOLD\n.\n022000     02  W-PROV-OLDREC-HOLD1.\n022100         05  W-P-PROVIDER-NO.\n022200             10  W-P-STATE                PIC X(02).\n022300             10  FILLER                   PIC X(04).\n022400         05  W-P-EFF-DATE.",
        "comments": "Definition of a data structure within the Data Division."
    },
    {
        "type": "data_structure",
        "description": "Data structure example",
        "code": "030400 01  W-PROV-NEW-HOLD\n.\n030500     02  W-PROV-NEWREC-HOLD1.\n030600         05  W-P-NEW-NPI10.\n030700             10  W-P-NEW-NPI8           PIC X(08).",
        "comments": "Definition of a data structure within the Data Division."
    },
    {
        "type": "data_structure",
        "description": "Data structure example",
        "code": "042700 01  WAGE-NEW-INDEX-RECORD\n.\n042800     05  W-NEW-MSA               PIC 9(4).\n042900     05  W-NEW-SIZE              PIC X(01).\n043000         88  NEW-LARGE-URBAN       VALUE 'L'.\n043100         88  NEW-OTHER-URBAN       VALUE 'O'.",
        "comments": "Definition of a data structure within the Data Division."
    },
    {
        "type": "data_structure",
        "description": "Data structure example",
        "code": "044800 01  WAGE-NEW-CBSA-INDEX-RECORD\n.\n044900     05  W-NEW-CBSA               PIC 9(5).\n045000     05  W-NEW-CBSA-X  REDEFINES W-NEW-CBSA     PIC X(05).\n045100     05  W-NEW-CBSA-SIZE              PIC X(01).\n045200         88  NEW-CBSA-LARGE-URBAN       VALUE 'L'.",
        "comments": "Definition of a data structure within the Data Division."
    },
    {
        "type": "data_structure",
        "description": "Data structure example",
        "code": "047000 01  WAGE-RURAL-CBSA-INDEX-RECORD\n.\n047100     05  W-RURAL-CBSA             PIC 9(5).\n047200     05  W-RURAL-CBSA-X REDEFINES W-RURAL-CBSA  PIC X(05).",
        "comments": "Definition of a data structure within the Data Division."
    },
    {
        "type": "data_structure",
        "description": "Data structure example",
        "code": "049200 01  WAGE-INDEX-RECORD\n.\n049300     05  W-MSA               PIC 9(4).\n049400     05  W-SIZE              PIC X(01).\n049500         88  LARGE-URBAN       VALUE 'L'.",
        "comments": "Definition of a data structure within the Data Division."
    },
    {
        "type": "data_structure",
        "description": "Data structure example",
        "code": "050900 01  PROV-NEW-HOLD\n.\n051000     02  PROV-NEWREC-HOLD1.\n051100         05  P-NEW-NPI10.\n051200             10  P-NEW-NPI8             PIC X(08).\n051300             10  P-NEW-NPI-FILLER       PIC X(02).\n051400         05  P-NEW-PROVIDER-NO.",
        "comments": "Definition of a data structure within the Data Division."
    },
    {
        "type": "data_structure",
        "description": "Data structure example",
        "code": "069800 01  PROV-HOLD\n.\n069900     02  PROV-REC-HOLD1.\n070000         05  P-PROVIDER-NO.\n070100             10  P-STATE                PIC X(02).\n070200             10  FILLER                 PIC X(04).",
        "comments": "Definition of a data structure within the Data Division."
    },
    {
        "type": "data_structure",
        "description": "Data structure example",
        "code": "080200 01  BILL-DATA\n.\n080300         10  B-PROVIDER-NO          PIC X(06).\n080400         10  B-REVIEW-CODE          PIC 9(02).\n080500             88  VALID-REVIEW-CODE     VALUE 00 THRU 08.\n080600             88  PAY-WITH-OUTLIER      VALUE 00 07.",
        "comments": "Definition of a data structure within the Data Division."
    },
    {
        "type": "data_structure",
        "description": "Data structure example",
        "code": "083500 01  BILL-NEW-DATA\n.\n083600         10  B-N-NPI10.\n083700            15  B-N-NPI8              PIC X(08).\n083800            15  B-N-NPI-FILLER        PIC X(02).\n083900         10  B-N-PROVIDER-NO          PIC X(06).\n084000         10  B-N-REVIEW-CODE          PIC 9(02).\n084100             88  N-VALID-REVIEW-CODE    VALUE 00 THRU 09 11.",
        "comments": "Definition of a data structure within the Data Division."
    },
    {
        "type": "data_structure",
        "description": "Data structure example",
        "code": "094000 01  PPS-ADDITIONAL-VARIABLES-PRE13\n.\n094100     02  PPS-VARIABLES-SECTION1-PRE13     PIC X(218).\n094200     02  PPS-VARIABLES-SECTION2-PRE13.\n094300         05  PPS-OTHER-VARIABLES-PRE13.\n094400             10  PPS-NON-TEMP-RELIEF-PMT-PRE13    PIC 9(07)V9(02).\n094500             10  PPS-NEW-TECH-PAY-ADD-ON-PRE13    PIC 9(07)V9(02).\n094600             10  PPS-LOW-VOL-PAYMENT-PRE13        PIC 9(07)V9(02).",
        "comments": "Definition of a data structure within the Data Division."
    },
    {
        "type": "data_structure",
        "description": "Data structure example",
        "code": "095900 01  PPS-ADDITIONAL-VARIABLES-1314\n.\n096000     02  PPS-VARIABLES-SECTION1-1314      PIC X(218).\n096100     02  PPS-VARIABLES-SECTION2-1314.",
        "comments": "Definition of a data structure within the Data Division."
    },
    {
        "type": "data_structure",
        "description": "Data structure example",
        "code": "097700 01  BILL-DATA-2021\n.\n097800         10  B-21-NPI10.\n097900             15  B-21-NPI8             PIC X(08).\n098000             15  B-21-NPI-FILLER       PIC X(02).\n098100         10  B-21-PROVIDER-NO         PIC X(06).",
        "comments": "Definition of a data structure within the Data Division."
    },
    {
        "type": "data_structure",
        "description": "Data structure example",
        "code": "108000 01  PPS-DATA\n.\n108100         10  PPS-RTC                PIC 9(02).\n108200         10  PPS-WAGE-INDX          PIC 9(02)V9(04).\n108300         10  PPS-OUTLIER-DAYS       PIC 9(03).\n108400         10  PPS-AVG-LOS            PIC 9(02)V9(01).",
        "comments": "Definition of a data structure within the Data Division."
    },
    {
        "type": "data_structure",
        "description": "Data structure example",
        "code": "109600 01  PRICER-OPT-VERS-SW\n.\n109700     02  PRICER-OPTION-SW               PIC X(01).\n109800         88  ALL-TABLES-PASSED          VALUE 'A'.\n109900         88  PROV-RECORD-PASSED         VALUE 'P'.",
        "comments": "Definition of a data structure within the Data Division."
    },
    {
        "type": "data_structure",
        "description": "Data structure example",
        "code": "110400 01  PPS-ADDITIONAL-VARIABLES\n.\n110500     02  PPS-VARIABLES-SECTION1.",
        "comments": "Definition of a data structure within the Data Division."
    },
    {
        "type": "data_structure",
        "description": "Data structure example",
        "code": "118000 01  PROV-RECORD\n.\n118100     05  PROV-RECORD1               PIC X(80).\n118200     05  PROV-RECORD2               PIC X(80).\n118300     05  PROV-RECORD3               PIC X(150).\n118400\n118500 01  MSAX-WI-TABLE.",
        "comments": "Definition of a data structure within the Data Division."
    },
    {
        "type": "data_structure",
        "description": "Data structure example",
        "code": "118500 01  MSAX-WI-TABLE\n.\n118600     05  M-MSAX-DATA                OCCURS 9000\n118700                                    INDEXED BY MU1 MU2 MU3.\n118800         10  M-MSAX-MSA             PIC X(4).\n118900         10  M-MSAX-SIZE            PIC X(01).\n119000         10  M-MSAX-EFF-DATE        PIC X(08).",
        "comments": "Definition of a data structure within the Data Division."
    },
    {
        "type": "data_structure",
        "description": "Data structure example",
        "code": "119400 01  CBSA-WI-TABLE\n.\n119500     05  T-CBSA-DATA                  OCCURS 8000\n119600                                    INDEXED BY MA1 MA2 MA3.\n119700         10  T-CBSA                   PIC X(5).",
        "comments": "Definition of a data structure within the Data Division."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE ALL '0' TO PPS-DATA\n.\n123000     MOVE ALL '0' TO PPS-ADDITIONAL-VARIABLES-PRE13.\n123100     MOVE ALL '0' TO PPS-ADDITIONAL-VARIABLES-1314.\n123200     MOVE ALL '0' TO PPS-ADDITIONAL-VARIABLES.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE ALL '0' TO PPS-ADDITIONAL-VARIABLES-PRE13\n.\n123100     MOVE ALL '0' TO PPS-ADDITIONAL-VARIABLES-1314.\n123200     MOVE ALL '0' TO PPS-ADDITIONAL-VARIABLES.\n123300\n123400*    MOVE ZEROES  TO W-PR-INDEX-RECORD",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE ALL '0' TO PPS-ADDITIONAL-VARIABLES-1314\n.\n123200     MOVE ALL '0' TO PPS-ADDITIONAL-VARIABLES.\n123300\n123400*    MOVE ZEROES  TO W-PR-INDEX-RECORD\n123500*                    W-NEW-INDEX-RECORD",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE ALL '0' TO PPS-ADDITIONAL-VARIABLES\n.\n123300",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE ZEROES  TO W-PR-INDEX-RECORD\n\n123500*                    W-NEW-INDEX-RECORD\n123600*                    W-NEW-PR-INDEX-RECORD\n123700*                    W-NEW-CBSA-PR-WI\n123800*                    W-NEW-CBSA-WI",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE ALL '0' TO  PPS-ADDITIONAL-VARIABLES\n\n129200***          MOVE 98 TO PPS-RTC\n129300***          GOBACK.\n129400***\n129500*****************************************************************",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 98 TO PPS-RTC\n\n129300***          GOBACK.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 65 TO PPS-RTC\n\n130400             GOBACK",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE ALL '0' TO PPS-ADDITIONAL-VARIABLES\n\n131900          MOVE 52 TO PPS-RTC\n132000          GOBACK.\n132100\n132200     IF P-NEW-EFF-DATE < 20041001",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 52 TO PPS-RTC\n\n132000          GOBACK.\n132100\n132200     IF P-NEW-EFF-DATE < 20041001\n132300        IF '*' = P-NEW-GEO-MSA-1ST OR\n132400                 P-NEW-GEO-MSA-2ND OR\n132500                 P-NEW-GEO-MSA-3RD OR",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE ALL '0' TO PPS-ADDITIONAL-VARIABLES\n\n132800         MOVE 52 TO PPS-RTC\n132900         GOBACK.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 52 TO PPS-RTC\n\n132900         GOBACK.\n133000\n133100     IF P-NEW-EFF-DATE < 20041001 AND\n133200        B-21-DISCHARGE-DATE > 20040930\n133300        MOVE ALL '0' TO PPS-ADDITIONAL-VARIABLES\n133400        MOVE 52 TO PPS-RTC",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE ALL '0' TO PPS-ADDITIONAL-VARIABLES\n\n133400        MOVE 52 TO PPS-RTC",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 52 TO PPS-RTC\n\n133500        GOBACK.\n133600\n133700     IF P-NEW-EFF-DATE > 20040930\n133800        IF '*' = P-NEW-CBSA-GEO-1ST OR\n133900                 P-NEW-CBSA-GEO-2ND OR",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE ALL '0' TO PPS-ADDITIONAL-VARIABLES\n\n134400         MOVE 52 TO PPS-RTC\n134500         GOBACK.\n134600",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 52 TO PPS-RTC\n\n134500         GOBACK.\n134600\n134700     IF P-NEW-EFF-DATE < 20041001\n134800        IF (P-NEW-WAGE-INDEX-LOC-MSA = '    ' OR\n134900            P-NEW-WAGE-INDEX-LOC-MSA = '0000')",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE ALL '0' TO  PPS-ADDITIONAL-VARIABLES\n\n139500          GOBACK.\n139600\n139700*****************************************************************\n139800**            FY 2021 \"            \"                        *****\n139900**          THIS NEXT CALL WILL PROCESS 2021 BILLS  WITH\n140000**              A DISCHARGE DATE ON OR AFTER 20201001",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 0 TO PPS-ISLET-ISOL-PAY-ADD-ON\n\n151000         GOBACK.\n151100*****************************************************************\n151200**            FY 2015 \"HEALTH REFORM\"                       *****",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 0 TO PPS-ISLET-ISOL-PAY-ADD-ON\n\n152600         GOBACK.\n152700*****************************************************************\n152800*****************************************************************\n152900**            FY 2014 \"HEALTH REFORM\"                       *****\n153000**          THIS NEXT CALL WILL PROCESS 2014 BILLS  WITH",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE ALL '9' TO W-PROV-NEW-HOLD\n.\n181900     MOVE PROV-NEW-HOLD TO W-PROV-NEW-HOLD.\n182000     PERFORM 2400-CONVERT-PSF.\n182100     MOVE W-PROV-OLD-HOLD TO PROV-HOLD.\n182200\n182300     MOVE W-NEW-MSA             TO W-MSA.\n182400     MOVE W-NEW-SIZE            TO W-SIZE.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 98 TO PPS-RTC\n.\n201800     GOBACK.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 999999 TO P-PROVIDER-NO\n\n202600          MOVE 52     TO PPS-RTC\n202700          GO TO 0100-EXIT\n202800     WHEN M-MSAX-MSA (MU1) = HOLD-PROV-MSAX",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 52     TO PPS-RTC\n\n202700          GO TO 0100-EXIT\n202800     WHEN M-MSAX-MSA (MU1) = HOLD-PROV-MSAX\n202900          SET MU2 TO MU1.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 999999 TO P-PROVIDER-NO\n\n203900          MOVE 52     TO PPS-RTC\n204000          GO TO 0150-EXIT",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 52     TO PPS-RTC\n\n204000          GO TO 0150-EXIT\n204100     WHEN T-CBSA  (MA1) = HOLD-PROV-CBSA\n204200          SET MA2 TO MA1.\n204300\n204400 0150-EXIT.  EXIT.\n204500",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   00'              TO W-RURAL-CBSA-X\n\n206300       MOVE 99999999             TO W-RURAL-CBSA-EFF-DATE\n206400       MOVE 0                    TO W-RURAL-CBSA-WI\n206500       GO TO 0175-EXIT\n206600     WHEN T-CBSA  (MA1) = HOLD-RURAL-CBSA",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 99999999             TO W-RURAL-CBSA-EFF-DATE\n\n206400       MOVE 0                    TO W-RURAL-CBSA-WI",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 0                    TO W-RURAL-CBSA-WI\n\n206500       GO TO 0175-EXIT\n206600     WHEN T-CBSA  (MA1) = HOLD-RURAL-CBSA\n206700          SET MA2 TO MA1.\n206800\n206900 0175-EXIT.  EXIT.\n207000",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   00'              TO W-RURAL-CBSA-X\n\n207800       MOVE 99999999             TO W-RURAL-CBSA-EFF-DATE\n207900       MOVE 0                    TO W-RURAL-CBSA-WI\n208000       GO TO 0190-EXIT\n208100     WHEN RUFL-CBSA(RUFL-IDX) = HOLD-RURAL-CBSA",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 99999999             TO W-RURAL-CBSA-EFF-DATE\n\n207900       MOVE 0                    TO W-RURAL-CBSA-WI\n208000       GO TO 0190-EXIT\n208100     WHEN RUFL-CBSA(RUFL-IDX) = HOLD-RURAL-CBSA",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 0                    TO W-RURAL-CBSA-WI\n\n208000       GO TO 0190-EXIT\n208100     WHEN RUFL-CBSA(RUFL-IDX) = HOLD-RURAL-CBSA\n208200          SET RUFL-IDX2 TO RUFL-IDX.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE ZERO TO MESWK-PRSPC-WAGEIN-BLEND\n.\n210700\n210800     IF B-21-DISCHARGE-DATE > 20140930 AND",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE ZERO TO MESWK-PRSPC-WAGEIN-BLEND\n\n219400       WHEN WK-PRSPC-PROV (PRSPC-IDX) = P-NEW-PROVIDER-NO\n219500         MOVE WK-PRSPC-WAGEIN-BLEND(PRSPC-IDX)\n219600                            TO MESWK-PRSPC-WAGEIN-BLEND.\n219700\n219800\n219900 0370-EXIT.   EXIT.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 00 TO PPS-RTC\n\n226900             PERFORM 0800-N-GET-INDIAN-WI THRU 0800-N-EXIT.\n227000\n227100***     RTC = 52  --  WAGE-INDEX NOT FOUND\n227200     IF PPS-RTC = 52    GOBACK.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE ALL '0' TO PPS-ADDITIONAL-VARIABLES\n\n229700        MOVE 52 TO PPS-RTC.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 52 TO PPS-RTC\n.\n229800\n229900***  GET THE WAGE-SIZE\n230000\n230100     MOVE P-NEW-STAND-AMT-LOC-MSA TO HOLD-PROV-MSAX.\n230200",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE ALL '0' TO  PPS-ADDITIONAL-VARIABLES\n\n231800          GOBACK.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE ALL '0' TO PPS-ADDITIONAL-VARIABLES\n\n233000        MOVE 52 TO PPS-RTC\n233100        GOBACK.\n233200\n233300**----------------------------------------------------------------\n233400** HOLD THE PROVIDER'S CBSA FROM PSF",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 52 TO PPS-RTC\n\n233100        GOBACK.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE ALL '0' TO PPS-ADDITIONAL-VARIABLES\n\n235400        MOVE 52 TO PPS-RTC\n235500        GOBACK.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 52 TO PPS-RTC\n\n235500        GOBACK.\n235600\n235700     IF (P-NEW-CBSA-WI-SPECIAL AND\n235800         P-NEW-CBSA-SPEC-WI-N = ZEROES)",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE ALL '0' TO PPS-ADDITIONAL-VARIABLES\n\n236000        MOVE 52 TO PPS-RTC",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 52 TO PPS-RTC\n\n236100        GOBACK.\n236200\n236300     IF (P-NEW-CBSA-WI-SPECIAL AND\n236400        (P-NEW-EFF-DATE < W-FY-BEGIN-DATE OR\n236500         P-NEW-EFF-DATE > W-FY-END-DATE))\n236600        MOVE ALL '0' TO PPS-ADDITIONAL-VARIABLES",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE ALL '0' TO PPS-ADDITIONAL-VARIABLES\n\n236700        MOVE 52 TO PPS-RTC\n236800        GOBACK.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 52 TO PPS-RTC\n\n236800        GOBACK.\n236900",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 52 TO PPS-RTC\n\n255600           GOBACK.\n255700\n255800     IF B-21-DISCHARGE-DATE > 20190930 AND\n255900        B-21-DISCHARGE-DATE < 20201001\n256000        PERFORM 1000-GET-PREVYR-WI THRU 1000-EXIT.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 00 TO PPS-RTC\n\n257500        PERFORM 0850-N-GET-CBSA-INDIAN-WI THRU 0850-EXIT.\n257600\n257700***  RTC = 52  --  WAGE-INDEX NOT FOUND\n257800     IF PPS-RTC = 52 GOBACK.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 0 TO W-NEW-CBSA-WI\n.\n258200\n258300     IF W-NEW-CBSA-WI = 00.0000\n258400        MOVE ALL '0' TO PPS-ADDITIONAL-VARIABLES\n258500        MOVE 52 TO PPS-RTC\n258600        GOBACK.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE ALL '0' TO PPS-ADDITIONAL-VARIABLES\n\n258500        MOVE 52 TO PPS-RTC\n258600        GOBACK.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 52 TO PPS-RTC\n\n258600        GOBACK.\n258700\n258800**----------------------------------------------------------------",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 0 TO W-NEW-CBSA-PR-WI\n.\n262900\n263000     IF P-PR-NEW-STATE AND",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE ALL '0' TO PPS-ADDITIONAL-VARIABLES\n\n263300        MOVE 52 TO PPS-RTC\n263400        GOBACK.\n263500\n263600 0550-EXIT.  EXIT.\n263700",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 52 TO PPS-RTC\n\n263400        GOBACK.\n263500",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'R' TO W-NEW-SIZE\n\n270200         ELSE\n270300         IF  M-MSAX-SIZE (MU2) = 'L'\n270400             MOVE 'L' TO W-NEW-SIZE\n270500         ELSE\n270600             MOVE 'O' TO W-NEW-SIZE.\n270700 0700-N-EXIT.  EXIT.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'L' TO W-NEW-SIZE\n\n270500         ELSE\n270600             MOVE 'O' TO W-NEW-SIZE.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'O' TO W-NEW-SIZE\n.\n270700 0700-N-EXIT.  EXIT.\n270800\n270900 0750-GET-CBSA-SIZE.\n271000\n271100     IF  B-21-DISCHARGE-DATE NOT < T-CBSA-EFF-DATE (MA2)",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'R' TO W-NEW-CBSA-SIZE\n\n271400         ELSE\n271500         IF  T-CBSA-SIZE (MA2) = 'L'\n271600             MOVE 'L' TO W-NEW-CBSA-SIZE\n271700         ELSE\n271800             MOVE 'O' TO W-NEW-CBSA-SIZE.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'L' TO W-NEW-CBSA-SIZE\n\n271700         ELSE\n271800             MOVE 'O' TO W-NEW-CBSA-SIZE.\n271900 0750-EXIT.  EXIT.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'O' TO W-NEW-CBSA-SIZE\n.\n271900 0750-EXIT.  EXIT.\n272000\n272100 0800-N-GET-INDIAN-WI.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 98 TO H-MSAX-PROV-STATE\n\n272400     ELSE\n272500             MOVE 99 TO H-MSAX-PROV-STATE.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 99 TO H-MSAX-PROV-STATE\n.\n272600",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE   '  '  TO H-MSAX-PROV-BLANK\n.\n272800\n272900     PERFORM 0100-GET-MSA THRU 0100-EXIT.\n273000\n273100     IF PPS-RTC = 00\n273200        PERFORM 0600-N-GET-WAGE-INDX",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 98 TO H-CBSA-PROV-STATE\n\n274200     ELSE",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 99 TO H-CBSA-PROV-STATE\n.\n274400\n274500     MOVE  '   '  TO H-CBSA-PROV-BLANK.\n274600\n274700     PERFORM 0150-GET-CBSA THRU 0150-EXIT.\n274800",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE  '   '  TO H-CBSA-PROV-BLANK\n.\n274600\n274700     PERFORM 0150-GET-CBSA THRU 0150-EXIT.\n274800\n274900     IF PPS-RTC = 00\n275000        PERFORM 0650-N-GET-CBSA-WAGE-INDX\n275100            THRU 0650-N-EXIT VARYING MA2",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 1 TO OUTM-IND\n.\n276600\n276700 0900-EXIT.  EXIT.\n276800\n276900 0950-GET-OUTM-ADJ.\n277000\n277100     IF OUTM-EFF-DATE(OUTM-IDX2) <= B-21-DISCHARGE-DATE AND",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 52 TO PPS-RTC\n\n278500       GOBACK\n278600     WHEN PREV-PROV(PREV-IDX) = P-NEW-PROVIDER-NO\n278700       MOVE PREV-WI(PREV-IDX) TO HLD-PREV-WI.\n278800\n278900 1000-EXIT.  EXIT.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '  36' TO HOLD-PROV-MSAX\n.\n279800",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '  36' TO HOLD-PROV-MSAX\n.\n280200",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '  36' TO HOLD-PROV-MSAX\n.\n281000\n281100        IF HOLD-PROV-MSAX = '9000'\n281200           AND P-NEW-STATE = 36\n281300                MOVE '  36' TO HOLD-PROV-MSAX.\n281400",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '  36' TO HOLD-PROV-MSAX\n.\n281400\n281500        IF HOLD-PROV-MSAX = '8080'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '  36' TO HOLD-PROV-MSAX\n.\n281800\n281900        IF HOLD-PROV-MSAX = '1900'\n282000           AND P-NEW-STATE = 21",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '  21' TO HOLD-PROV-MSAX\n.\n282200",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '  53' TO HOLD-PROV-MSAX\n.\n282700\n282800 2300-1999-EXIT. EXIT.\n282900\n283000 2300-2000-FLOOR-MSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '  36' TO HOLD-PROV-MSAX\n.\n283500",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '  36' TO HOLD-PROV-MSAX\n.\n283900\n284000        IF HOLD-PROV-MSAX = '8080'\n284100           AND P-NEW-STATE = 36\n284200               MOVE '  36' TO HOLD-PROV-MSAX.\n284300\n284400        IF HOLD-PROV-MSAX = '2440'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '  36' TO HOLD-PROV-MSAX\n.\n284300\n284400        IF HOLD-PROV-MSAX = '2440'\n284500           AND P-NEW-STATE = 15",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '  15' TO HOLD-PROV-MSAX\n.\n284700\n284800        IF HOLD-PROV-MSAX = '2520'\n284900           AND P-NEW-CHG-CODE-INDEX = 'Y'\n285000           AND P-NEW-STATE = 24\n285100               MOVE '  24' TO HOLD-PROV-MSAX.\n285200",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '  24' TO HOLD-PROV-MSAX\n.\n285200\n285300        IF HOLD-PROV-MSAX = '1123'\n285400           AND P-NEW-STATE = 22",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '  22' TO HOLD-PROV-MSAX\n.\n285600\n285700 2300-2000-EXIT. EXIT.\n285800\n285900 2300-2001-FLOOR-MSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '  21' TO HOLD-PROV-MSAX\n.\n286400\n286500        IF HOLD-PROV-MSAX = '6020'\n286600           AND P-NEW-STATE = 36\n286700               MOVE '  36' TO HOLD-PROV-MSAX.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '  36' TO HOLD-PROV-MSAX\n.\n286800\n286900        IF HOLD-PROV-MSAX = '8080'\n287000           AND P-NEW-STATE = 36\n287100               MOVE '  36' TO HOLD-PROV-MSAX.\n287200\n287300        IF HOLD-PROV-MSAX = '1123'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '  36' TO HOLD-PROV-MSAX\n.\n287200\n287300        IF HOLD-PROV-MSAX = '1123'\n287400           AND P-NEW-STATE = 22\n287500               MOVE '  22' TO HOLD-PROV-MSAX.\n287600",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '  22' TO HOLD-PROV-MSAX\n.\n287600\n287700        IF HOLD-PROV-MSAX = '2440'\n287800           AND P-NEW-STATE = 15\n287900               MOVE '  15' TO HOLD-PROV-MSAX.\n288000",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '  15' TO HOLD-PROV-MSAX\n.\n288000",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '  36' TO HOLD-PROV-MSAX\n.\n288400\n288500        IF HOLD-PROV-MSAX = '9000'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '  51' TO HOLD-PROV-MSAX\n.\n288800\n288900 2300-2001-EXIT. EXIT.\n289000\n289100 2300-2002-FLOOR-MSA.\n289200",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '  22' TO HOLD-PROV-MSAX\n.\n289600\n289700        IF HOLD-PROV-MSAX = '1900'\n289800           AND P-NEW-STATE = 21\n289900               MOVE '  21' TO HOLD-PROV-MSAX.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '  21' TO HOLD-PROV-MSAX\n.\n290000\n290100        IF HOLD-PROV-MSAX = '2440'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '  15' TO HOLD-PROV-MSAX\n.\n290400\n290500        IF HOLD-PROV-MSAX = '6020'\n290600           AND P-NEW-STATE = 36\n290700               MOVE '  36' TO HOLD-PROV-MSAX.\n290800",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '  36' TO HOLD-PROV-MSAX\n.\n290800",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '  36' TO HOLD-PROV-MSAX\n.\n291200",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '  36' TO HOLD-PROV-MSAX\n.\n291600\n291700        IF HOLD-PROV-MSAX = '1303'\n291800           AND P-NEW-CHG-CODE-INDEX = 'Y'\n291900           AND P-NEW-STATE = 47\n292000               MOVE 'N' TO P-NEW-CHG-CODE-INDEX",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CHG-CODE-INDEX\n\n292100               MOVE '  47' TO HOLD-PROV-MSAX.\n292200",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '  47' TO HOLD-PROV-MSAX\n.\n292200\n292300        IF HOLD-PROV-MSAX = '  14'\n292400           AND P-NEW-CHG-CODE-INDEX = 'Y'\n292500           AND P-NEW-STATE = 16",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CHG-CODE-INDEX\n\n292700               MOVE '  16' TO HOLD-PROV-MSAX.\n292800",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '  16' TO HOLD-PROV-MSAX\n.\n292800",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CHG-CODE-INDEX\n\n293700               MOVE '  16' TO HOLD-PROV-MSAX.\n293800",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '  16' TO HOLD-PROV-MSAX\n.\n293800",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '  22' TO HOLD-PROV-MSAX\n.\n294200\n294300        IF HOLD-PROV-MSAX = '1800'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CHG-CODE-INDEX\n\n294700               MOVE '  11' TO HOLD-PROV-MSAX.\n294800\n294900        IF HOLD-PROV-MSAX = '1900'\n295000           AND P-NEW-STATE = 21",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '  11' TO HOLD-PROV-MSAX\n.\n294800",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '  21' TO HOLD-PROV-MSAX\n.\n295200\n295300        IF HOLD-PROV-MSAX = '2440'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '  15' TO HOLD-PROV-MSAX\n.\n295600\n295700        IF HOLD-PROV-MSAX = '3660'\n295800           AND P-NEW-CHG-CODE-INDEX = 'Y'\n295900           AND P-NEW-STATE = 49\n296000               MOVE 'N' TO P-NEW-CHG-CODE-INDEX",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CHG-CODE-INDEX\n\n296100               MOVE '  49' TO HOLD-PROV-MSAX.\n296200\n296300        IF HOLD-PROV-MSAX = '3660'\n296400           AND P-NEW-STATE = 49\n296500               MOVE '  49' TO HOLD-PROV-MSAX.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '  49' TO HOLD-PROV-MSAX\n.\n296200",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '  49' TO HOLD-PROV-MSAX\n.\n296600\n296700        IF HOLD-PROV-MSAX = '3700'\n296800           AND P-NEW-CHG-CODE-INDEX = 'Y'\n296900           AND P-NEW-STATE = 26",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CHG-CODE-INDEX\n\n297100               MOVE '  26' TO HOLD-PROV-MSAX.\n297200\n297300        IF HOLD-PROV-MSAX = '6020'\n297400           AND P-NEW-STATE = 36",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '  26' TO HOLD-PROV-MSAX\n.\n297200\n297300        IF HOLD-PROV-MSAX = '6020'\n297400           AND P-NEW-STATE = 36",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '  36' TO HOLD-PROV-MSAX\n.\n297600\n297700        IF HOLD-PROV-MSAX = '9000'\n297800           AND P-NEW-STATE = 36",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '  36' TO HOLD-PROV-MSAX\n.\n298000\n298100 2300-2003-EXIT. EXIT.\n298200\n298300 2300-2004-FLOOR-MSA.\n298400\n298500        IF HOLD-PROV-MSAX = '  14'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CHG-CODE-INDEX\n\n298900               MOVE '  16' TO HOLD-PROV-MSAX.\n299000\n299100        IF HOLD-PROV-MSAX = '0200'\n299200           AND P-NEW-CHG-CODE-INDEX = 'Y'\n299300           AND P-NEW-STATE = 06",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '  16' TO HOLD-PROV-MSAX\n.\n299000\n299100        IF HOLD-PROV-MSAX = '0200'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CHG-CODE-INDEX\n\n299500               MOVE '  06' TO HOLD-PROV-MSAX.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '  06' TO HOLD-PROV-MSAX\n.\n299600\n299700        IF HOLD-PROV-MSAX = '1480'\n299800           AND P-NEW-CHG-CODE-INDEX = 'Y'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CHG-CODE-INDEX\n\n300100               MOVE '  36' TO HOLD-PROV-MSAX.\n300200\n300300        IF HOLD-PROV-MSAX = '1900'\n300400           AND P-NEW-STATE = 21",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '  36' TO HOLD-PROV-MSAX\n.\n300200\n300300        IF HOLD-PROV-MSAX = '1900'\n300400           AND P-NEW-STATE = 21\n300500               MOVE '  21' TO HOLD-PROV-MSAX.\n300600\n300700        IF HOLD-PROV-MSAX = '2440'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '  21' TO HOLD-PROV-MSAX\n.\n300600\n300700        IF HOLD-PROV-MSAX = '2440'\n300800           AND P-NEW-STATE = 15\n300900               MOVE '  15' TO HOLD-PROV-MSAX.\n301000",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '  15' TO HOLD-PROV-MSAX\n.\n301000\n301100        IF HOLD-PROV-MSAX = '2985'\n301200           AND P-NEW-STATE = 24\n301300               MOVE '  24' TO HOLD-PROV-MSAX.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '  24' TO HOLD-PROV-MSAX\n.\n301400\n301500        IF HOLD-PROV-MSAX = '3660'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CHG-CODE-INDEX\n\n301900               MOVE '  49' TO HOLD-PROV-MSAX.\n302000\n302100        IF HOLD-PROV-MSAX = '3660'\n302200           AND P-NEW-STATE = 49\n302300               MOVE '  49' TO HOLD-PROV-MSAX.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '  49' TO HOLD-PROV-MSAX\n.\n302000\n302100        IF HOLD-PROV-MSAX = '3660'\n302200           AND P-NEW-STATE = 49\n302300               MOVE '  49' TO HOLD-PROV-MSAX.\n302400\n302500        IF HOLD-PROV-MSAX = '3700'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '  49' TO HOLD-PROV-MSAX\n.\n302400\n302500        IF HOLD-PROV-MSAX = '3700'\n302600           AND P-NEW-CHG-CODE-INDEX = 'Y'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CHG-CODE-INDEX\n\n302900               MOVE '  26' TO HOLD-PROV-MSAX.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '  26' TO HOLD-PROV-MSAX\n.\n303000\n303100        IF HOLD-PROV-MSAX = '6020'\n303200           AND P-NEW-STATE = 36",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '  36' TO HOLD-PROV-MSAX\n.\n303400\n303500        IF HOLD-PROV-MSAX = '6740'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CHG-CODE-INDEX\n\n303900               MOVE '  50' TO HOLD-PROV-MSAX.\n304000\n304100        IF HOLD-PROV-MSAX = '7720'\n304200           AND P-NEW-CHG-CODE-INDEX = 'Y'\n304300           AND P-NEW-STATE = 28",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '  50' TO HOLD-PROV-MSAX\n.\n304000\n304100        IF HOLD-PROV-MSAX = '7720'\n304200           AND P-NEW-CHG-CODE-INDEX = 'Y'\n304300           AND P-NEW-STATE = 28",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CHG-CODE-INDEX\n\n304500               MOVE '  28' TO HOLD-PROV-MSAX.\n304600\n304700        IF HOLD-PROV-MSAX = '8080'\n304800           AND P-NEW-STATE = 36",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '  28' TO HOLD-PROV-MSAX\n.\n304600\n304700        IF HOLD-PROV-MSAX = '8080'\n304800           AND P-NEW-STATE = 36\n304900                MOVE '  36' TO HOLD-PROV-MSAX.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '  36' TO HOLD-PROV-MSAX\n.\n305000\n305100        IF HOLD-PROV-MSAX = '9000'\n305200           AND P-NEW-STATE = 36\n305300                MOVE '  36' TO HOLD-PROV-MSAX.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '  36' TO HOLD-PROV-MSAX\n.\n305400\n305500 2300-2004-EXIT. EXIT.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n307700               MOVE '   31' TO HOLD-PROV-CBSA.\n307800",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   31' TO HOLD-PROV-CBSA\n.\n307800",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n308300               MOVE '   36' TO HOLD-PROV-CBSA.\n308400",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   36' TO HOLD-PROV-CBSA\n.\n308400\n308500        IF HOLD-PROV-CBSA = '19060'\n308600           AND P-NEW-STATE = 21\n308700               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n308800               MOVE '   21' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n308800               MOVE '   21' TO HOLD-PROV-CBSA.\n308900\n309000        IF HOLD-PROV-CBSA = '21780'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   21' TO HOLD-PROV-CBSA\n.\n308900\n309000        IF HOLD-PROV-CBSA = '21780'\n309100           AND P-NEW-STATE = 15\n309200               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n309300               MOVE '   15' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   15' TO HOLD-PROV-CBSA\n.\n309400",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n309900               MOVE '   24' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   24' TO HOLD-PROV-CBSA\n.\n310000\n310100        IF HOLD-PROV-CBSA = '22020'\n310200           AND P-NEW-STATE = 24\n310300               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n310400               MOVE '   24' TO HOLD-PROV-CBSA.\n310500",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n310400               MOVE '   24' TO HOLD-PROV-CBSA.\n310500\n310600        IF HOLD-PROV-CBSA = '24220'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   24' TO HOLD-PROV-CBSA\n.\n310500\n310600        IF HOLD-PROV-CBSA = '24220'\n310700           AND P-NEW-STATE = 24\n310800               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n310900               MOVE '   24' TO HOLD-PROV-CBSA.\n311000\n311100        IF HOLD-PROV-CBSA = '25540'\n311200           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n311300           AND P-NEW-STATE = 07\n311400               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   24' TO HOLD-PROV-CBSA\n.\n311000\n311100        IF HOLD-PROV-CBSA = '25540'\n311200           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n311300           AND P-NEW-STATE = 07\n311400               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n311500               MOVE '   07' TO HOLD-PROV-CBSA.\n311600\n311700        IF HOLD-PROV-CBSA = '29100'\n311800           AND P-NEW-STATE = 52\n311900               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n312000               MOVE '   52' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   07' TO HOLD-PROV-CBSA\n.\n311600\n311700        IF HOLD-PROV-CBSA = '29100'\n311800           AND P-NEW-STATE = 52\n311900               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n312000               MOVE '   52' TO HOLD-PROV-CBSA.\n312100",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n312000               MOVE '   52' TO HOLD-PROV-CBSA.\n312100\n312200        IF HOLD-PROV-CBSA = '30300'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   52' TO HOLD-PROV-CBSA\n.\n312100\n312200        IF HOLD-PROV-CBSA = '30300'\n312300           AND P-NEW-STATE = 50\n312400               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n312500               MOVE '   50' TO HOLD-PROV-CBSA.\n312600\n312700        IF HOLD-PROV-CBSA = '37620'\n312800           AND P-NEW-STATE = 36",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   50' TO HOLD-PROV-CBSA\n.\n312600\n312700        IF HOLD-PROV-CBSA = '37620'\n312800           AND P-NEW-STATE = 36\n312900               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n313000               MOVE '   36' TO HOLD-PROV-CBSA.\n313100\n313200        IF HOLD-PROV-CBSA = '48260'\n313300           AND P-NEW-STATE = 36\n313400               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   36' TO HOLD-PROV-CBSA\n.\n313100\n313200        IF HOLD-PROV-CBSA = '48260'\n313300           AND P-NEW-STATE = 36\n313400               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n313500               MOVE '   36' TO HOLD-PROV-CBSA.\n313600",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n313500               MOVE '   36' TO HOLD-PROV-CBSA.\n313600",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   36' TO HOLD-PROV-CBSA\n.\n313600\n313700        IF HOLD-PROV-CBSA = '48540'\n313800           AND P-NEW-STATE = 36",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n314000               MOVE '   36' TO HOLD-PROV-CBSA.\n314100\n314200        IF HOLD-PROV-CBSA = '48864'\n314300           AND P-NEW-STATE = 31\n314400               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   36' TO HOLD-PROV-CBSA\n.\n314100\n314200        IF HOLD-PROV-CBSA = '48864'\n314300           AND P-NEW-STATE = 31\n314400               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n314500               MOVE '   31' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n314500               MOVE '   31' TO HOLD-PROV-CBSA.\n314600\n314700        IF HOLD-PROV-CBSA = '48864'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   31' TO HOLD-PROV-CBSA\n.\n314600\n314700        IF HOLD-PROV-CBSA = '48864'\n314800           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n314900           AND P-NEW-STATE = 31",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n315100               MOVE '   31' TO HOLD-PROV-CBSA.\n315200\n315300        IF B-21-DISCHARGE-DATE > 20041231\n315400           IF HOLD-PROV-CBSA = '39900'\n315500              AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   31' TO HOLD-PROV-CBSA\n.\n315200\n315300        IF B-21-DISCHARGE-DATE > 20041231\n315400           IF HOLD-PROV-CBSA = '39900'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n315800                  MOVE '   05' TO HOLD-PROV-CBSA.\n315900\n316000        IF B-21-DISCHARGE-DATE < 20050101\n316100           IF (HOLD-PROV-CBSA = '28420'\n316200               AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n316300               AND P-NEW-STATE = 50)",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   05' TO HOLD-PROV-CBSA\n.\n315900\n316000        IF B-21-DISCHARGE-DATE < 20050101\n316100           IF (HOLD-PROV-CBSA = '28420'\n316200               AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n316300               AND P-NEW-STATE = 50)\n316400                  MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n316500                  MOVE '   50' TO HOLD-PROV-CBSA.\n316600",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   50' TO HOLD-PROV-CBSA\n.\n316600\n316700 2300-2005-EXIT. EXIT.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n317600               MOVE '   10' TO HOLD-PROV-CBSA.\n317700\n317800        IF HOLD-PROV-CBSA = '   50'\n317900           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n318000           AND P-NEW-STATE = 50\n318100               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   10' TO HOLD-PROV-CBSA\n.\n317700\n317800        IF HOLD-PROV-CBSA = '   50'\n317900           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n318000           AND P-NEW-STATE = 50\n318100               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n318200               MOVE '   50' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n318200               MOVE '   50' TO HOLD-PROV-CBSA.\n318300\n318400        IF HOLD-PROV-CBSA = '10900'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   50' TO HOLD-PROV-CBSA\n.\n318300\n318400        IF HOLD-PROV-CBSA = '10900'\n318500           AND P-NEW-STATE = 31",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n318700               MOVE '   31' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   31' TO HOLD-PROV-CBSA\n.\n318800\n318900        IF HOLD-PROV-CBSA = '15764'\n319000           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n319100           AND P-NEW-STATE = 30\n319200               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n319300               MOVE '   30' TO HOLD-PROV-CBSA.\n319400\n319500        IF HOLD-PROV-CBSA = '16620'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   30' TO HOLD-PROV-CBSA\n.\n319400\n319500        IF HOLD-PROV-CBSA = '16620'\n319600           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n319900               MOVE '   36' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   36' TO HOLD-PROV-CBSA\n.\n320000\n320100        IF HOLD-PROV-CBSA = '19060'\n320200           AND P-NEW-STATE = 21\n320300               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n320400               MOVE '   21' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n320400               MOVE '   21' TO HOLD-PROV-CBSA.\n320500\n320600        IF HOLD-PROV-CBSA = '22020'\n320700           AND P-NEW-STATE = 24\n320800               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n320900               MOVE '   24' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   21' TO HOLD-PROV-CBSA\n.\n320500\n320600        IF HOLD-PROV-CBSA = '22020'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n320900               MOVE '   24' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   24' TO HOLD-PROV-CBSA\n.\n321000\n321100        IF HOLD-PROV-CBSA = '24220'\n321200           AND P-NEW-STATE = 24",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n321400               MOVE '   24' TO HOLD-PROV-CBSA.\n321500\n321600        IF HOLD-PROV-CBSA = '24580'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   24' TO HOLD-PROV-CBSA\n.\n321500\n321600        IF HOLD-PROV-CBSA = '24580'\n321700           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n321800           AND P-NEW-STATE = 52\n321900               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n322000               MOVE '   52' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n322000               MOVE '   52' TO HOLD-PROV-CBSA.\n322100",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   52' TO HOLD-PROV-CBSA\n.\n322100\n322200        IF HOLD-PROV-CBSA = '25540'\n322300           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n322600               MOVE '   07' TO HOLD-PROV-CBSA.\n322700\n322800        IF HOLD-PROV-CBSA = '30300'\n322900           AND P-NEW-STATE = 50",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   07' TO HOLD-PROV-CBSA\n.\n322700\n322800        IF HOLD-PROV-CBSA = '30300'\n322900           AND P-NEW-STATE = 50",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n323100               MOVE '   50' TO HOLD-PROV-CBSA.\n323200\n323300        IF HOLD-PROV-CBSA = '37620'\n323400           AND P-NEW-STATE = 36\n323500               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   50' TO HOLD-PROV-CBSA\n.\n323200\n323300        IF HOLD-PROV-CBSA = '37620'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n323600               MOVE '   36' TO HOLD-PROV-CBSA.\n323700",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   36' TO HOLD-PROV-CBSA\n.\n323700\n323800        IF HOLD-PROV-CBSA = '39900'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n324200               MOVE '   05' TO HOLD-PROV-CBSA.\n324300\n324400        IF HOLD-PROV-CBSA = '48260'\n324500           AND P-NEW-STATE = 36",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   05' TO HOLD-PROV-CBSA\n.\n324300\n324400        IF HOLD-PROV-CBSA = '48260'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n324700               MOVE '   36' TO HOLD-PROV-CBSA.\n324800\n324900        IF HOLD-PROV-CBSA = '48540'\n325000           AND P-NEW-STATE = 36",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   36' TO HOLD-PROV-CBSA\n.\n324800\n324900        IF HOLD-PROV-CBSA = '48540'\n325000           AND P-NEW-STATE = 36\n325100               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n325200               MOVE '   36' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   36' TO HOLD-PROV-CBSA\n.\n325300\n325400        IF HOLD-PROV-CBSA = '48540'\n325500           AND P-NEW-STATE = 51",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n325700               MOVE '   51' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   51' TO HOLD-PROV-CBSA\n.\n325800\n325900        IF HOLD-PROV-CBSA = '48864'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n326200               MOVE '   31' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   31' TO HOLD-PROV-CBSA\n.\n326300\n326400        IF HOLD-PROV-CBSA = '49660'\n326500           AND P-NEW-STATE = 36\n326600               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n326700               MOVE '   36' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n326700               MOVE '   36' TO HOLD-PROV-CBSA.\n326800\n326900 2300-2006-EXIT. EXIT.\n327000\n327100 2300-2007-FLOOR-CBSA.\n327200",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   36' TO HOLD-PROV-CBSA\n.\n326800",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n327700               MOVE '   10' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   10' TO HOLD-PROV-CBSA\n.\n327800\n327900        IF HOLD-PROV-CBSA = '   14'\n328000           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n328100           AND P-NEW-STATE = 14\n328200               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n328300               MOVE '   14' TO HOLD-PROV-CBSA.\n328400\n328500        IF HOLD-PROV-CBSA = '   26'\n328600           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n328700           AND P-NEW-STATE = 26",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   14' TO HOLD-PROV-CBSA\n.\n328400\n328500        IF HOLD-PROV-CBSA = '   26'\n328600           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n328900               MOVE '   26' TO HOLD-PROV-CBSA.\n329000",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   26' TO HOLD-PROV-CBSA\n.\n329000\n329100        IF HOLD-PROV-CBSA = '   50'\n329200           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n329300           AND P-NEW-STATE = 50\n329400               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n329500               MOVE '   50' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n329500               MOVE '   50' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   50' TO HOLD-PROV-CBSA\n.\n329600\n329700        IF HOLD-PROV-CBSA = '10900'\n329800           AND P-NEW-STATE = 31\n329900               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n330000               MOVE '   31' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n330000               MOVE '   31' TO HOLD-PROV-CBSA.\n330100",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   31' TO HOLD-PROV-CBSA\n.\n330100\n330200        IF HOLD-PROV-CBSA = '19060'\n330300           AND P-NEW-STATE = 21\n330400               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n330500               MOVE '   21' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n330500               MOVE '   21' TO HOLD-PROV-CBSA.\n330600\n330700        IF HOLD-PROV-CBSA = '22020'\n330800           AND P-NEW-STATE = 24",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   21' TO HOLD-PROV-CBSA\n.\n330600\n330700        IF HOLD-PROV-CBSA = '22020'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n331000               MOVE '   24' TO HOLD-PROV-CBSA.\n331100\n331200        IF HOLD-PROV-CBSA = '24220'\n331300           AND P-NEW-STATE = 24\n331400               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n331500               MOVE '   24' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   24' TO HOLD-PROV-CBSA\n.\n331100",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n331500               MOVE '   24' TO HOLD-PROV-CBSA.\n331600\n331700        IF HOLD-PROV-CBSA = '24580'\n331800           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n331900           AND P-NEW-STATE = 52",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   24' TO HOLD-PROV-CBSA\n.\n331600\n331700        IF HOLD-PROV-CBSA = '24580'\n331800           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n331900           AND P-NEW-STATE = 52\n332000               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n332100               MOVE '   52' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n332100               MOVE '   52' TO HOLD-PROV-CBSA.\n332200",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   52' TO HOLD-PROV-CBSA\n.\n332200",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n332700               MOVE '   07' TO HOLD-PROV-CBSA.\n332800\n332900        IF HOLD-PROV-CBSA = '26580'\n333000           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n333100           AND P-NEW-STATE = 36\n333200               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   07' TO HOLD-PROV-CBSA\n.\n332800\n332900        IF HOLD-PROV-CBSA = '26580'\n333000           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n333100           AND P-NEW-STATE = 36\n333200               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n333300               MOVE '   36' TO HOLD-PROV-CBSA.\n333400\n333500        IF B-21-DISCHARGE-DATE < 20061103\n333600           IF (HOLD-PROV-CBSA = '27860'\n333700               AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   36' TO HOLD-PROV-CBSA\n.\n333400\n333500        IF B-21-DISCHARGE-DATE < 20061103\n333600           IF (HOLD-PROV-CBSA = '27860'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n334000                   MOVE '   26' TO HOLD-PROV-CBSA.\n334100\n334200        IF HOLD-PROV-CBSA = '29100'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   26' TO HOLD-PROV-CBSA\n.\n334100\n334200        IF HOLD-PROV-CBSA = '29100'\n334300           AND P-NEW-STATE = 52\n334400               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n334500               MOVE '   52' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n334500               MOVE '   52' TO HOLD-PROV-CBSA.\n334600",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   52' TO HOLD-PROV-CBSA\n.\n334600\n334700        IF HOLD-PROV-CBSA = '30300'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n335000               MOVE '   50' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   50' TO HOLD-PROV-CBSA\n.\n335100\n335200        IF HOLD-PROV-CBSA = '37620'\n335300           AND P-NEW-STATE = 36\n335400               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n335500               MOVE '   36' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n335500               MOVE '   36' TO HOLD-PROV-CBSA.\n335600",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   36' TO HOLD-PROV-CBSA\n.\n335600\n335700        IF HOLD-PROV-CBSA = '37964'\n335800           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n335900           AND P-NEW-STATE = 31",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n336100               MOVE '   31' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   31' TO HOLD-PROV-CBSA\n.\n336200\n336300        IF HOLD-PROV-CBSA = '38300'\n336400           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n336500           AND P-NEW-STATE = 36\n336600               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n336700               MOVE '   36' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n336700               MOVE '   36' TO HOLD-PROV-CBSA.\n336800\n336900        IF HOLD-PROV-CBSA = '39300'\n337000           AND P-NEW-STATE = 22",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   36' TO HOLD-PROV-CBSA\n.\n336800",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n337200               MOVE '   22' TO HOLD-PROV-CBSA.\n337300\n337400        IF HOLD-PROV-CBSA = '39300'\n337500           AND P-NEW-STATE = 41",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   22' TO HOLD-PROV-CBSA\n.\n337300\n337400        IF HOLD-PROV-CBSA = '39300'\n337500           AND P-NEW-STATE = 41",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n337700               MOVE '   41' TO HOLD-PROV-CBSA.\n337800",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   41' TO HOLD-PROV-CBSA\n.\n337800\n337900        IF HOLD-PROV-CBSA = '45500'\n338000           AND P-NEW-STATE = 45",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n338200               MOVE '   45' TO HOLD-PROV-CBSA.\n338300\n338400        IF HOLD-PROV-CBSA = '48260'\n338500           AND P-NEW-STATE = 36",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   45' TO HOLD-PROV-CBSA\n.\n338300\n338400        IF HOLD-PROV-CBSA = '48260'\n338500           AND P-NEW-STATE = 36\n338600               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n338700               MOVE '   36' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n338700               MOVE '   36' TO HOLD-PROV-CBSA.\n338800\n338900        IF HOLD-PROV-CBSA = '48540'\n339000           AND P-NEW-STATE = 36\n339100               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n339200               MOVE '   36' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   36' TO HOLD-PROV-CBSA\n.\n338800\n338900        IF HOLD-PROV-CBSA = '48540'\n339000           AND P-NEW-STATE = 36\n339100               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n339200               MOVE '   36' TO HOLD-PROV-CBSA.\n339300",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n339200               MOVE '   36' TO HOLD-PROV-CBSA.\n339300",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   36' TO HOLD-PROV-CBSA\n.\n339300\n339400        IF HOLD-PROV-CBSA = '48540'\n339500           AND P-NEW-STATE = 51",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n339700               MOVE '   51' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   51' TO HOLD-PROV-CBSA\n.\n339800\n339900        IF HOLD-PROV-CBSA = '48864'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n340200               MOVE '   31' TO HOLD-PROV-CBSA.\n340300\n340400\n340500 2300-2007-EXIT. EXIT.\n340600",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   31' TO HOLD-PROV-CBSA\n.\n340300",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n341300               MOVE '   33' TO HOLD-PROV-CBSA.\n341400\n341500        IF HOLD-PROV-CBSA = '   39'\n341600           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   33' TO HOLD-PROV-CBSA\n.\n341400",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n341900               MOVE '   39' TO HOLD-PROV-CBSA.\n342000",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   39' TO HOLD-PROV-CBSA\n.\n342000\n342100        IF HOLD-PROV-CBSA = '10900'\n342200           AND P-NEW-STATE = 31",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n342400               MOVE '   31' TO HOLD-PROV-CBSA.\n342500\n342600        IF HOLD-PROV-CBSA = '19060'\n342700           AND P-NEW-STATE = 21",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   31' TO HOLD-PROV-CBSA\n.\n342500",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n342900               MOVE '   21' TO HOLD-PROV-CBSA.\n343000\n343100        IF HOLD-PROV-CBSA = '21780'\n343200           AND P-NEW-STATE = 15",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   21' TO HOLD-PROV-CBSA\n.\n343000\n343100        IF HOLD-PROV-CBSA = '21780'\n343200           AND P-NEW-STATE = 15\n343300               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n343400               MOVE '   15' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n343400               MOVE '   15' TO HOLD-PROV-CBSA.\n343500",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   15' TO HOLD-PROV-CBSA\n.\n343500\n343600        IF HOLD-PROV-CBSA = '21780'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n344000               MOVE '   15' TO HOLD-PROV-CBSA.\n344100\n344200        IF HOLD-PROV-CBSA = '22020'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   15' TO HOLD-PROV-CBSA\n.\n344100",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n344500               MOVE '   24' TO HOLD-PROV-CBSA.\n344600\n344700        IF HOLD-PROV-CBSA = '24220'\n344800           AND P-NEW-STATE = 24",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   24' TO HOLD-PROV-CBSA\n.\n344600\n344700        IF HOLD-PROV-CBSA = '24220'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n345000               MOVE '   24' TO HOLD-PROV-CBSA.\n345100\n345200        IF HOLD-PROV-CBSA = '24580'\n345300           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   24' TO HOLD-PROV-CBSA\n.\n345100\n345200        IF HOLD-PROV-CBSA = '24580'\n345300           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n345400           AND P-NEW-STATE = 52\n345500               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n345600               MOVE '   52' TO HOLD-PROV-CBSA.\n345700\n345800        IF HOLD-PROV-CBSA = '25540'\n345900           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   52' TO HOLD-PROV-CBSA\n.\n345700\n345800        IF HOLD-PROV-CBSA = '25540'\n345900           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n346200               MOVE '   07' TO HOLD-PROV-CBSA.\n346300\n346400        IF HOLD-PROV-CBSA = '28420'\n346500           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   07' TO HOLD-PROV-CBSA\n.\n346300\n346400        IF HOLD-PROV-CBSA = '28420'\n346500           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n346800               MOVE '   50' TO HOLD-PROV-CBSA.\n346900",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   50' TO HOLD-PROV-CBSA\n.\n346900\n347000        IF HOLD-PROV-CBSA = '28700'\n347100           AND P-NEW-STATE = 44\n347200               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n347300               MOVE '   44' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n347300               MOVE '   44' TO HOLD-PROV-CBSA.\n347400\n347500        IF HOLD-PROV-CBSA = '28700'\n347600           AND P-NEW-STATE = 49",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   44' TO HOLD-PROV-CBSA\n.\n347400\n347500        IF HOLD-PROV-CBSA = '28700'\n347600           AND P-NEW-STATE = 49\n347700               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n347800               MOVE '   49' TO HOLD-PROV-CBSA.\n347900",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n347800               MOVE '   49' TO HOLD-PROV-CBSA.\n347900\n348000        IF HOLD-PROV-CBSA = '30300'\n348100           AND P-NEW-STATE = 50\n348200               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   49' TO HOLD-PROV-CBSA\n.\n347900\n348000        IF HOLD-PROV-CBSA = '30300'\n348100           AND P-NEW-STATE = 50\n348200               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n348300               MOVE '   50' TO HOLD-PROV-CBSA.\n348400",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n348300               MOVE '   50' TO HOLD-PROV-CBSA.\n348400",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   50' TO HOLD-PROV-CBSA\n.\n348400",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n348900               MOVE '   31' TO HOLD-PROV-CBSA.\n349000\n349100        IF HOLD-PROV-CBSA = '37620'\n349200           AND P-NEW-STATE = 36\n349300               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   31' TO HOLD-PROV-CBSA\n.\n349000\n349100        IF HOLD-PROV-CBSA = '37620'\n349200           AND P-NEW-STATE = 36\n349300               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n349400               MOVE '   36' TO HOLD-PROV-CBSA.\n349500",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n349400               MOVE '   36' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   36' TO HOLD-PROV-CBSA\n.\n349500\n349600        IF HOLD-PROV-CBSA = '37964'\n349700           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n349800           AND P-NEW-STATE = 31\n349900               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n350000               MOVE '   31' TO HOLD-PROV-CBSA.\n350100\n350200        IF HOLD-PROV-CBSA = '38300'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   31' TO HOLD-PROV-CBSA\n.\n350100\n350200        IF HOLD-PROV-CBSA = '38300'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n350600               MOVE '   36' TO HOLD-PROV-CBSA.\n350700\n350800        IF HOLD-PROV-CBSA = '45500'\n350900           AND P-NEW-STATE = 45",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   36' TO HOLD-PROV-CBSA\n.\n350700\n350800        IF HOLD-PROV-CBSA = '45500'\n350900           AND P-NEW-STATE = 45\n351000               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n351100               MOVE '   45' TO HOLD-PROV-CBSA.\n351200",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   45' TO HOLD-PROV-CBSA\n.\n351200\n351300        IF HOLD-PROV-CBSA = '48260'\n351400           AND P-NEW-STATE = 36\n351500               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n351600               MOVE '   36' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n351600               MOVE '   36' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   36' TO HOLD-PROV-CBSA\n.\n351700\n351800        IF HOLD-PROV-CBSA = '48540'\n351900           AND P-NEW-STATE = 36\n352000               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n352100               MOVE '   36' TO HOLD-PROV-CBSA.\n352200\n352300        IF HOLD-PROV-CBSA = '48540'\n352400           AND P-NEW-STATE = 51\n352500               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   36' TO HOLD-PROV-CBSA\n.\n352200\n352300        IF HOLD-PROV-CBSA = '48540'\n352400           AND P-NEW-STATE = 51",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n352600               MOVE '   51' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   51' TO HOLD-PROV-CBSA\n.\n352700\n352800        IF HOLD-PROV-CBSA = '48864'\n352900           AND P-NEW-STATE = 31\n353000               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n353100               MOVE '   31' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n353100               MOVE '   31' TO HOLD-PROV-CBSA.\n353200\n353300        IF HOLD-PROV-CBSA = '48864'\n353400           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n353500           AND P-NEW-STATE = 31\n353600               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   31' TO HOLD-PROV-CBSA\n.\n353200",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n353700               MOVE '   31' TO HOLD-PROV-CBSA.\n353800",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   31' TO HOLD-PROV-CBSA\n.\n353800\n353900",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n355000               MOVE '   04' TO HOLD-PROV-CBSA.\n355100",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   04' TO HOLD-PROV-CBSA\n.\n355100\n355200        IF HOLD-PROV-CBSA = '   04'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n355600               MOVE '   19' TO HOLD-PROV-CBSA.\n355700\n355800        IF HOLD-PROV-CBSA = '   14'\n355900           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n356000           AND P-NEW-STATE = 14",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   19' TO HOLD-PROV-CBSA\n.\n355700\n355800        IF HOLD-PROV-CBSA = '   14'\n355900           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n356000           AND P-NEW-STATE = 14\n356100               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n356200               MOVE '   14' TO HOLD-PROV-CBSA.\n356300",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   14' TO HOLD-PROV-CBSA\n.\n356300\n356400        IF HOLD-PROV-CBSA = '   14'\n356500           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n356600           AND P-NEW-STATE = 26\n356700               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n356800               MOVE '   26' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n356800               MOVE '   26' TO HOLD-PROV-CBSA.\n356900\n357000        IF HOLD-PROV-CBSA = '10900'\n357100           AND P-NEW-STATE = 31\n357200               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   26' TO HOLD-PROV-CBSA\n.\n356900\n357000        IF HOLD-PROV-CBSA = '10900'\n357100           AND P-NEW-STATE = 31\n357200               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n357300               MOVE '   31' TO HOLD-PROV-CBSA.\n357400",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n357300               MOVE '   31' TO HOLD-PROV-CBSA.\n357400",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   31' TO HOLD-PROV-CBSA\n.\n357400\n357500        IF HOLD-PROV-CBSA = '19340'\n357600           AND P-NEW-STATE = 16\n357700               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n357800               MOVE '   16' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n357800               MOVE '   16' TO HOLD-PROV-CBSA.\n357900\n358000        IF HOLD-PROV-CBSA = '21780'\n358100           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   16' TO HOLD-PROV-CBSA\n.\n357900",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n358400               MOVE '   15' TO HOLD-PROV-CBSA.\n358500\n358600        IF HOLD-PROV-CBSA = '22020'\n358700           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n358800           AND P-NEW-STATE = 43",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   15' TO HOLD-PROV-CBSA\n.\n358500\n358600        IF HOLD-PROV-CBSA = '22020'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n359000               MOVE '   43' TO HOLD-PROV-CBSA.\n359100\n359200        IF HOLD-PROV-CBSA = '22900'\n359300           AND P-NEW-STATE = 37\n359400               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   43' TO HOLD-PROV-CBSA\n.\n359100\n359200        IF HOLD-PROV-CBSA = '22900'\n359300           AND P-NEW-STATE = 37",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n359500               MOVE '   37' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   37' TO HOLD-PROV-CBSA\n.\n359600\n359700        IF HOLD-PROV-CBSA = '24580'\n359800           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n359900           AND P-NEW-STATE = 52\n360000               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n360100               MOVE '   52' TO HOLD-PROV-CBSA.\n360200\n360300        IF HOLD-PROV-CBSA = '25540'\n360400           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n360500           AND P-NEW-STATE = 07\n360600               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   52' TO HOLD-PROV-CBSA\n.\n360200\n360300        IF HOLD-PROV-CBSA = '25540'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n360700               MOVE '   07' TO HOLD-PROV-CBSA.\n360800\n360900        IF HOLD-PROV-CBSA = '28420'\n361000           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n361100           AND P-NEW-STATE = 50\n361200               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   07' TO HOLD-PROV-CBSA\n.\n360800",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n361300               MOVE '   50' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   50' TO HOLD-PROV-CBSA\n.\n361400\n361500        IF HOLD-PROV-CBSA = '28700'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n361800               MOVE '   44' TO HOLD-PROV-CBSA.\n361900\n362000        IF HOLD-PROV-CBSA = '28700'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   44' TO HOLD-PROV-CBSA\n.\n361900\n362000        IF HOLD-PROV-CBSA = '28700'\n362100           AND P-NEW-STATE = 49",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n362300               MOVE '   49' TO HOLD-PROV-CBSA.\n362400",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   49' TO HOLD-PROV-CBSA\n.\n362400\n362500        IF HOLD-PROV-CBSA = '28700'\n362600           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n362900               MOVE '   18' TO HOLD-PROV-CBSA.\n363000\n363100        IF HOLD-PROV-CBSA = '28700'\n363200           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   18' TO HOLD-PROV-CBSA\n.\n363000",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n363500               MOVE '   44' TO HOLD-PROV-CBSA.\n363600\n363700        IF HOLD-PROV-CBSA = '28940'\n363800           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   44' TO HOLD-PROV-CBSA\n.\n363600\n363700        IF HOLD-PROV-CBSA = '28940'\n363800           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n363900           AND P-NEW-STATE = 18\n364000               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n364100               MOVE '   18' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n364100               MOVE '   18' TO HOLD-PROV-CBSA.\n364200\n364300        IF HOLD-PROV-CBSA = '28940'\n364400           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   18' TO HOLD-PROV-CBSA\n.\n364200\n364300        IF HOLD-PROV-CBSA = '28940'\n364400           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n364500           AND P-NEW-STATE = 44",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n364700               MOVE '   44' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   44' TO HOLD-PROV-CBSA\n.\n364800\n364900        IF HOLD-PROV-CBSA = '34820'\n365000           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n365100           AND P-NEW-STATE = 34\n365200               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n365300               MOVE '   34' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n365300               MOVE '   34' TO HOLD-PROV-CBSA.\n365400\n365500        IF HOLD-PROV-CBSA = '34820'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   34' TO HOLD-PROV-CBSA\n.\n365400",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n365900               MOVE '   42' TO HOLD-PROV-CBSA.\n366000\n366100        IF HOLD-PROV-CBSA = '37620'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   42' TO HOLD-PROV-CBSA\n.\n366000\n366100        IF HOLD-PROV-CBSA = '37620'\n366200           AND P-NEW-STATE = 36\n366300               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n366400               MOVE '   36' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n366400               MOVE '   36' TO HOLD-PROV-CBSA.\n366500\n366600        IF HOLD-PROV-CBSA = '37964'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   36' TO HOLD-PROV-CBSA\n.\n366500\n366600        IF HOLD-PROV-CBSA = '37964'\n366700           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n366800           AND P-NEW-STATE = 31\n366900               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n367000               MOVE '   31' TO HOLD-PROV-CBSA.\n367100\n367200        IF HOLD-PROV-CBSA = '38340'\n367300           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n367400           AND P-NEW-STATE = 47",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   31' TO HOLD-PROV-CBSA\n.\n367100\n367200        IF HOLD-PROV-CBSA = '38340'\n367300           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n367400           AND P-NEW-STATE = 47\n367500               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n367600               MOVE '   47' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n367600               MOVE '   47' TO HOLD-PROV-CBSA.\n367700\n367800        IF HOLD-PROV-CBSA = '41620'\n367900           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n368000           AND P-NEW-STATE = 29",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   47' TO HOLD-PROV-CBSA\n.\n367700\n367800        IF HOLD-PROV-CBSA = '41620'\n367900           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n368000           AND P-NEW-STATE = 29\n368100               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n368200               MOVE '   29' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n368200               MOVE '   29' TO HOLD-PROV-CBSA.\n368300\n368400        IF HOLD-PROV-CBSA = '43580'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   29' TO HOLD-PROV-CBSA\n.\n368300\n368400        IF HOLD-PROV-CBSA = '43580'\n368500           AND P-NEW-STATE = 16\n368600               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n368700               MOVE '   16' TO HOLD-PROV-CBSA.\n368800\n368900        IF HOLD-PROV-CBSA = '48540'\n369000           AND P-NEW-STATE = 36",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   16' TO HOLD-PROV-CBSA\n.\n368800\n368900        IF HOLD-PROV-CBSA = '48540'\n369000           AND P-NEW-STATE = 36",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n369200               MOVE '   36' TO HOLD-PROV-CBSA.\n369300\n369400        IF HOLD-PROV-CBSA = '48540'\n369500           AND P-NEW-STATE = 51\n369600               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n369700               MOVE '   51' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   36' TO HOLD-PROV-CBSA\n.\n369300",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n369700               MOVE '   51' TO HOLD-PROV-CBSA.\n369800",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   51' TO HOLD-PROV-CBSA\n.\n369800\n369900        IF HOLD-PROV-CBSA = '48864'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n370200               MOVE '   31' TO HOLD-PROV-CBSA.\n370300",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   31' TO HOLD-PROV-CBSA\n.\n370300\n370400        IF HOLD-PROV-CBSA = '48864'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n370800               MOVE '   31' TO HOLD-PROV-CBSA.\n370900",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   31' TO HOLD-PROV-CBSA\n.\n370900\n371000        IF HOLD-PROV-CBSA = '19060'\n371100           AND P-NEW-STATE = 21\n371200               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n371300               MOVE '   21' TO HOLD-PROV-CBSA.\n371400\n371500        IF HOLD-PROV-CBSA = '19060'\n371600           AND P-NEW-STATE = 51\n371700               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n371800               MOVE '   51' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   21' TO HOLD-PROV-CBSA\n.\n371400\n371500        IF HOLD-PROV-CBSA = '19060'\n371600           AND P-NEW-STATE = 51",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n371800               MOVE '   51' TO HOLD-PROV-CBSA.\n371900\n372000        IF HOLD-PROV-CBSA = '22020'\n372100           AND P-NEW-STATE = 24\n372200               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   51' TO HOLD-PROV-CBSA\n.\n371900\n372000        IF HOLD-PROV-CBSA = '22020'\n372100           AND P-NEW-STATE = 24\n372200               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n372300               MOVE '   24' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n372300               MOVE '   24' TO HOLD-PROV-CBSA.\n372400\n372500        IF HOLD-PROV-CBSA = '24220'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   24' TO HOLD-PROV-CBSA\n.\n372400\n372500        IF HOLD-PROV-CBSA = '24220'\n372600           AND P-NEW-STATE = 24",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n372800               MOVE '   24' TO HOLD-PROV-CBSA.\n372900",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   24' TO HOLD-PROV-CBSA\n.\n372900\n373000        IF HOLD-PROV-CBSA = '30300'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n373300               MOVE '   50' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   50' TO HOLD-PROV-CBSA\n.\n373400\n373500        IF HOLD-PROV-CBSA = '48260'\n373600           AND P-NEW-STATE = 36",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n373800               MOVE '   36' TO HOLD-PROV-CBSA.\n373900\n374000\n374100",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   36' TO HOLD-PROV-CBSA\n.\n373900\n374000\n374100\n374200**************YEARCHANGE 2009.3 **********************      *****\n374300\n374400 2300-2009-EXIT. EXIT.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n375400               MOVE '   33' TO HOLD-PROV-CBSA.\n375500",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   33' TO HOLD-PROV-CBSA\n.\n375500\n375600        IF HOLD-PROV-CBSA = '   30'\n375700          AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n375800          AND P-NEW-STATE = 30\n375900               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n376000               MOVE '   30' TO HOLD-PROV-CBSA.\n376100",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   30' TO HOLD-PROV-CBSA\n.\n376100\n376200        IF HOLD-PROV-CBSA = '   33'\n376300          AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n376400          AND P-NEW-STATE = 30",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n376600               MOVE '   30' TO HOLD-PROV-CBSA.\n376700",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   30' TO HOLD-PROV-CBSA\n.\n376700\n376800        IF HOLD-PROV-CBSA = '10900'\n376900           AND P-NEW-STATE = 31",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n377100               MOVE '   31' TO HOLD-PROV-CBSA.\n377200\n377300        IF HOLD-PROV-CBSA = '19340'\n377400           AND P-NEW-STATE = 16",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   31' TO HOLD-PROV-CBSA\n.\n377200\n377300        IF HOLD-PROV-CBSA = '19340'\n377400           AND P-NEW-STATE = 16\n377500               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n377600               MOVE '   16' TO HOLD-PROV-CBSA.\n377700\n377800        IF HOLD-PROV-CBSA = '19340'\n377900           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n378000           AND P-NEW-STATE = 16",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   16' TO HOLD-PROV-CBSA\n.\n377700\n377800        IF HOLD-PROV-CBSA = '19340'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n378200               MOVE '   16' TO HOLD-PROV-CBSA.\n378300\n378400        IF HOLD-PROV-CBSA = '21780'\n378500           AND P-NEW-STATE = 15",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   16' TO HOLD-PROV-CBSA\n.\n378300",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n378700               MOVE '   15' TO HOLD-PROV-CBSA.\n378800",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   15' TO HOLD-PROV-CBSA\n.\n378800\n378900        IF HOLD-PROV-CBSA = '21780'\n379000           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n379100           AND P-NEW-STATE = 15\n379200               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n379300               MOVE '   15' TO HOLD-PROV-CBSA.\n379400\n379500        IF HOLD-PROV-CBSA = '25180'\n379600           AND P-NEW-STATE = 21\n379700               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n379800               MOVE '   21' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   15' TO HOLD-PROV-CBSA\n.\n379400\n379500        IF HOLD-PROV-CBSA = '25180'\n379600           AND P-NEW-STATE = 21\n379700               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n379800               MOVE '   21' TO HOLD-PROV-CBSA.\n379900",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   21' TO HOLD-PROV-CBSA\n.\n379900\n380000        IF HOLD-PROV-CBSA = '25540'\n380100           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n380200           AND P-NEW-STATE = 07\n380300               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n380400               MOVE '   07' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n380400               MOVE '   07' TO HOLD-PROV-CBSA.\n380500",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   07' TO HOLD-PROV-CBSA\n.\n380500\n380600        IF HOLD-PROV-CBSA = '28420'\n380700           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n380800           AND P-NEW-STATE = 50\n380900               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n381000               MOVE '   50' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n381000               MOVE '   50' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   50' TO HOLD-PROV-CBSA\n.\n381100\n381200        IF HOLD-PROV-CBSA = '28940'\n381300           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n381400           AND P-NEW-STATE = 18\n381500               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n381600               MOVE '   18' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   18' TO HOLD-PROV-CBSA\n.\n381700\n381800        IF HOLD-PROV-CBSA = '28940'\n381900           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n382200               MOVE '   44' TO HOLD-PROV-CBSA.\n382300\n382400        IF HOLD-PROV-CBSA = '35084'\n382500           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n382600           AND P-NEW-STATE = 31",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   44' TO HOLD-PROV-CBSA\n.\n382300\n382400        IF HOLD-PROV-CBSA = '35084'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n382800               MOVE '   31' TO HOLD-PROV-CBSA.\n382900\n383000        IF HOLD-PROV-CBSA = '37620'\n383100           AND P-NEW-STATE = 36",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   31' TO HOLD-PROV-CBSA\n.\n382900\n383000        IF HOLD-PROV-CBSA = '37620'\n383100           AND P-NEW-STATE = 36",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n383300               MOVE '   36' TO HOLD-PROV-CBSA.\n383400\n383500        IF HOLD-PROV-CBSA = '37964'\n383600           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   36' TO HOLD-PROV-CBSA\n.\n383400\n383500        IF HOLD-PROV-CBSA = '37964'\n383600           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n383900               MOVE '   31' TO HOLD-PROV-CBSA.\n384000\n384100        IF HOLD-PROV-CBSA = '48540'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   31' TO HOLD-PROV-CBSA\n.\n384000",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n384400               MOVE '   36' TO HOLD-PROV-CBSA.\n384500\n384600        IF HOLD-PROV-CBSA = '48540'\n384700           AND P-NEW-STATE = 51\n384800               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n384900               MOVE '   51' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   36' TO HOLD-PROV-CBSA\n.\n384500\n384600        IF HOLD-PROV-CBSA = '48540'\n384700           AND P-NEW-STATE = 51\n384800               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n384900               MOVE '   51' TO HOLD-PROV-CBSA.\n385000",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n384900               MOVE '   51' TO HOLD-PROV-CBSA.\n385000\n385100        IF HOLD-PROV-CBSA = '48864'\n385200           AND P-NEW-STATE = 31\n385300               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n385400               MOVE '   31' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   51' TO HOLD-PROV-CBSA\n.\n385000\n385100        IF HOLD-PROV-CBSA = '48864'\n385200           AND P-NEW-STATE = 31\n385300               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n385400               MOVE '   31' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n385400               MOVE '   31' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   31' TO HOLD-PROV-CBSA\n.\n385500\n385600        IF HOLD-PROV-CBSA = '48864'\n385700           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n385800           AND P-NEW-STATE = 31\n385900               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n386000               MOVE '   31' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n386000               MOVE '   31' TO HOLD-PROV-CBSA.\n386100\n386200        IF HOLD-PROV-CBSA = '49660'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   31' TO HOLD-PROV-CBSA\n.\n386100\n386200        IF HOLD-PROV-CBSA = '49660'\n386300           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n386400           AND P-NEW-STATE = 36\n386500               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n386600               MOVE '   36' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n386600               MOVE '   36' TO HOLD-PROV-CBSA.\n386700\n386800        IF HOLD-PROV-CBSA = '19060'\n386900           AND P-NEW-STATE = 21",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   36' TO HOLD-PROV-CBSA\n.\n386700",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n387100               MOVE '   21' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   21' TO HOLD-PROV-CBSA\n.\n387200",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n387600               MOVE '   24' TO HOLD-PROV-CBSA.\n387700\n387800        IF HOLD-PROV-CBSA = '24220'\n387900           AND P-NEW-STATE = 24\n388000               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   24' TO HOLD-PROV-CBSA\n.\n387700\n387800        IF HOLD-PROV-CBSA = '24220'\n387900           AND P-NEW-STATE = 24\n388000               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n388100               MOVE '   24' TO HOLD-PROV-CBSA.\n388200\n388300        IF HOLD-PROV-CBSA = '30300'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   24' TO HOLD-PROV-CBSA\n.\n388200",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n388600               MOVE '   50' TO HOLD-PROV-CBSA.\n388700\n388800        IF HOLD-PROV-CBSA = '35084'\n388900           AND P-NEW-STATE = 31\n389000               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n389100               MOVE '   31' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   50' TO HOLD-PROV-CBSA\n.\n388700\n388800        IF HOLD-PROV-CBSA = '35084'\n388900           AND P-NEW-STATE = 31\n389000               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n389100               MOVE '   31' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n389100               MOVE '   31' TO HOLD-PROV-CBSA.\n389200\n389300        IF HOLD-PROV-CBSA = '48260'\n389400           AND P-NEW-STATE = 36\n389500               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n389600               MOVE '   36' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   31' TO HOLD-PROV-CBSA\n.\n389200\n389300        IF HOLD-PROV-CBSA = '48260'\n389400           AND P-NEW-STATE = 36",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n389600               MOVE '   36' TO HOLD-PROV-CBSA.\n389700\n389800        IF HOLD-PROV-CBSA = '48260'\n389900           AND P-NEW-STATE = 51\n390000               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n390100               MOVE '   51' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   36' TO HOLD-PROV-CBSA\n.\n389700\n389800        IF HOLD-PROV-CBSA = '48260'\n389900           AND P-NEW-STATE = 51",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n390100               MOVE '   51' TO HOLD-PROV-CBSA.\n390200\n390300\n390400\n390500**************YEARCHANGE 2010.0 **********************      *****\n390600",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   51' TO HOLD-PROV-CBSA\n.\n390200\n390300\n390400\n390500**************YEARCHANGE 2010.0 **********************      *****\n390600\n390700 2300-2010-EXIT. EXIT.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n391800               MOVE '   45' TO HOLD-PROV-CBSA.\n391900",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   45' TO HOLD-PROV-CBSA\n.\n391900",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n392400               MOVE '   37' TO HOLD-PROV-CBSA.\n392500\n392600        IF HOLD-PROV-CBSA = '10900'\n392700           AND P-NEW-STATE = 31\n392800               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   37' TO HOLD-PROV-CBSA\n.\n392500\n392600        IF HOLD-PROV-CBSA = '10900'\n392700           AND P-NEW-STATE = 31\n392800               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n392900               MOVE '   31' TO HOLD-PROV-CBSA.\n393000\n393100        IF HOLD-PROV-CBSA = '21500'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   31' TO HOLD-PROV-CBSA\n.\n393000",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n393500               MOVE '   33' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   33' TO HOLD-PROV-CBSA\n.\n393600\n393700        IF HOLD-PROV-CBSA = '21500'\n393800          AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n393900           AND P-NEW-STATE = 39\n394000               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n394100               MOVE '   39' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n394100               MOVE '   39' TO HOLD-PROV-CBSA.\n394200",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   39' TO HOLD-PROV-CBSA\n.\n394200\n394300        IF HOLD-PROV-CBSA = '21780'\n394400           AND P-NEW-STATE = 15\n394500               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n394600               MOVE '   15' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n394600               MOVE '   15' TO HOLD-PROV-CBSA.\n394700\n394800        IF HOLD-PROV-CBSA = '22900'\n394900           AND P-NEW-STATE = 37",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   15' TO HOLD-PROV-CBSA\n.\n394700\n394800        IF HOLD-PROV-CBSA = '22900'\n394900           AND P-NEW-STATE = 37\n395000               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n395100               MOVE '   37' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n395100               MOVE '   37' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   37' TO HOLD-PROV-CBSA\n.\n395200",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n395700               MOVE '   53' TO HOLD-PROV-CBSA.\n395800",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   53' TO HOLD-PROV-CBSA\n.\n395800",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n396300               MOVE '   07' TO HOLD-PROV-CBSA.\n396400",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   07' TO HOLD-PROV-CBSA\n.\n396400",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n396800               MOVE '   44' TO HOLD-PROV-CBSA.\n396900\n397000        IF HOLD-PROV-CBSA = '28700'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   44' TO HOLD-PROV-CBSA\n.\n396900",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n397300               MOVE '   49' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   49' TO HOLD-PROV-CBSA\n.\n397400",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n397900               MOVE '   18' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   18' TO HOLD-PROV-CBSA\n.\n398000\n398100        IF HOLD-PROV-CBSA = '28940'\n398200           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n398300           AND P-NEW-STATE = 44\n398400               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n398500               MOVE '   44' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n398500               MOVE '   44' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   44' TO HOLD-PROV-CBSA\n.\n398600",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n399000               MOVE '   36' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   36' TO HOLD-PROV-CBSA\n.\n399100\n399200        IF HOLD-PROV-CBSA = '37620'\n399300           AND P-NEW-STATE = 51\n399400               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n399500               MOVE '   51' TO HOLD-PROV-CBSA.\n399600",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n399500               MOVE '   51' TO HOLD-PROV-CBSA.\n399600\n399700        IF HOLD-PROV-CBSA = '37964'\n399800           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n399900           AND P-NEW-STATE = 31\n400000               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   51' TO HOLD-PROV-CBSA\n.\n399600\n399700        IF HOLD-PROV-CBSA = '37964'\n399800           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n399900           AND P-NEW-STATE = 31\n400000               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n400100               MOVE '   31' TO HOLD-PROV-CBSA.\n400200",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   31' TO HOLD-PROV-CBSA\n.\n400200",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n400700               MOVE '   36' TO HOLD-PROV-CBSA.\n400800\n400900        IF HOLD-PROV-CBSA = '38300'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   36' TO HOLD-PROV-CBSA\n.\n400800",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n401300               MOVE '   39' TO HOLD-PROV-CBSA.\n401400\n401500        IF HOLD-PROV-CBSA = '43580'\n401600           AND P-NEW-STATE = 43\n401700               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   39' TO HOLD-PROV-CBSA\n.\n401400\n401500        IF HOLD-PROV-CBSA = '43580'\n401600           AND P-NEW-STATE = 43\n401700               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n401800               MOVE '   43' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n401800               MOVE '   43' TO HOLD-PROV-CBSA.\n401900\n402000        IF HOLD-PROV-CBSA = '48540'\n402100           AND P-NEW-STATE = 36",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   43' TO HOLD-PROV-CBSA\n.\n401900\n402000        IF HOLD-PROV-CBSA = '48540'\n402100           AND P-NEW-STATE = 36\n402200               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n402300               MOVE '   36' TO HOLD-PROV-CBSA.\n402400",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n402300               MOVE '   36' TO HOLD-PROV-CBSA.\n402400\n402500        IF HOLD-PROV-CBSA = '48540'\n402600           AND P-NEW-STATE = 51",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   36' TO HOLD-PROV-CBSA\n.\n402400\n402500        IF HOLD-PROV-CBSA = '48540'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n402800               MOVE '   51' TO HOLD-PROV-CBSA.\n402900\n403000        IF HOLD-PROV-CBSA = '48864'\n403100           AND P-NEW-STATE = 31\n403200               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   51' TO HOLD-PROV-CBSA\n.\n402900\n403000        IF HOLD-PROV-CBSA = '48864'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n403300               MOVE '   31' TO HOLD-PROV-CBSA.\n403400",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   31' TO HOLD-PROV-CBSA\n.\n403400\n403500        IF HOLD-PROV-CBSA = '17300'\n403600           AND P-NEW-STATE = 18\n403700               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n403800               MOVE '   18' TO HOLD-PROV-CBSA.\n403900",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n403800               MOVE '   18' TO HOLD-PROV-CBSA.\n403900\n404000        IF HOLD-PROV-CBSA = '17300'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   18' TO HOLD-PROV-CBSA\n.\n403900",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n404300               MOVE '   44' TO HOLD-PROV-CBSA.\n404400\n404500        IF HOLD-PROV-CBSA = '19060'\n404600           AND P-NEW-STATE = 21\n404700               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   44' TO HOLD-PROV-CBSA\n.\n404400\n404500        IF HOLD-PROV-CBSA = '19060'\n404600           AND P-NEW-STATE = 21",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n404800               MOVE '   21' TO HOLD-PROV-CBSA.\n404900\n405000        IF HOLD-PROV-CBSA = '22020'\n405100           AND P-NEW-STATE = 24\n405200               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   21' TO HOLD-PROV-CBSA\n.\n404900\n405000        IF HOLD-PROV-CBSA = '22020'\n405100           AND P-NEW-STATE = 24\n405200               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n405300               MOVE '   24' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n405300               MOVE '   24' TO HOLD-PROV-CBSA.\n405400\n405500        IF HOLD-PROV-CBSA = '22020'\n405600           AND P-NEW-STATE = 35\n405700               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   24' TO HOLD-PROV-CBSA\n.\n405400\n405500        IF HOLD-PROV-CBSA = '22020'\n405600           AND P-NEW-STATE = 35\n405700               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n405800               MOVE '   35' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n405800               MOVE '   35' TO HOLD-PROV-CBSA.\n405900",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   35' TO HOLD-PROV-CBSA\n.\n405900\n406000        IF HOLD-PROV-CBSA = '24220'\n406100           AND P-NEW-STATE = 24\n406200               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n406300               MOVE '   24' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n406300               MOVE '   24' TO HOLD-PROV-CBSA.\n406400\n406500        IF HOLD-PROV-CBSA = '24220'\n406600           AND P-NEW-STATE = 35\n406700               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n406800               MOVE '   35' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   24' TO HOLD-PROV-CBSA\n.\n406400\n406500        IF HOLD-PROV-CBSA = '24220'\n406600           AND P-NEW-STATE = 35\n406700               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n406800               MOVE '   35' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n406800               MOVE '   35' TO HOLD-PROV-CBSA.\n406900\n407000        IF HOLD-PROV-CBSA = '30300'\n407100           AND P-NEW-STATE = 50\n407200               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n407300               MOVE '   50' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   35' TO HOLD-PROV-CBSA\n.\n406900\n407000        IF HOLD-PROV-CBSA = '30300'\n407100           AND P-NEW-STATE = 50\n407200               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n407300               MOVE '   50' TO HOLD-PROV-CBSA.\n407400",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n407300               MOVE '   50' TO HOLD-PROV-CBSA.\n407400\n407500        IF HOLD-PROV-CBSA = '44600'\n407600           AND P-NEW-STATE = 36\n407700               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   50' TO HOLD-PROV-CBSA\n.\n407400\n407500        IF HOLD-PROV-CBSA = '44600'\n407600           AND P-NEW-STATE = 36",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n407800               MOVE '   36' TO HOLD-PROV-CBSA.\n407900\n408000        IF HOLD-PROV-CBSA = '44600'\n408100           AND P-NEW-STATE = 51\n408200               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   36' TO HOLD-PROV-CBSA\n.\n407900\n408000        IF HOLD-PROV-CBSA = '44600'\n408100           AND P-NEW-STATE = 51",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n408300               MOVE '   51' TO HOLD-PROV-CBSA.\n408400\n408500        IF HOLD-PROV-CBSA = '45500'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   51' TO HOLD-PROV-CBSA\n.\n408400\n408500        IF HOLD-PROV-CBSA = '45500'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n408800               MOVE '   45' TO HOLD-PROV-CBSA.\n408900\n409000\n409100**************YEARCHANGE 2011.0 **********************      *****",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   45' TO HOLD-PROV-CBSA\n.\n408900\n409000\n409100**************YEARCHANGE 2011.0 **********************      *****",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n410500               MOVE '   30' TO HOLD-PROV-CBSA.\n410600\n410700        IF HOLD-PROV-CBSA = '   39'\n410800          AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n410900          AND P-NEW-STATE = 39\n411000               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   30' TO HOLD-PROV-CBSA\n.\n410600\n410700        IF HOLD-PROV-CBSA = '   39'\n410800          AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n410900          AND P-NEW-STATE = 39\n411000               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n411100               MOVE '   39' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n411100               MOVE '   39' TO HOLD-PROV-CBSA.\n411200\n411300        IF HOLD-PROV-CBSA = '   39'\n411400          AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   39' TO HOLD-PROV-CBSA\n.\n411200\n411300        IF HOLD-PROV-CBSA = '   39'\n411400          AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n411500          AND P-NEW-STATE = 33",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n411700               MOVE '   33' TO HOLD-PROV-CBSA.\n411800",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   33' TO HOLD-PROV-CBSA\n.\n411800\n411900        IF HOLD-PROV-CBSA = '10900'\n412000           AND P-NEW-STATE = 31",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n412200               MOVE '   31' TO HOLD-PROV-CBSA.\n412300\n412400        IF HOLD-PROV-CBSA = '14484'\n412500           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n412600           AND P-NEW-STATE = 22",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   31' TO HOLD-PROV-CBSA\n.\n412300\n412400        IF HOLD-PROV-CBSA = '14484'\n412500           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n412600           AND P-NEW-STATE = 22\n412700               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n412800               MOVE '   22' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n412800               MOVE '   22' TO HOLD-PROV-CBSA.\n412900",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   22' TO HOLD-PROV-CBSA\n.\n412900\n413000        IF HOLD-PROV-CBSA = '16020'\n413100           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n413200           AND P-NEW-STATE = 14",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n413400               MOVE '   14' TO HOLD-PROV-CBSA.\n413500",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   14' TO HOLD-PROV-CBSA\n.\n413500",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n414000               MOVE '   33' TO HOLD-PROV-CBSA.\n414100\n414200        IF HOLD-PROV-CBSA = '21500'\n414300          AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   33' TO HOLD-PROV-CBSA\n.\n414100\n414200        IF HOLD-PROV-CBSA = '21500'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n414600               MOVE '   39' TO HOLD-PROV-CBSA.\n414700\n414800        IF HOLD-PROV-CBSA = '22900'\n414900           AND P-NEW-STATE = 37",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   39' TO HOLD-PROV-CBSA\n.\n414700\n414800        IF HOLD-PROV-CBSA = '22900'\n414900           AND P-NEW-STATE = 37\n415000               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n415100               MOVE '   37' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n415100               MOVE '   37' TO HOLD-PROV-CBSA.\n415200\n415300        IF HOLD-PROV-CBSA = '25180'\n415400           AND P-NEW-STATE = 21",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   37' TO HOLD-PROV-CBSA\n.\n415200\n415300        IF HOLD-PROV-CBSA = '25180'\n415400           AND P-NEW-STATE = 21\n415500               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n415600               MOVE '   21' TO HOLD-PROV-CBSA.\n415700\n415800        IF HOLD-PROV-CBSA = '25540'\n415900           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n416000           AND P-NEW-STATE = 07\n416100               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   21' TO HOLD-PROV-CBSA\n.\n415700\n415800        IF HOLD-PROV-CBSA = '25540'\n415900           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n416000           AND P-NEW-STATE = 07",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n416200               MOVE '   07' TO HOLD-PROV-CBSA.\n416300",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   07' TO HOLD-PROV-CBSA\n.\n416300\n416400        IF HOLD-PROV-CBSA = '25540'\n416500           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n416600           AND P-NEW-STATE = 22\n416700               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n416800               MOVE '   22' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n416800               MOVE '   22' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   22' TO HOLD-PROV-CBSA\n.\n416900\n417000        IF HOLD-PROV-CBSA = '26820'\n417100           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n417400               MOVE '   53' TO HOLD-PROV-CBSA.\n417500\n417600        IF HOLD-PROV-CBSA = '28700'\n417700           AND P-NEW-STATE = 44\n417800               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n417900               MOVE '   44' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   53' TO HOLD-PROV-CBSA\n.\n417500\n417600        IF HOLD-PROV-CBSA = '28700'\n417700           AND P-NEW-STATE = 44\n417800               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n417900               MOVE '   44' TO HOLD-PROV-CBSA.\n418000",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n417900               MOVE '   44' TO HOLD-PROV-CBSA.\n418000\n418100        IF HOLD-PROV-CBSA = '28700'\n418200           AND P-NEW-STATE = 49\n418300               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   44' TO HOLD-PROV-CBSA\n.\n418000\n418100        IF HOLD-PROV-CBSA = '28700'\n418200           AND P-NEW-STATE = 49\n418300               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n418400               MOVE '   49' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n418400               MOVE '   49' TO HOLD-PROV-CBSA.\n418500\n418600        IF HOLD-PROV-CBSA = '28700'\n418700           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n418800           AND P-NEW-STATE = 18",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   49' TO HOLD-PROV-CBSA\n.\n418500\n418600        IF HOLD-PROV-CBSA = '28700'\n418700           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n419000               MOVE '   18' TO HOLD-PROV-CBSA.\n419100\n419200        IF HOLD-PROV-CBSA = '28700'\n419300           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n419400           AND P-NEW-STATE = 44\n419500               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   18' TO HOLD-PROV-CBSA\n.\n419100\n419200        IF HOLD-PROV-CBSA = '28700'\n419300           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n419400           AND P-NEW-STATE = 44\n419500               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n419600               MOVE '   44' TO HOLD-PROV-CBSA.\n419700\n419800        IF HOLD-PROV-CBSA = '28940'\n419900           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   44' TO HOLD-PROV-CBSA\n.\n419700\n419800        IF HOLD-PROV-CBSA = '28940'\n419900           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n420200               MOVE '   18' TO HOLD-PROV-CBSA.\n420300",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   18' TO HOLD-PROV-CBSA\n.\n420300",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n420800               MOVE '   31' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   31' TO HOLD-PROV-CBSA\n.\n420900\n421000        IF HOLD-PROV-CBSA = '37620'\n421100           AND P-NEW-STATE = 36\n421200               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n421300               MOVE '   36' TO HOLD-PROV-CBSA.\n421400",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n421300               MOVE '   36' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   36' TO HOLD-PROV-CBSA\n.\n421400\n421500        IF HOLD-PROV-CBSA = '37964'\n421600           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n421700           AND P-NEW-STATE = 31\n421800               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n421900               MOVE '   31' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n421900               MOVE '   31' TO HOLD-PROV-CBSA.\n422000\n422100        IF HOLD-PROV-CBSA = '43580'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   31' TO HOLD-PROV-CBSA\n.\n422000\n422100        IF HOLD-PROV-CBSA = '43580'\n422200           AND P-NEW-STATE = 43\n422300               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n422400               MOVE '   43' TO HOLD-PROV-CBSA.\n422500",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n422400               MOVE '   43' TO HOLD-PROV-CBSA.\n422500\n422600        IF HOLD-PROV-CBSA = '44600'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   43' TO HOLD-PROV-CBSA\n.\n422500\n422600        IF HOLD-PROV-CBSA = '44600'\n422700           AND P-NEW-STATE = 36\n422800               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n422900               MOVE '   36' TO HOLD-PROV-CBSA.\n423000",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n422900               MOVE '   36' TO HOLD-PROV-CBSA.\n423000\n423100        IF HOLD-PROV-CBSA = '44600'\n423200           AND P-NEW-STATE = 51\n423300               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n423400               MOVE '   51' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   36' TO HOLD-PROV-CBSA\n.\n423000\n423100        IF HOLD-PROV-CBSA = '44600'\n423200           AND P-NEW-STATE = 51",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n423400               MOVE '   51' TO HOLD-PROV-CBSA.\n423500\n423600        IF HOLD-PROV-CBSA = '48540'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   51' TO HOLD-PROV-CBSA\n.\n423500\n423600        IF HOLD-PROV-CBSA = '48540'\n423700           AND P-NEW-STATE = 36",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n423900               MOVE '   36' TO HOLD-PROV-CBSA.\n424000\n424100        IF HOLD-PROV-CBSA = '48540'\n424200           AND P-NEW-STATE = 51\n424300               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n424400               MOVE '   51' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   36' TO HOLD-PROV-CBSA\n.\n424000\n424100        IF HOLD-PROV-CBSA = '48540'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n424400               MOVE '   51' TO HOLD-PROV-CBSA.\n424500\n424600        IF HOLD-PROV-CBSA = '48864'\n424700           AND P-NEW-STATE = 31\n424800               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n424900               MOVE '   31' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   51' TO HOLD-PROV-CBSA\n.\n424500",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n424900               MOVE '   31' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   31' TO HOLD-PROV-CBSA\n.\n425000\n425100        IF HOLD-PROV-CBSA = '49660'\n425200           AND P-NEW-STATE = 36",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n425400               MOVE '   36' TO HOLD-PROV-CBSA.\n425500\n425600        IF HOLD-PROV-CBSA = '49660'\n425700           AND P-NEW-STATE = 39",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   36' TO HOLD-PROV-CBSA\n.\n425500\n425600        IF HOLD-PROV-CBSA = '49660'\n425700           AND P-NEW-STATE = 39",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n425900               MOVE '   39' TO HOLD-PROV-CBSA.\n426000\n426100        IF HOLD-PROV-CBSA = '19060'\n426200           AND P-NEW-STATE = 21",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   39' TO HOLD-PROV-CBSA\n.\n426000",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n426400               MOVE '   21' TO HOLD-PROV-CBSA.\n426500",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   21' TO HOLD-PROV-CBSA\n.\n426500\n426600        IF HOLD-PROV-CBSA = '22020'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n426900               MOVE '   24' TO HOLD-PROV-CBSA.\n427000\n427100        IF HOLD-PROV-CBSA = '22020'\n427200           AND P-NEW-STATE = 35",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   24' TO HOLD-PROV-CBSA\n.\n427000\n427100        IF HOLD-PROV-CBSA = '22020'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n427400               MOVE '   35' TO HOLD-PROV-CBSA.\n427500\n427600        IF HOLD-PROV-CBSA = '24220'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   35' TO HOLD-PROV-CBSA\n.\n427500\n427600        IF HOLD-PROV-CBSA = '24220'\n427700           AND P-NEW-STATE = 24\n427800               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n427900               MOVE '   24' TO HOLD-PROV-CBSA.\n428000",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n427900               MOVE '   24' TO HOLD-PROV-CBSA.\n428000\n428100        IF HOLD-PROV-CBSA = '24220'\n428200           AND P-NEW-STATE = 35",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   24' TO HOLD-PROV-CBSA\n.\n428000",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n428400               MOVE '   35' TO HOLD-PROV-CBSA.\n428500\n428600        IF HOLD-PROV-CBSA = '30300'\n428700           AND P-NEW-STATE = 50",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   35' TO HOLD-PROV-CBSA\n.\n428500\n428600        IF HOLD-PROV-CBSA = '30300'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n428900               MOVE '   50' TO HOLD-PROV-CBSA.\n429000\n429100        IF HOLD-PROV-CBSA = '30860'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   50' TO HOLD-PROV-CBSA\n.\n429000\n429100        IF HOLD-PROV-CBSA = '30860'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n429400               MOVE '   46' TO HOLD-PROV-CBSA.\n429500\n429600        IF HOLD-PROV-CBSA = '35084'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   46' TO HOLD-PROV-CBSA\n.\n429500\n429600        IF HOLD-PROV-CBSA = '35084'\n429700           AND P-NEW-STATE = 31\n429800               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n429900               MOVE '   31' TO HOLD-PROV-CBSA.\n430000",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n429900               MOVE '   31' TO HOLD-PROV-CBSA.\n430000",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   31' TO HOLD-PROV-CBSA\n.\n430000\n430100        IF HOLD-PROV-CBSA = '39300'\n430200           AND P-NEW-STATE = 22\n430300               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n430400               MOVE '   22' TO HOLD-PROV-CBSA.\n430500",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n430400               MOVE '   22' TO HOLD-PROV-CBSA.\n430500",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   22' TO HOLD-PROV-CBSA\n.\n430500",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n430900               MOVE '   45' TO HOLD-PROV-CBSA.\n431000\n431100**************YEARCHANGE 2012.0 ******************************",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   45' TO HOLD-PROV-CBSA\n.\n431000\n431100**************YEARCHANGE 2012.0 ******************************\n431200\n431300 2300-2012-EXIT. EXIT.\n431400\n431500**************YEARCHANGE 2013.0 **********************      *****",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n432400               MOVE '   31' TO HOLD-PROV-CBSA.\n432500\n432600        IF HOLD-PROV-CBSA = '14484'\n432700           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n432800           AND P-NEW-STATE = 22",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   31' TO HOLD-PROV-CBSA\n.\n432500\n432600        IF HOLD-PROV-CBSA = '14484'\n432700           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n432800           AND P-NEW-STATE = 22",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n433000               MOVE '   22' TO HOLD-PROV-CBSA.\n433100\n433200        IF HOLD-PROV-CBSA = '16020'\n433300           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n433400           AND P-NEW-STATE = 14",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   22' TO HOLD-PROV-CBSA\n.\n433100\n433200        IF HOLD-PROV-CBSA = '16020'\n433300           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n433400           AND P-NEW-STATE = 14\n433500               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n433600               MOVE '   14' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n433600               MOVE '   14' TO HOLD-PROV-CBSA.\n433700\n433800        IF HOLD-PROV-CBSA = '21500'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   14' TO HOLD-PROV-CBSA\n.\n433700\n433800        IF HOLD-PROV-CBSA = '21500'\n433900          AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n434000           AND P-NEW-STATE = 33\n434100               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n434200               MOVE '   33' TO HOLD-PROV-CBSA.\n434300\n434400        IF HOLD-PROV-CBSA = '21500'\n434500          AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n434600           AND P-NEW-STATE = 39",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   33' TO HOLD-PROV-CBSA\n.\n434300\n434400        IF HOLD-PROV-CBSA = '21500'\n434500          AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n434600           AND P-NEW-STATE = 39",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n434800               MOVE '   39' TO HOLD-PROV-CBSA.\n434900",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   39' TO HOLD-PROV-CBSA\n.\n434900\n435000        IF HOLD-PROV-CBSA = '21780'\n435100          AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n435200           AND P-NEW-STATE = 15",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n435400               MOVE '   15' TO HOLD-PROV-CBSA.\n435500\n435600        IF HOLD-PROV-CBSA = '24580'\n435700          AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   15' TO HOLD-PROV-CBSA\n.\n435500\n435600        IF HOLD-PROV-CBSA = '24580'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n436000               MOVE '   52' TO HOLD-PROV-CBSA.\n436100\n436200        IF HOLD-PROV-CBSA = '25540'\n436300           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n436400           AND P-NEW-STATE = 07\n436500               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   52' TO HOLD-PROV-CBSA\n.\n436100\n436200        IF HOLD-PROV-CBSA = '25540'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n436600               MOVE '   07' TO HOLD-PROV-CBSA.\n436700\n436800        IF HOLD-PROV-CBSA = '25540'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   07' TO HOLD-PROV-CBSA\n.\n436700\n436800        IF HOLD-PROV-CBSA = '25540'\n436900           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n437000           AND P-NEW-STATE = 22\n437100               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n437200               MOVE '   22' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n437200               MOVE '   22' TO HOLD-PROV-CBSA.\n437300\n437400        IF HOLD-PROV-CBSA = '26820'\n437500           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n437600           AND P-NEW-STATE = 53",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   22' TO HOLD-PROV-CBSA\n.\n437300",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n437800               MOVE '   53' TO HOLD-PROV-CBSA.\n437900",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   53' TO HOLD-PROV-CBSA\n.\n437900\n438000        IF HOLD-PROV-CBSA = '27900'\n438100           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n438200           AND P-NEW-STATE = 17\n438300               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n438400               MOVE '   17' TO HOLD-PROV-CBSA.\n438500",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   17' TO HOLD-PROV-CBSA\n.\n438500\n438600        IF HOLD-PROV-CBSA = '28700'\n438700           AND P-NEW-STATE = 44",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n438900               MOVE '   44' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   44' TO HOLD-PROV-CBSA\n.\n439000\n439100        IF HOLD-PROV-CBSA = '28700'\n439200           AND P-NEW-STATE = 49\n439300               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n439400               MOVE '   49' TO HOLD-PROV-CBSA.\n439500",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   49' TO HOLD-PROV-CBSA\n.\n439500\n439600        IF HOLD-PROV-CBSA = '28700'\n439700           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n439800           AND P-NEW-STATE = 18",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n440000               MOVE '   18' TO HOLD-PROV-CBSA.\n440100\n440200        IF HOLD-PROV-CBSA = '28700'\n440300           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   18' TO HOLD-PROV-CBSA\n.\n440100\n440200        IF HOLD-PROV-CBSA = '28700'\n440300           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n440400           AND P-NEW-STATE = 44",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n440600               MOVE '   44' TO HOLD-PROV-CBSA.\n440700",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   44' TO HOLD-PROV-CBSA\n.\n440700\n440800        IF HOLD-PROV-CBSA = '28940'\n440900           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n441200               MOVE '   18' TO HOLD-PROV-CBSA.\n441300\n441400        IF HOLD-PROV-CBSA = '35084'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   18' TO HOLD-PROV-CBSA\n.\n441300\n441400        IF HOLD-PROV-CBSA = '35084'\n441500           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n441600           AND P-NEW-STATE = 31",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n441800               MOVE '   31' TO HOLD-PROV-CBSA.\n441900\n442000        IF HOLD-PROV-CBSA = '37620'\n442100           AND P-NEW-STATE = 36",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   31' TO HOLD-PROV-CBSA\n.\n441900\n442000        IF HOLD-PROV-CBSA = '37620'\n442100           AND P-NEW-STATE = 36",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n442300               MOVE '   36' TO HOLD-PROV-CBSA.\n442400\n442500        IF HOLD-PROV-CBSA = '37964'\n442600           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   36' TO HOLD-PROV-CBSA\n.\n442400\n442500        IF HOLD-PROV-CBSA = '37964'\n442600           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n442700           AND P-NEW-STATE = 31\n442800               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n442900               MOVE '   31' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n442900               MOVE '   31' TO HOLD-PROV-CBSA.\n443000\n443100        IF HOLD-PROV-CBSA = '38300'\n443200           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n443300           AND P-NEW-STATE = 36\n443400               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   31' TO HOLD-PROV-CBSA\n.\n443000\n443100        IF HOLD-PROV-CBSA = '38300'\n443200           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n443500               MOVE '   36' TO HOLD-PROV-CBSA.\n443600\n443700        IF HOLD-PROV-CBSA = '43580'\n443800           AND P-NEW-STATE = 43",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   36' TO HOLD-PROV-CBSA\n.\n443600\n443700        IF HOLD-PROV-CBSA = '43580'\n443800           AND P-NEW-STATE = 43\n443900               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n444000               MOVE '   43' TO HOLD-PROV-CBSA.\n444100",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n444000               MOVE '   43' TO HOLD-PROV-CBSA.\n444100\n444200        IF HOLD-PROV-CBSA = '48540'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   43' TO HOLD-PROV-CBSA\n.\n444100\n444200        IF HOLD-PROV-CBSA = '48540'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n444500               MOVE '   36' TO HOLD-PROV-CBSA.\n444600\n444700        IF HOLD-PROV-CBSA = '48540'\n444800           AND P-NEW-STATE = 51\n444900               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   36' TO HOLD-PROV-CBSA\n.\n444600",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n445000               MOVE '   51' TO HOLD-PROV-CBSA.\n445100\n445200        IF HOLD-PROV-CBSA = '48864'\n445300           AND P-NEW-STATE = 31",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   51' TO HOLD-PROV-CBSA\n.\n445100\n445200        IF HOLD-PROV-CBSA = '48864'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n445500               MOVE '   31' TO HOLD-PROV-CBSA.\n445600\n445700        IF HOLD-PROV-CBSA = '49660'\n445800           AND P-NEW-STATE = 36\n445900               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   31' TO HOLD-PROV-CBSA\n.\n445600\n445700        IF HOLD-PROV-CBSA = '49660'\n445800           AND P-NEW-STATE = 36\n445900               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n446000               MOVE '   36' TO HOLD-PROV-CBSA.\n446100\n446200        IF HOLD-PROV-CBSA = '49660'\n446300           AND P-NEW-STATE = 39\n446400               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   36' TO HOLD-PROV-CBSA\n.\n446100\n446200        IF HOLD-PROV-CBSA = '49660'\n446300           AND P-NEW-STATE = 39",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n446500               MOVE '   39' TO HOLD-PROV-CBSA.\n446600\n446700        IF HOLD-PROV-CBSA = '22020'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   39' TO HOLD-PROV-CBSA\n.\n446600\n446700        IF HOLD-PROV-CBSA = '22020'\n446800           AND P-NEW-STATE = 24\n446900               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n447000               MOVE '   24' TO HOLD-PROV-CBSA.\n447100\n447200        IF HOLD-PROV-CBSA = '22020'\n447300           AND P-NEW-STATE = 35\n447400               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   24' TO HOLD-PROV-CBSA\n.\n447100\n447200        IF HOLD-PROV-CBSA = '22020'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n447500               MOVE '   35' TO HOLD-PROV-CBSA.\n447600\n447700        IF HOLD-PROV-CBSA = '24220'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   35' TO HOLD-PROV-CBSA\n.\n447600\n447700        IF HOLD-PROV-CBSA = '24220'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n448000               MOVE '   24' TO HOLD-PROV-CBSA.\n448100\n448200        IF HOLD-PROV-CBSA = '24220'\n448300           AND P-NEW-STATE = 35\n448400               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   24' TO HOLD-PROV-CBSA\n.\n448100\n448200        IF HOLD-PROV-CBSA = '24220'\n448300           AND P-NEW-STATE = 35",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n448500               MOVE '   35' TO HOLD-PROV-CBSA.\n448600\n448700        IF HOLD-PROV-CBSA = '30300'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   35' TO HOLD-PROV-CBSA\n.\n448600\n448700        IF HOLD-PROV-CBSA = '30300'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n449000               MOVE '   50' TO HOLD-PROV-CBSA.\n449100\n449200        IF HOLD-PROV-CBSA = '39300'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   50' TO HOLD-PROV-CBSA\n.\n449100\n449200        IF HOLD-PROV-CBSA = '39300'\n449300           AND P-NEW-STATE = 22",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n449500               MOVE '   22' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   22' TO HOLD-PROV-CBSA\n.\n449600\n449700        IF HOLD-PROV-CBSA = '39300'\n449800           AND P-NEW-STATE = 41\n449900               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n450000               MOVE '   41' TO HOLD-PROV-CBSA.\n450100",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n450000               MOVE '   41' TO HOLD-PROV-CBSA.\n450100\n450200        IF HOLD-PROV-CBSA = '44600'\n450300           AND P-NEW-STATE = 36\n450400               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n450500               MOVE '   36' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   41' TO HOLD-PROV-CBSA\n.\n450100\n450200        IF HOLD-PROV-CBSA = '44600'\n450300           AND P-NEW-STATE = 36\n450400               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n450500               MOVE '   36' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   36' TO HOLD-PROV-CBSA\n.\n450600\n450700\n450800**************YEARCHANGE 2013.0 ******************************\n450900\n451000 2300-2013-EXIT. EXIT.\n451100",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n452100               MOVE '   07' TO HOLD-PROV-CBSA.\n452200\n452300        IF HOLD-PROV-CBSA = '   36'\n452400           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   07' TO HOLD-PROV-CBSA\n.\n452200\n452300        IF HOLD-PROV-CBSA = '   36'\n452400           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n452500           AND P-NEW-STATE = 36",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n452700               MOVE '   36' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   36' TO HOLD-PROV-CBSA\n.\n452800\n452900        IF HOLD-PROV-CBSA = '10900'\n453000           AND P-NEW-STATE = 31\n453100               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n453200               MOVE '   31' TO HOLD-PROV-CBSA.\n453300",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n453200               MOVE '   31' TO HOLD-PROV-CBSA.\n453300\n453400        IF HOLD-PROV-CBSA = '14484'\n453500           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n453600           AND P-NEW-STATE = 22",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   31' TO HOLD-PROV-CBSA\n.\n453300\n453400        IF HOLD-PROV-CBSA = '14484'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n453800               MOVE '   22' TO HOLD-PROV-CBSA.\n453900",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   22' TO HOLD-PROV-CBSA\n.\n453900\n454000        IF HOLD-PROV-CBSA = '17300'\n454100           AND P-NEW-STATE = 18\n454200               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n454300               MOVE '   18' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n454300               MOVE '   18' TO HOLD-PROV-CBSA.\n454400\n454500        IF HOLD-PROV-CBSA = '22900'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   18' TO HOLD-PROV-CBSA\n.\n454400\n454500        IF HOLD-PROV-CBSA = '22900'\n454600           AND P-NEW-STATE = 37",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n454800               MOVE '   37' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   37' TO HOLD-PROV-CBSA\n.\n454900\n455000        IF HOLD-PROV-CBSA = '25540'\n455100          AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n455200           AND P-NEW-STATE = 07\n455300               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n455400               MOVE '   07' TO HOLD-PROV-CBSA.\n455500\n455600        IF HOLD-PROV-CBSA = '25540'\n455700          AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n455800           AND P-NEW-STATE = 22",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   07' TO HOLD-PROV-CBSA\n.\n455500\n455600        IF HOLD-PROV-CBSA = '25540'\n455700          AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n455800           AND P-NEW-STATE = 22\n455900               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n456000               MOVE '   22' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n456000               MOVE '   22' TO HOLD-PROV-CBSA.\n456100\n456200        IF HOLD-PROV-CBSA = '26820'\n456300           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n456400           AND P-NEW-STATE = 53",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   22' TO HOLD-PROV-CBSA\n.\n456100\n456200        IF HOLD-PROV-CBSA = '26820'\n456300           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n456400           AND P-NEW-STATE = 53\n456500               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n456600               MOVE '   53' TO HOLD-PROV-CBSA.\n456700",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   53' TO HOLD-PROV-CBSA\n.\n456700\n456800        IF HOLD-PROV-CBSA = '27180'\n456900           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n457200               MOVE '   25' TO HOLD-PROV-CBSA.\n457300\n457400        IF HOLD-PROV-CBSA = '28700'\n457500           AND P-NEW-STATE = 44\n457600               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n457700               MOVE '   44' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   25' TO HOLD-PROV-CBSA\n.\n457300\n457400        IF HOLD-PROV-CBSA = '28700'\n457500           AND P-NEW-STATE = 44\n457600               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n457700               MOVE '   44' TO HOLD-PROV-CBSA.\n457800\n457900        IF HOLD-PROV-CBSA = '28700'\n458000           AND P-NEW-STATE = 49",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   44' TO HOLD-PROV-CBSA\n.\n457800",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n458200               MOVE '   49' TO HOLD-PROV-CBSA.\n458300",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   49' TO HOLD-PROV-CBSA\n.\n458300\n458400        IF HOLD-PROV-CBSA = '35644'\n458500           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n458600           AND P-NEW-STATE = 07\n458700               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n458800               MOVE '   07' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n458800               MOVE '   07' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   07' TO HOLD-PROV-CBSA\n.\n458900\n459000        IF HOLD-PROV-CBSA = '37620'\n459100           AND P-NEW-STATE = 36\n459200               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n459300               MOVE '   36' TO HOLD-PROV-CBSA.\n459400\n459500        IF HOLD-PROV-CBSA = '43580'\n459600           AND P-NEW-STATE = 43",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   36' TO HOLD-PROV-CBSA\n.\n459400\n459500        IF HOLD-PROV-CBSA = '43580'\n459600           AND P-NEW-STATE = 43",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n459800               MOVE '   43' TO HOLD-PROV-CBSA.\n459900\n460000        IF HOLD-PROV-CBSA = '48540'\n460100           AND P-NEW-STATE = 36\n460200               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n460300               MOVE '   36' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   43' TO HOLD-PROV-CBSA\n.\n459900",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n460300               MOVE '   36' TO HOLD-PROV-CBSA.\n460400\n460500        IF HOLD-PROV-CBSA = '48540'\n460600           AND P-NEW-STATE = 51\n460700               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   36' TO HOLD-PROV-CBSA\n.\n460400\n460500        IF HOLD-PROV-CBSA = '48540'\n460600           AND P-NEW-STATE = 51\n460700               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n460800               MOVE '   51' TO HOLD-PROV-CBSA.\n460900\n461000        IF HOLD-PROV-CBSA = '48864'\n461100           AND P-NEW-STATE = 31\n461200               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   51' TO HOLD-PROV-CBSA\n.\n460900",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n461300               MOVE '   31' TO HOLD-PROV-CBSA.\n461400\n461500        IF HOLD-PROV-CBSA = '49660'\n461600           AND P-NEW-STATE = 36",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   31' TO HOLD-PROV-CBSA\n.\n461400\n461500        IF HOLD-PROV-CBSA = '49660'\n461600           AND P-NEW-STATE = 36\n461700               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n461800               MOVE '   36' TO HOLD-PROV-CBSA.\n461900\n462000        IF HOLD-PROV-CBSA = '49660'\n462100           AND P-NEW-STATE = 39\n462200               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   36' TO HOLD-PROV-CBSA\n.\n461900\n462000        IF HOLD-PROV-CBSA = '49660'\n462100           AND P-NEW-STATE = 39",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n462300               MOVE '   39' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   39' TO HOLD-PROV-CBSA\n.\n462400\n462500        IF HOLD-PROV-CBSA = '19060'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n462800               MOVE '   21' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   21' TO HOLD-PROV-CBSA\n.\n462900\n463000        IF HOLD-PROV-CBSA = '22020'\n463100           AND P-NEW-STATE = 24\n463200               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n463300               MOVE '   24' TO HOLD-PROV-CBSA.\n463400\n463500        IF HOLD-PROV-CBSA = '22020'\n463600           AND P-NEW-STATE = 35",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   24' TO HOLD-PROV-CBSA\n.\n463400\n463500        IF HOLD-PROV-CBSA = '22020'\n463600           AND P-NEW-STATE = 35\n463700               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n463800               MOVE '   35' TO HOLD-PROV-CBSA.\n463900",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n463800               MOVE '   35' TO HOLD-PROV-CBSA.\n463900\n464000        IF HOLD-PROV-CBSA = '24220'\n464100           AND P-NEW-STATE = 24\n464200               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   35' TO HOLD-PROV-CBSA\n.\n463900",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n464300               MOVE '   24' TO HOLD-PROV-CBSA.\n464400\n464500        IF HOLD-PROV-CBSA = '24220'\n464600           AND P-NEW-STATE = 35",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   24' TO HOLD-PROV-CBSA\n.\n464400\n464500        IF HOLD-PROV-CBSA = '24220'\n464600           AND P-NEW-STATE = 35\n464700               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n464800               MOVE '   35' TO HOLD-PROV-CBSA.\n464900",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n464800               MOVE '   35' TO HOLD-PROV-CBSA.\n464900\n465000        IF HOLD-PROV-CBSA = '30300'\n465100           AND P-NEW-STATE = 50",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   35' TO HOLD-PROV-CBSA\n.\n464900\n465000        IF HOLD-PROV-CBSA = '30300'\n465100           AND P-NEW-STATE = 50",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n465300               MOVE '   50' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   50' TO HOLD-PROV-CBSA\n.\n465400\n465500        IF HOLD-PROV-CBSA = '39300'\n465600           AND P-NEW-STATE = 22\n465700               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n465800               MOVE '   22' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n465800               MOVE '   22' TO HOLD-PROV-CBSA.\n465900\n466000        IF HOLD-PROV-CBSA = '39300'\n466100           AND P-NEW-STATE = 41\n466200               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n466300               MOVE '   41' TO HOLD-PROV-CBSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   22' TO HOLD-PROV-CBSA\n.\n465900\n466000        IF HOLD-PROV-CBSA = '39300'\n466100           AND P-NEW-STATE = 41\n466200               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n466300               MOVE '   41' TO HOLD-PROV-CBSA.\n466400\n466500        IF HOLD-PROV-CBSA = '44600'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   41' TO HOLD-PROV-CBSA\n.\n466400\n466500        IF HOLD-PROV-CBSA = '44600'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n466800               MOVE '   36' TO HOLD-PROV-CBSA.\n466900\n467000        IF HOLD-PROV-CBSA = '45500'",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   36' TO HOLD-PROV-CBSA\n.\n466900\n467000        IF HOLD-PROV-CBSA = '45500'\n467100           AND P-NEW-STATE = 45\n467200               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n467300               MOVE '   45' TO HOLD-PROV-CBSA.\n467400",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n467300               MOVE '   45' TO HOLD-PROV-CBSA.\n467400\n467500\n467600**************YEARCHANGE 2014.0 ******************************\n467700\n467800 2300-2014-EXIT. EXIT.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   45' TO HOLD-PROV-CBSA\n.\n467400\n467500\n467600**************YEARCHANGE 2014.0 ******************************",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 0 TO W-NEW-CBSA-WI\n.\n468800\n468900     IF W-NEW-CBSA-WI = 00.0000\n469000        MOVE ALL '0' TO PPS-ADDITIONAL-VARIABLES\n469100        MOVE 52 TO PPS-RTC",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE ALL '0' TO PPS-ADDITIONAL-VARIABLES\n\n469100        MOVE 52 TO PPS-RTC\n469200        GO TO 2300-2015-EXIT.\n469300\n469400**----------------------------------------------------------------\n469500** SET THE PROVIDER'S STATE RURAL CBSA",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 52 TO PPS-RTC\n\n469200        GO TO 2300-2015-EXIT.\n469300\n469400**----------------------------------------------------------------\n469500** SET THE PROVIDER'S STATE RURAL CBSA\n469600**----------------------------------------------------------------\n469700     MOVE '   ' TO  H-CBSA-RURAL-BLANK.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   ' TO  H-CBSA-RURAL-BLANK\n.\n469800     MOVE P-NEW-STATE-CODE-X TO H-CBSA-RURAL-STATE.\n469900\n470000     IF H-CBSA-RURAL-STATE = '00'\n470100        MOVE '03' TO H-CBSA-RURAL-STATE.\n470200\n470300*------------------------------------------------------------*",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '03' TO H-CBSA-RURAL-STATE\n.\n470200\n470300*------------------------------------------------------------*",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 0 TO W-NEW-CBSA-WI\n.\n475100\n475200*------------------------------------------------------------*\n475300* IF NO RURAL WAGE INDEX FOUND, SET TO ZERO (VALID BECAUSE   *",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 0 TO W-RURAL-CBSA-WI\n.\n475800\n475900*------------------------------------------------------------*",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n\n476800        MOVE HOLD-RURAL-CBSA TO HOLD-PROV-CBSA.\n476900\n477000 2300-2015-EXIT. EXIT.\n477100\n477200**************YEARCHANGE 2015.0 ******************************\n477300 2350-2015-FWD-FLOOR-CBSA-PR.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 0 TO W-NEW-CBSA-WI\n.\n478000\n478100     IF W-NEW-CBSA-PR-WI = 00.0000\n478200        MOVE ALL '0' TO PPS-ADDITIONAL-VARIABLES",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE ALL '0' TO PPS-ADDITIONAL-VARIABLES\n\n478300        MOVE 52 TO PPS-RTC",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 52 TO PPS-RTC\n\n478400        GO TO 2350-2015-EXIT.\n478500\n478600**----------------------------------------------------------------",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   ' TO H-CBSA-RURAL-BLANK\n.\n479000     MOVE '40'  TO H-CBSA-RURAL-STATE.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '40'  TO H-CBSA-RURAL-STATE\n.\n479100\n479200*------------------------------------------------------------*",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 0 TO W-RURAL-CBSA-PR-WI\n.\n480300",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE SPACES TO W-PROV-OLD-HOLD\n.\n482300     MOVE W-P-NEW-PROVIDER-OSCAR-NO TO W-P-PROVIDER-NO.\n482400\n482500     IF W-P-NEW-EFF-DATE < 0 OR\n482600        W-P-NEW-EFF-DATE = '00000000'\n482700        MOVE ZEROES TO W-P-EFF-DATE\n482800     ELSE",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE ZEROES TO W-P-EFF-DATE\n\n482800     ELSE\n482900        MOVE  W-P-NEW-EFF-DT-YY        TO W-P-EFF-YY\n483000        MOVE  W-P-NEW-EFF-DT-MM        TO W-P-EFF-MM\n483100        MOVE  W-P-NEW-EFF-DT-DD        TO W-P-EFF-DD.\n483200     MOVE  W-P-NEW-WAIVER-CODE   TO W-P-WAIVER-CODE.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE ZEROES TO W-P-REPORT-DATE\n\n484700     ELSE\n484800        MOVE  W-P-NEW-REPORT-DT-YY  TO W-P-REPORT-DT-YY\n484900        MOVE  W-P-NEW-REPORT-DT-MM  TO W-P-REPORT-DT-MM\n485000        MOVE  W-P-NEW-REPORT-DT-DD  TO W-P-REPORT-DT-DD.\n485100",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE ZEROES TO W-P-FY-BEGIN-DATE\n\n485700     ELSE\n485800        MOVE  W-P-NEW-FY-BEG-DT-YY  TO W-P-FY-BEG-DT-YY\n485900        MOVE  W-P-NEW-FY-BEG-DT-MM  TO W-P-FY-BEG-DT-MM",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE ZEROES TO W-P-TERMINATION-DATE\n\n487200     ELSE\n487300        MOVE  W-P-NEW-TERM-DT-YY    TO W-P-TERM-DT-YY",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE ZEROES TO W-P-FISCAL-YEAR-END\n.\n487900\n488000     IF P-NEW-FYE-DATE               < 0  OR\n488100        P-NEW-FYE-DATE               = '00000000'\n488200        MOVE ZEROES TO W-P-FISCAL-YEAR-END\n488300     ELSE",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE ZEROES TO W-P-FISCAL-YEAR-END\n\n488300     ELSE\n488400        MOVE  W-P-NEW-FYE-YY       TO W-P-YY\n488500        MOVE  W-P-NEW-FYE-MM       TO W-P-MM\n488600        MOVE  W-P-NEW-FYE-DD       TO W-P-DD.\n488700",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '  05' TO HOLD-PROV-MSAX\n\n505100                        P-NEW-STAND-AMT-LOC-MSA.\n505200",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '  10' TO HOLD-PROV-MSAX\n\n505500                        P-NEW-STAND-AMT-LOC-MSA.\n505600\n505700     IF (P-NEW-PROVIDER-NO = '170137')",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '  17' TO HOLD-PROV-MSAX\n\n505900                        P-NEW-STAND-AMT-LOC-MSA.\n506000",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '  19' TO HOLD-PROV-MSAX\n\n506300                        P-NEW-STAND-AMT-LOC-MSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '  23' TO HOLD-PROV-MSAX\n\n506700                        P-NEW-STAND-AMT-LOC-MSA.\n506800\n506900     IF (P-NEW-PROVIDER-NO = '260006')\n507000         MOVE '  26' TO HOLD-PROV-MSAX\n507100                        P-NEW-STAND-AMT-LOC-MSA.\n507200",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '  26' TO HOLD-PROV-MSAX\n\n507100                        P-NEW-STAND-AMT-LOC-MSA.\n507200\n507300     IF (P-NEW-PROVIDER-NO = '290038')",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '  29' TO HOLD-PROV-MSAX\n\n507500                        P-NEW-STAND-AMT-LOC-MSA.\n507600\n507700     IF (P-NEW-PROVIDER-NO = '300009')",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '  30' TO HOLD-PROV-MSAX\n\n507900                        P-NEW-STAND-AMT-LOC-MSA.\n508000\n508100     IF (P-NEW-PROVIDER-NO = '390106')\n508200         MOVE '  39' TO HOLD-PROV-MSAX",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '  39' TO HOLD-PROV-MSAX\n\n508300                        P-NEW-STAND-AMT-LOC-MSA.\n508400\n508500     IF (P-NEW-PROVIDER-NO = '520007' OR '520153')\n508600         MOVE '  52' TO HOLD-PROV-MSAX\n508700                        P-NEW-STAND-AMT-LOC-MSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '  52' TO HOLD-PROV-MSAX\n\n508700                        P-NEW-STAND-AMT-LOC-MSA.\n508800\n508900 2700-2002-EXIT.   EXIT.\n509000\n509100 2700-2003-WI-401-HOSPITAL.\n509200***************************************************************",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '  05' TO HOLD-PROV-MSAX\n\n509900                        P-NEW-STAND-AMT-LOC-MSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '  10' TO HOLD-PROV-MSAX\n\n510300                        P-NEW-STAND-AMT-LOC-MSA.\n510400\n510500     IF (P-NEW-PROVIDER-NO = '170137')\n510600         MOVE '  17' TO HOLD-PROV-MSAX\n510700                        P-NEW-STAND-AMT-LOC-MSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '  17' TO HOLD-PROV-MSAX\n\n510700                        P-NEW-STAND-AMT-LOC-MSA.\n510800\n510900     IF (P-NEW-PROVIDER-NO = '190048' OR '190110')",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '  19' TO HOLD-PROV-MSAX\n\n511100                        P-NEW-STAND-AMT-LOC-MSA.\n511200\n511300     IF (P-NEW-PROVIDER-NO = '230078')\n511400         MOVE '  23' TO HOLD-PROV-MSAX",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '  23' TO HOLD-PROV-MSAX\n\n511500                        P-NEW-STAND-AMT-LOC-MSA.\n511600\n511700     IF (P-NEW-PROVIDER-NO = '260006')\n511800         MOVE '  26' TO HOLD-PROV-MSAX",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '  26' TO HOLD-PROV-MSAX\n\n511900                        P-NEW-STAND-AMT-LOC-MSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '  30' TO HOLD-PROV-MSAX\n\n512300                        P-NEW-STAND-AMT-LOC-MSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '  38' TO HOLD-PROV-MSAX\n\n512700                        P-NEW-STAND-AMT-LOC-MSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '  05' TO HOLD-PROV-MSAX\n\n513900                        P-NEW-STAND-AMT-LOC-MSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '  10' TO HOLD-PROV-MSAX\n\n514300                        P-NEW-STAND-AMT-LOC-MSA.\n514400\n514500     IF (P-NEW-PROVIDER-NO = '170137')\n514600         MOVE '  17' TO HOLD-PROV-MSAX\n514700                        P-NEW-STAND-AMT-LOC-MSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '  17' TO HOLD-PROV-MSAX\n\n514700                        P-NEW-STAND-AMT-LOC-MSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '  19' TO HOLD-PROV-MSAX\n\n515100                        P-NEW-STAND-AMT-LOC-MSA.\n515200\n515300     IF (P-NEW-PROVIDER-NO = '230078')\n515400         MOVE '  23' TO HOLD-PROV-MSAX\n515500                        P-NEW-STAND-AMT-LOC-MSA.\n515600",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '  23' TO HOLD-PROV-MSAX\n\n515500                        P-NEW-STAND-AMT-LOC-MSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '  26' TO HOLD-PROV-MSAX\n\n515900                        P-NEW-STAND-AMT-LOC-MSA.\n516000\n516100     IF (P-NEW-PROVIDER-NO = '300009')",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '  30' TO HOLD-PROV-MSAX\n\n516300                        P-NEW-STAND-AMT-LOC-MSA.\n516400\n516500     IF (P-NEW-PROVIDER-NO = '380084')\n516600         MOVE '  38' TO HOLD-PROV-MSAX\n516700                        P-NEW-STAND-AMT-LOC-MSA.\n516800",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '  38' TO HOLD-PROV-MSAX\n\n516700                        P-NEW-STAND-AMT-LOC-MSA.\n516800\n516900     IF (P-NEW-PROVIDER-NO = '390106')\n517000         MOVE '  39' TO HOLD-PROV-MSAX\n517100                        P-NEW-STAND-AMT-LOC-MSA.\n517200",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '  39' TO HOLD-PROV-MSAX\n\n517100                        P-NEW-STAND-AMT-LOC-MSA.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   05' TO HOLD-PROV-CBSA\n\n518400                        P-NEW-CBSA-STAND-AMT-LOC.\n518500\n518600     IF (P-NEW-PROVIDER-NO = '070004')",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   07' TO HOLD-PROV-CBSA\n\n518800                        P-NEW-CBSA-STAND-AMT-LOC.\n518900",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   10' TO HOLD-PROV-CBSA\n\n519200                        P-NEW-CBSA-STAND-AMT-LOC.\n519300",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   17' TO HOLD-PROV-CBSA\n\n519600                        P-NEW-CBSA-STAND-AMT-LOC.\n519700\n519800     IF (P-NEW-PROVIDER-NO = '190048' OR '190110')\n519900         MOVE '   19' TO HOLD-PROV-CBSA\n520000                        P-NEW-CBSA-STAND-AMT-LOC.\n520100",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   19' TO HOLD-PROV-CBSA\n\n520000                        P-NEW-CBSA-STAND-AMT-LOC.\n520100\n520200     IF (P-NEW-PROVIDER-NO = '230078')\n520300         MOVE '   23' TO HOLD-PROV-CBSA",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   23' TO HOLD-PROV-CBSA\n\n520400                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   26' TO HOLD-PROV-CBSA\n\n520800                        P-NEW-CBSA-STAND-AMT-LOC.\n520900",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   29' TO HOLD-PROV-CBSA\n\n521200                        P-NEW-CBSA-STAND-AMT-LOC.\n521300\n521400     IF (P-NEW-PROVIDER-NO = '300009')\n521500         MOVE '   30' TO HOLD-PROV-CBSA\n521600                        P-NEW-CBSA-STAND-AMT-LOC.\n521700",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   30' TO HOLD-PROV-CBSA\n\n521600                        P-NEW-CBSA-STAND-AMT-LOC.\n521700\n521800     IF (P-NEW-PROVIDER-NO = '380084')",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   38' TO HOLD-PROV-CBSA\n\n522000                        P-NEW-CBSA-STAND-AMT-LOC.\n522100\n522200     IF (P-NEW-PROVIDER-NO = '390106' OR '390181')\n522300         MOVE '   39' TO HOLD-PROV-CBSA\n522400                        P-NEW-CBSA-STAND-AMT-LOC.\n522500",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   39' TO HOLD-PROV-CBSA\n\n522400                        P-NEW-CBSA-STAND-AMT-LOC.\n522500\n522600 2700-2005-EXIT.   EXIT.\n522700",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   03' TO HOLD-PROV-CBSA\n\n523400                        P-NEW-CBSA-STAND-AMT-LOC.\n523500\n523600     IF (P-NEW-PROVIDER-NO = '040075')\n523700         MOVE '   04' TO HOLD-PROV-CBSA\n523800                        P-NEW-CBSA-STAND-AMT-LOC.\n523900",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   04' TO HOLD-PROV-CBSA\n\n523800                        P-NEW-CBSA-STAND-AMT-LOC.\n523900",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   05' TO HOLD-PROV-CBSA\n\n524300                        P-NEW-CBSA-STAND-AMT-LOC.\n524400\n524500     IF (P-NEW-PROVIDER-NO = '070004')\n524600         MOVE '   07' TO HOLD-PROV-CBSA\n524700                        P-NEW-CBSA-STAND-AMT-LOC.\n524800",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   07' TO HOLD-PROV-CBSA\n\n524700                        P-NEW-CBSA-STAND-AMT-LOC.\n524800\n524900     IF (P-NEW-PROVIDER-NO = '100048' OR '100134')\n525000         MOVE '   10' TO HOLD-PROV-CBSA",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   10' TO HOLD-PROV-CBSA\n\n525100                        P-NEW-CBSA-STAND-AMT-LOC.\n525200\n525300     IF (P-NEW-PROVIDER-NO = '130018')\n525400         MOVE '   13' TO HOLD-PROV-CBSA\n525500                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   13' TO HOLD-PROV-CBSA\n\n525500                        P-NEW-CBSA-STAND-AMT-LOC.\n525600\n525700     IF (P-NEW-PROVIDER-NO = '140167')\n525800         MOVE '   14' TO HOLD-PROV-CBSA\n525900                        P-NEW-CBSA-STAND-AMT-LOC.\n526000",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   14' TO HOLD-PROV-CBSA\n\n525900                        P-NEW-CBSA-STAND-AMT-LOC.\n526000\n526100     IF (P-NEW-PROVIDER-NO = '150051' OR '150078')\n526200         MOVE '   15' TO HOLD-PROV-CBSA",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   15' TO HOLD-PROV-CBSA\n\n526300                        P-NEW-CBSA-STAND-AMT-LOC.\n526400\n526500     IF (P-NEW-PROVIDER-NO = '170137')\n526600         MOVE '   17' TO HOLD-PROV-CBSA",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   17' TO HOLD-PROV-CBSA\n\n526700                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   19' TO HOLD-PROV-CBSA\n\n527100                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   23' TO HOLD-PROV-CBSA\n\n527500                        P-NEW-CBSA-STAND-AMT-LOC.\n527600\n527700     IF (P-NEW-PROVIDER-NO = '240037')",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   24' TO HOLD-PROV-CBSA\n\n527900                        P-NEW-CBSA-STAND-AMT-LOC.\n528000\n528100     IF (P-NEW-PROVIDER-NO = '260006' OR '260122')\n528200         MOVE '   26' TO HOLD-PROV-CBSA\n528300                        P-NEW-CBSA-STAND-AMT-LOC.\n528400",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   26' TO HOLD-PROV-CBSA\n\n528300                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   30' TO HOLD-PROV-CBSA\n\n528700                        P-NEW-CBSA-STAND-AMT-LOC.\n528800\n528900     IF (P-NEW-PROVIDER-NO = '370054')\n529000         MOVE '   37' TO HOLD-PROV-CBSA",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   37' TO HOLD-PROV-CBSA\n\n529100                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   38' TO HOLD-PROV-CBSA\n\n529500                        P-NEW-CBSA-STAND-AMT-LOC.\n529600\n529700     IF (P-NEW-PROVIDER-NO = '390181' OR '390183' OR\n529800                             '390201')\n529900         MOVE '   39' TO HOLD-PROV-CBSA",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   39' TO HOLD-PROV-CBSA\n\n530000                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   45' TO HOLD-PROV-CBSA\n\n530600                        P-NEW-CBSA-STAND-AMT-LOC.\n530700\n530800     IF (P-NEW-PROVIDER-NO = '500023' OR '500037' OR\n530900                             '500122' OR '500147' OR\n531000                             '500148')",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   50' TO HOLD-PROV-CBSA\n\n531200                        P-NEW-CBSA-STAND-AMT-LOC.\n531300",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   03' TO HOLD-PROV-CBSA\n\n532200                        P-NEW-CBSA-STAND-AMT-LOC.\n532300",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   04' TO HOLD-PROV-CBSA\n\n532600                        P-NEW-CBSA-STAND-AMT-LOC.\n532700\n532800     IF (P-NEW-PROVIDER-NO = '050192' OR '050469' OR",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   05' TO HOLD-PROV-CBSA\n\n533100                        P-NEW-CBSA-STAND-AMT-LOC.\n533200\n533300     IF (P-NEW-PROVIDER-NO = '070004')\n533400         MOVE '   07' TO HOLD-PROV-CBSA",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   07' TO HOLD-PROV-CBSA\n\n533500                        P-NEW-CBSA-STAND-AMT-LOC.\n533600\n533700     IF (P-NEW-PROVIDER-NO = '100048' OR '100134')\n533800         MOVE '   10' TO HOLD-PROV-CBSA\n533900                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   10' TO HOLD-PROV-CBSA\n\n533900                        P-NEW-CBSA-STAND-AMT-LOC.\n534000\n534100     IF (P-NEW-PROVIDER-NO = '130018')",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   13' TO HOLD-PROV-CBSA\n\n534300                        P-NEW-CBSA-STAND-AMT-LOC.\n534400",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   14' TO HOLD-PROV-CBSA\n\n534700                        P-NEW-CBSA-STAND-AMT-LOC.\n534800\n534900     IF B-21-DISCHARGE-DATE > 20051231\n535000        IF (P-NEW-PROVIDER-NO = '150078')\n535100           MOVE '   15' TO HOLD-PROV-CBSA\n535200                          P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   15' TO HOLD-PROV-CBSA\n\n535200                          P-NEW-CBSA-STAND-AMT-LOC.\n535300\n535400     IF B-21-DISCHARGE-DATE < 20060101\n535500        IF (P-NEW-PROVIDER-NO = '150051' OR '150078')\n535600           MOVE '   15' TO HOLD-PROV-CBSA",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   15' TO HOLD-PROV-CBSA\n\n535700                          P-NEW-CBSA-STAND-AMT-LOC.\n535800\n535900     IF (P-NEW-PROVIDER-NO = '170137')",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   17' TO HOLD-PROV-CBSA\n\n536100                        P-NEW-CBSA-STAND-AMT-LOC.\n536200",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   19' TO HOLD-PROV-CBSA\n\n536500                        P-NEW-CBSA-STAND-AMT-LOC.\n536600\n536700     IF (P-NEW-PROVIDER-NO = '230042' OR '230078')\n536800         MOVE '   23' TO HOLD-PROV-CBSA",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   23' TO HOLD-PROV-CBSA\n\n536900                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   24' TO HOLD-PROV-CBSA\n\n537300                        P-NEW-CBSA-STAND-AMT-LOC.\n537400",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   26' TO HOLD-PROV-CBSA\n\n537700                        P-NEW-CBSA-STAND-AMT-LOC.\n537800\n537900     IF (P-NEW-PROVIDER-NO = '300009')",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   30' TO HOLD-PROV-CBSA\n\n538100                        P-NEW-CBSA-STAND-AMT-LOC.\n538200\n538300     IF (P-NEW-PROVIDER-NO = '330268')\n538400         MOVE '   33' TO HOLD-PROV-CBSA\n538500                        P-NEW-CBSA-STAND-AMT-LOC.\n538600",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   33' TO HOLD-PROV-CBSA\n\n538500                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   37' TO HOLD-PROV-CBSA\n\n538900                        P-NEW-CBSA-STAND-AMT-LOC.\n539000\n539100     IF (P-NEW-PROVIDER-NO = '380040' OR '380084')\n539200         MOVE '   38' TO HOLD-PROV-CBSA\n539300                        P-NEW-CBSA-STAND-AMT-LOC.\n539400",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   38' TO HOLD-PROV-CBSA\n\n539300                        P-NEW-CBSA-STAND-AMT-LOC.\n539400",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   39' TO HOLD-PROV-CBSA\n\n539800                        P-NEW-CBSA-STAND-AMT-LOC.\n539900\n540000     IF (P-NEW-PROVIDER-NO = '440135')\n540100         MOVE '   44' TO HOLD-PROV-CBSA",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   44' TO HOLD-PROV-CBSA\n\n540200                        P-NEW-CBSA-STAND-AMT-LOC.\n540300\n540400     IF (P-NEW-PROVIDER-NO = '450052' OR '450078' OR\n540500                             '450243' OR '450276' OR",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   45' TO HOLD-PROV-CBSA\n\n540800                        P-NEW-CBSA-STAND-AMT-LOC.\n540900\n541000     IF (P-NEW-PROVIDER-NO = '500023' OR '500043' OR\n541100                             '500086' OR '500103' OR\n541200                             '500122' OR '500147' OR\n541300                             '500148')",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   50' TO HOLD-PROV-CBSA\n\n541500                        P-NEW-CBSA-STAND-AMT-LOC.\n541600\n541700 2800-2006-EXIT.   EXIT.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   05' TO HOLD-PROV-CBSA\n\n542700                        P-NEW-CBSA-STAND-AMT-LOC.\n542800\n542900     IF (P-NEW-PROVIDER-NO = '070004')\n543000         MOVE '   07' TO HOLD-PROV-CBSA\n543100                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   07' TO HOLD-PROV-CBSA\n\n543100                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   10' TO HOLD-PROV-CBSA\n\n543500                        P-NEW-CBSA-STAND-AMT-LOC.\n543600",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   14' TO HOLD-PROV-CBSA\n\n543900                        P-NEW-CBSA-STAND-AMT-LOC.\n544000\n544100     IF (P-NEW-PROVIDER-NO = '170137')",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   17' TO HOLD-PROV-CBSA\n\n544300                        P-NEW-CBSA-STAND-AMT-LOC.\n544400\n544500     IF (P-NEW-PROVIDER-NO = '230078')",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   23' TO HOLD-PROV-CBSA\n\n544700                        P-NEW-CBSA-STAND-AMT-LOC.\n544800\n544900     IF (P-NEW-PROVIDER-NO = '260006' OR '260047' OR '260195')",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   26' TO HOLD-PROV-CBSA\n\n545100                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   33' TO HOLD-PROV-CBSA\n\n545500                        P-NEW-CBSA-STAND-AMT-LOC.\n545600\n545700     IF (P-NEW-PROVIDER-NO = '360125')",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   36' TO HOLD-PROV-CBSA\n\n545900                        P-NEW-CBSA-STAND-AMT-LOC.\n546000\n546100     IF (P-NEW-PROVIDER-NO = '370054')",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   37' TO HOLD-PROV-CBSA\n\n546300                        P-NEW-CBSA-STAND-AMT-LOC.\n546400\n546500     IF (P-NEW-PROVIDER-NO = '380040')",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   38' TO HOLD-PROV-CBSA\n\n546700                        P-NEW-CBSA-STAND-AMT-LOC.\n546800\n546900     IF (P-NEW-PROVIDER-NO = '440135' OR '440144')\n547000         MOVE '   44' TO HOLD-PROV-CBSA\n547100                        P-NEW-CBSA-STAND-AMT-LOC.\n547200",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   44' TO HOLD-PROV-CBSA\n\n547100                        P-NEW-CBSA-STAND-AMT-LOC.\n547200",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   45' TO HOLD-PROV-CBSA\n\n547600                        P-NEW-CBSA-STAND-AMT-LOC.\n547700\n547800     IF (P-NEW-PROVIDER-NO = '500148')",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   50' TO HOLD-PROV-CBSA\n\n548000                        P-NEW-CBSA-STAND-AMT-LOC.\n548100\n548200     IF (P-NEW-PROVIDER-NO = '520060')\n548300         MOVE '   52' TO HOLD-PROV-CBSA\n548400                        P-NEW-CBSA-STAND-AMT-LOC.\n548500",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   52' TO HOLD-PROV-CBSA\n\n548400                        P-NEW-CBSA-STAND-AMT-LOC.\n548500\n548600 2800-2007-EXIT.   EXIT.\n548700\n548800 2800-2008-WI-401-HOSPITAL.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   05' TO HOLD-PROV-CBSA\n\n549600                        P-NEW-CBSA-STAND-AMT-LOC.\n549700\n549800     IF (P-NEW-PROVIDER-NO = '100134')",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   10' TO HOLD-PROV-CBSA\n\n550000                        P-NEW-CBSA-STAND-AMT-LOC.\n550100\n550200     IF (P-NEW-PROVIDER-NO = '170137')\n550300         MOVE '   17' TO HOLD-PROV-CBSA",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   17' TO HOLD-PROV-CBSA\n\n550400                        P-NEW-CBSA-STAND-AMT-LOC.\n550500\n550600     IF (P-NEW-PROVIDER-NO = '220051' OR '230078')\n550700         MOVE '   23' TO HOLD-PROV-CBSA\n550800                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   23' TO HOLD-PROV-CBSA\n\n550800                        P-NEW-CBSA-STAND-AMT-LOC.\n550900\n551000     IF (P-NEW-PROVIDER-NO = '250017')\n551100         MOVE '   25' TO HOLD-PROV-CBSA\n551200                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   25' TO HOLD-PROV-CBSA\n\n551200                        P-NEW-CBSA-STAND-AMT-LOC.\n551300\n551400     IF (P-NEW-PROVIDER-NO = '260006' OR '260195')\n551500         MOVE '   26' TO HOLD-PROV-CBSA",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   26' TO HOLD-PROV-CBSA\n\n551600                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   33' TO HOLD-PROV-CBSA\n\n552000                        P-NEW-CBSA-STAND-AMT-LOC.\n552100\n552200     IF (P-NEW-PROVIDER-NO = '360125')\n552300         MOVE '   36' TO HOLD-PROV-CBSA",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   36' TO HOLD-PROV-CBSA\n\n552400                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   37' TO HOLD-PROV-CBSA\n\n552800                        P-NEW-CBSA-STAND-AMT-LOC.\n552900\n553000     IF (P-NEW-PROVIDER-NO = '380040')\n553100         MOVE '   38' TO HOLD-PROV-CBSA\n553200                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   38' TO HOLD-PROV-CBSA\n\n553200                        P-NEW-CBSA-STAND-AMT-LOC.\n553300\n553400     IF (P-NEW-PROVIDER-NO = '390130' OR '390183' OR\n553500                             '390185' OR '390201')\n553600         MOVE '   39' TO HOLD-PROV-CBSA",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   39' TO HOLD-PROV-CBSA\n\n553700                        P-NEW-CBSA-STAND-AMT-LOC.\n553800\n553900     IF (P-NEW-PROVIDER-NO = '440135')",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   44' TO HOLD-PROV-CBSA\n\n554100                        P-NEW-CBSA-STAND-AMT-LOC.\n554200\n554300     IF (P-NEW-PROVIDER-NO = '450052' OR '450078' OR\n554400                             '450243' OR '450348')\n554500         MOVE '   45' TO HOLD-PROV-CBSA\n554600                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   45' TO HOLD-PROV-CBSA\n\n554600                        P-NEW-CBSA-STAND-AMT-LOC.\n554700\n554800     IF (P-NEW-PROVIDER-NO = '500148')\n554900         MOVE '   50' TO HOLD-PROV-CBSA\n555000                        P-NEW-CBSA-STAND-AMT-LOC.\n555100",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   50' TO HOLD-PROV-CBSA\n\n555000                        P-NEW-CBSA-STAND-AMT-LOC.\n555100\n555200 2800-2008-EXIT.   EXIT.\n555300",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   04' TO HOLD-PROV-CBSA\n\n556100                        P-NEW-CBSA-STAND-AMT-LOC.\n556200\n556300     IF (P-NEW-PROVIDER-NO = '234202' OR\n556400                             '329008' OR '040140')",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   05' TO HOLD-PROV-CBSA\n\n556600                        P-NEW-CBSA-STAND-AMT-LOC.\n556700",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   07' TO HOLD-PROV-CBSA\n\n557100                        P-NEW-CBSA-STAND-AMT-LOC.\n557200\n557300     IF (P-NEW-PROVIDER-NO = '100048' OR\n557400                             '100118' OR '100134')\n557500         MOVE '   10' TO HOLD-PROV-CBSA\n557600                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   10' TO HOLD-PROV-CBSA\n\n557600                        P-NEW-CBSA-STAND-AMT-LOC.\n557700\n557800     IF (P-NEW-PROVIDER-NO = '140167')",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   14' TO HOLD-PROV-CBSA\n\n558000                        P-NEW-CBSA-STAND-AMT-LOC.\n558100\n558200     IF (P-NEW-PROVIDER-NO = '170137')\n558300         MOVE '   17' TO HOLD-PROV-CBSA\n558400                        P-NEW-CBSA-STAND-AMT-LOC.\n558500",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   17' TO HOLD-PROV-CBSA\n\n558400                        P-NEW-CBSA-STAND-AMT-LOC.\n558500",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   18' TO HOLD-PROV-CBSA\n\n558800                        P-NEW-CBSA-STAND-AMT-LOC.\n558900",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   22' TO HOLD-PROV-CBSA\n\n559200                        P-NEW-CBSA-STAND-AMT-LOC.\n559300\n559400     IF (P-NEW-PROVIDER-NO = '230078')\n559500         MOVE '   23' TO HOLD-PROV-CBSA",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   23' TO HOLD-PROV-CBSA\n\n559600                        P-NEW-CBSA-STAND-AMT-LOC.\n559700\n559800     IF (P-NEW-PROVIDER-NO = '250017')\n559900         MOVE '   25' TO HOLD-PROV-CBSA",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   25' TO HOLD-PROV-CBSA\n\n560000                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   26' TO HOLD-PROV-CBSA\n\n560400                        P-NEW-CBSA-STAND-AMT-LOC.\n560500\n560600     IF (P-NEW-PROVIDER-NO = '330235' OR '330268')",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   33' TO HOLD-PROV-CBSA\n\n560800                        P-NEW-CBSA-STAND-AMT-LOC.\n560900\n561000     IF (P-NEW-PROVIDER-NO = '360125')\n561100         MOVE '   36' TO HOLD-PROV-CBSA\n561200                        P-NEW-CBSA-STAND-AMT-LOC.\n561300",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   36' TO HOLD-PROV-CBSA\n\n561200                        P-NEW-CBSA-STAND-AMT-LOC.\n561300\n561400     IF (P-NEW-PROVIDER-NO = '370054')\n561500         MOVE '   37' TO HOLD-PROV-CBSA",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   37' TO HOLD-PROV-CBSA\n\n561600                        P-NEW-CBSA-STAND-AMT-LOC.\n561700\n561800     IF (P-NEW-PROVIDER-NO = '380040')",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   38' TO HOLD-PROV-CBSA\n\n562000                        P-NEW-CBSA-STAND-AMT-LOC.\n562100\n562200     IF (P-NEW-PROVIDER-NO = '390130' OR '390183' OR\n562300                             '390233')\n562400         MOVE '   39' TO HOLD-PROV-CBSA",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   39' TO HOLD-PROV-CBSA\n\n562500                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   44' TO HOLD-PROV-CBSA\n\n562900                        P-NEW-CBSA-STAND-AMT-LOC.\n563000\n563100     IF (P-NEW-PROVIDER-NO = '450052' OR '450078' OR",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   45' TO HOLD-PROV-CBSA\n\n563400                        P-NEW-CBSA-STAND-AMT-LOC.\n563500\n563600     IF (P-NEW-PROVIDER-NO = '490116')\n563700         MOVE '   49' TO HOLD-PROV-CBSA",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   49' TO HOLD-PROV-CBSA\n\n563800                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   50' TO HOLD-PROV-CBSA\n\n564200                        P-NEW-CBSA-STAND-AMT-LOC.\n564300\n564400 2800-2009-EXIT.   EXIT.\n564500",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   04' TO HOLD-PROV-CBSA\n\n565300                        P-NEW-CBSA-STAND-AMT-LOC.\n565400",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   05' TO HOLD-PROV-CBSA\n\n565800                        P-NEW-CBSA-STAND-AMT-LOC.\n565900\n566000     IF (P-NEW-PROVIDER-NO = '070004')\n566100         MOVE '   07' TO HOLD-PROV-CBSA\n566200                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   07' TO HOLD-PROV-CBSA\n\n566200                        P-NEW-CBSA-STAND-AMT-LOC.\n566300\n566400     IF (P-NEW-PROVIDER-NO = '100048' OR",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   10' TO HOLD-PROV-CBSA\n\n566700                        P-NEW-CBSA-STAND-AMT-LOC.\n566800\n566900     IF (P-NEW-PROVIDER-NO = '140167')\n567000         MOVE '   14' TO HOLD-PROV-CBSA\n567100                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   14' TO HOLD-PROV-CBSA\n\n567100                        P-NEW-CBSA-STAND-AMT-LOC.\n567200\n567300     IF (P-NEW-PROVIDER-NO = '170137')\n567400         MOVE '   17' TO HOLD-PROV-CBSA",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   17' TO HOLD-PROV-CBSA\n\n567500                        P-NEW-CBSA-STAND-AMT-LOC.\n567600\n567700     IF (P-NEW-PROVIDER-NO = '180038')",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   18' TO HOLD-PROV-CBSA\n\n567900                        P-NEW-CBSA-STAND-AMT-LOC.\n568000\n568100     IF (P-NEW-PROVIDER-NO = '220051')\n568200         MOVE '   22' TO HOLD-PROV-CBSA\n568300                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   22' TO HOLD-PROV-CBSA\n\n568300                        P-NEW-CBSA-STAND-AMT-LOC.\n568400",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   23' TO HOLD-PROV-CBSA\n\n568700                        P-NEW-CBSA-STAND-AMT-LOC.\n568800\n568900     IF (P-NEW-PROVIDER-NO = '250017')\n569000         MOVE '   25' TO HOLD-PROV-CBSA",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   25' TO HOLD-PROV-CBSA\n\n569100                        P-NEW-CBSA-STAND-AMT-LOC.\n569200\n569300     IF (P-NEW-PROVIDER-NO = '260006' OR '260034' OR\n569400                             '260047' OR '260195')",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   26' TO HOLD-PROV-CBSA\n\n569600                        P-NEW-CBSA-STAND-AMT-LOC.\n569700\n569800     IF (P-NEW-PROVIDER-NO = '330235' OR '330268')\n569900         MOVE '   33' TO HOLD-PROV-CBSA",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   33' TO HOLD-PROV-CBSA\n\n570000                        P-NEW-CBSA-STAND-AMT-LOC.\n570100\n570200     IF (P-NEW-PROVIDER-NO = '300023')\n570300         MOVE '   30' TO HOLD-PROV-CBSA",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   30' TO HOLD-PROV-CBSA\n\n570400                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   36' TO HOLD-PROV-CBSA\n\n570800                        P-NEW-CBSA-STAND-AMT-LOC.\n570900\n571000     IF (P-NEW-PROVIDER-NO = '370054')\n571100         MOVE '   37' TO HOLD-PROV-CBSA",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   37' TO HOLD-PROV-CBSA\n\n571200                        P-NEW-CBSA-STAND-AMT-LOC.\n571300\n571400     IF (P-NEW-PROVIDER-NO = '380040')\n571500         MOVE '   38' TO HOLD-PROV-CBSA\n571600                        P-NEW-CBSA-STAND-AMT-LOC.\n571700",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   38' TO HOLD-PROV-CBSA\n\n571600                        P-NEW-CBSA-STAND-AMT-LOC.\n571700\n571800     IF (P-NEW-PROVIDER-NO = '390130' OR '390183' OR",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   39' TO HOLD-PROV-CBSA\n\n572100                        P-NEW-CBSA-STAND-AMT-LOC.\n572200\n572300     IF (P-NEW-PROVIDER-NO = '450052' OR '450078' OR\n572400                             '450243' OR '450348')",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   45' TO HOLD-PROV-CBSA\n\n572600                        P-NEW-CBSA-STAND-AMT-LOC.\n572700",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   49' TO HOLD-PROV-CBSA\n\n573000                        P-NEW-CBSA-STAND-AMT-LOC.\n573100\n573200     IF (P-NEW-PROVIDER-NO = '500148')\n573300         MOVE '   50' TO HOLD-PROV-CBSA\n573400                        P-NEW-CBSA-STAND-AMT-LOC.\n573500",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   50' TO HOLD-PROV-CBSA\n\n573400                        P-NEW-CBSA-STAND-AMT-LOC.\n573500\n573600 2800-2010-EXIT.   EXIT.\n573700",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   04' TO HOLD-PROV-CBSA\n\n574600                        P-NEW-CBSA-STAND-AMT-LOC.\n574700",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   05' TO HOLD-PROV-CBSA\n\n575100                        P-NEW-CBSA-STAND-AMT-LOC.\n575200\n575300     IF (P-NEW-PROVIDER-NO = '070004')",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   07' TO HOLD-PROV-CBSA\n\n575500                        P-NEW-CBSA-STAND-AMT-LOC.\n575600\n575700     IF (P-NEW-PROVIDER-NO = '100048' OR\n575800                             '100118' OR '100134')",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   10' TO HOLD-PROV-CBSA\n\n576000                        P-NEW-CBSA-STAND-AMT-LOC.\n576100\n576200     IF (P-NEW-PROVIDER-NO = '140167')\n576300         MOVE '   14' TO HOLD-PROV-CBSA\n576400                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   14' TO HOLD-PROV-CBSA\n\n576400                        P-NEW-CBSA-STAND-AMT-LOC.\n576500",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   17' TO HOLD-PROV-CBSA\n\n576800                        P-NEW-CBSA-STAND-AMT-LOC.\n576900",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   18' TO HOLD-PROV-CBSA\n\n577200                        P-NEW-CBSA-STAND-AMT-LOC.\n577300",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   22' TO HOLD-PROV-CBSA\n\n577600                        P-NEW-CBSA-STAND-AMT-LOC.\n577700\n577800     IF (P-NEW-PROVIDER-NO = '230040' OR '230078')\n577900         MOVE '   23' TO HOLD-PROV-CBSA",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   23' TO HOLD-PROV-CBSA\n\n578000                        P-NEW-CBSA-STAND-AMT-LOC.\n578100\n578200     IF (P-NEW-PROVIDER-NO = '260006' OR '260034' OR\n578300                             '260047' OR '260195')",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   26' TO HOLD-PROV-CBSA\n\n578500                        P-NEW-CBSA-STAND-AMT-LOC.\n578600\n578700     IF (P-NEW-PROVIDER-NO = '300023')\n578800         MOVE '   30' TO HOLD-PROV-CBSA\n578900                        P-NEW-CBSA-STAND-AMT-LOC.\n579000",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   30' TO HOLD-PROV-CBSA\n\n578900                        P-NEW-CBSA-STAND-AMT-LOC.\n579000\n579100     IF (P-NEW-PROVIDER-NO = '330215' OR '330235' OR\n579200                             '330268')\n579300         MOVE '   33' TO HOLD-PROV-CBSA\n579400                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   33' TO HOLD-PROV-CBSA\n\n579400                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   34' TO HOLD-PROV-CBSA\n\n579800                        P-NEW-CBSA-STAND-AMT-LOC.\n579900\n580000     IF (P-NEW-PROVIDER-NO = '360125')\n580100         MOVE '   36' TO HOLD-PROV-CBSA\n580200                        P-NEW-CBSA-STAND-AMT-LOC.\n580300",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   36' TO HOLD-PROV-CBSA\n\n580200                        P-NEW-CBSA-STAND-AMT-LOC.\n580300\n580400     IF (P-NEW-PROVIDER-NO = '370054')\n580500         MOVE '   37' TO HOLD-PROV-CBSA\n580600                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   37' TO HOLD-PROV-CBSA\n\n580600                        P-NEW-CBSA-STAND-AMT-LOC.\n580700\n580800     IF (P-NEW-PROVIDER-NO = '380040')\n580900         MOVE '   38' TO HOLD-PROV-CBSA\n581000                        P-NEW-CBSA-STAND-AMT-LOC.\n581100",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   38' TO HOLD-PROV-CBSA\n\n581000                        P-NEW-CBSA-STAND-AMT-LOC.\n581100\n581200     IF (P-NEW-PROVIDER-NO = '390130' OR '390183' OR\n581300                             '390233')",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   39' TO HOLD-PROV-CBSA\n\n581500                        P-NEW-CBSA-STAND-AMT-LOC.\n581600",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   45' TO HOLD-PROV-CBSA\n\n582000                        P-NEW-CBSA-STAND-AMT-LOC.\n582100\n582200     IF (P-NEW-PROVIDER-NO = '490116')\n582300         MOVE '   49' TO HOLD-PROV-CBSA\n582400                        P-NEW-CBSA-STAND-AMT-LOC.\n582500",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   49' TO HOLD-PROV-CBSA\n\n582400                        P-NEW-CBSA-STAND-AMT-LOC.\n582500\n582600     IF (P-NEW-PROVIDER-NO = '500148')\n582700         MOVE '   50' TO HOLD-PROV-CBSA\n582800                        P-NEW-CBSA-STAND-AMT-LOC.\n582900",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   50' TO HOLD-PROV-CBSA\n\n582800                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   04' TO HOLD-PROV-CBSA\n\n584200                        P-NEW-CBSA-STAND-AMT-LOC.\n584300\n584400     IF (P-NEW-PROVIDER-NO = '050192' OR\n584500                             '050528' OR '050618')\n584600         MOVE '   05' TO HOLD-PROV-CBSA\n584700                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   05' TO HOLD-PROV-CBSA\n\n584700                        P-NEW-CBSA-STAND-AMT-LOC.\n584800\n584900     IF (P-NEW-PROVIDER-NO = '070004')\n585000         MOVE '   07' TO HOLD-PROV-CBSA\n585100                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   07' TO HOLD-PROV-CBSA\n\n585100                        P-NEW-CBSA-STAND-AMT-LOC.\n585200\n585300     IF (P-NEW-PROVIDER-NO = '100048' OR\n585400                             '100118' OR '100134')\n585500         MOVE '   10' TO HOLD-PROV-CBSA",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   10' TO HOLD-PROV-CBSA\n\n585600                        P-NEW-CBSA-STAND-AMT-LOC.\n585700\n585800     IF (P-NEW-PROVIDER-NO = '140167')",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   14' TO HOLD-PROV-CBSA\n\n586000                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   15' TO HOLD-PROV-CBSA\n\n586400                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   17' TO HOLD-PROV-CBSA\n\n586800                        P-NEW-CBSA-STAND-AMT-LOC.\n586900\n587000     IF (P-NEW-PROVIDER-NO = '180016' OR '180038')\n587100         MOVE '   18' TO HOLD-PROV-CBSA\n587200                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   18' TO HOLD-PROV-CBSA\n\n587200                        P-NEW-CBSA-STAND-AMT-LOC.\n587300\n587400     IF (P-NEW-PROVIDER-NO = '220051')\n587500         MOVE '   22' TO HOLD-PROV-CBSA",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   22' TO HOLD-PROV-CBSA\n\n587600                        P-NEW-CBSA-STAND-AMT-LOC.\n587700\n587800     IF (P-NEW-PROVIDER-NO = '230040' OR '230078')",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   23' TO HOLD-PROV-CBSA\n\n588000                        P-NEW-CBSA-STAND-AMT-LOC.\n588100\n588200     IF (P-NEW-PROVIDER-NO = '260006' OR '260034' OR",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   26' TO HOLD-PROV-CBSA\n\n588500                        P-NEW-CBSA-STAND-AMT-LOC.\n588600\n588700     IF (P-NEW-PROVIDER-NO = '300023')\n588800         MOVE '   30' TO HOLD-PROV-CBSA\n588900                        P-NEW-CBSA-STAND-AMT-LOC.\n589000",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   30' TO HOLD-PROV-CBSA\n\n588900                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   33' TO HOLD-PROV-CBSA\n\n589600                        P-NEW-CBSA-STAND-AMT-LOC.\n589700\n589800     IF (P-NEW-PROVIDER-NO = '340010')\n589900         MOVE '   34' TO HOLD-PROV-CBSA\n590000                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   34' TO HOLD-PROV-CBSA\n\n590000                        P-NEW-CBSA-STAND-AMT-LOC.\n590100\n590200     IF (P-NEW-PROVIDER-NO = '360125')",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   36' TO HOLD-PROV-CBSA\n\n590400                        P-NEW-CBSA-STAND-AMT-LOC.\n590500\n590600     IF (P-NEW-PROVIDER-NO = '370054')\n590700         MOVE '   37' TO HOLD-PROV-CBSA\n590800                        P-NEW-CBSA-STAND-AMT-LOC.\n590900",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   37' TO HOLD-PROV-CBSA\n\n590800                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   38' TO HOLD-PROV-CBSA\n\n591200                        P-NEW-CBSA-STAND-AMT-LOC.\n591300",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   39' TO HOLD-PROV-CBSA\n\n591700                        P-NEW-CBSA-STAND-AMT-LOC.\n591800",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   42' TO HOLD-PROV-CBSA\n\n592100                        P-NEW-CBSA-STAND-AMT-LOC.\n592200\n592300     IF (P-NEW-PROVIDER-NO = '450052' OR '450078' OR\n592400                             '450243' OR '450348')\n592500         MOVE '   45' TO HOLD-PROV-CBSA\n592600                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   45' TO HOLD-PROV-CBSA\n\n592600                        P-NEW-CBSA-STAND-AMT-LOC.\n592700\n592800     IF (P-NEW-PROVIDER-NO = '490116' OR '490116')\n592900         MOVE '   49' TO HOLD-PROV-CBSA\n593000                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   49' TO HOLD-PROV-CBSA\n\n593000                        P-NEW-CBSA-STAND-AMT-LOC.\n593100\n593200     IF (P-NEW-PROVIDER-NO = '500148')\n593300         MOVE '   50' TO HOLD-PROV-CBSA\n593400                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   50' TO HOLD-PROV-CBSA\n\n593400                        P-NEW-CBSA-STAND-AMT-LOC.\n593500\n593600\n593700 2800-2012-EXIT.   EXIT.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   29' TO HOLD-PROV-CBSA\n\n594700                        P-NEW-CBSA-STAND-AMT-LOC.\n594800\n594900     IF (P-NEW-PROVIDER-NO = '030024')\n595000         MOVE '   03' TO HOLD-PROV-CBSA",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   03' TO HOLD-PROV-CBSA\n\n595100                        P-NEW-CBSA-STAND-AMT-LOC.\n595200",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   05' TO HOLD-PROV-CBSA\n\n595600                        P-NEW-CBSA-STAND-AMT-LOC.\n595700\n595800     IF (P-NEW-PROVIDER-NO = '070004')\n595900         MOVE '   07' TO HOLD-PROV-CBSA\n596000                        P-NEW-CBSA-STAND-AMT-LOC.\n596100",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   07' TO HOLD-PROV-CBSA\n\n596000                        P-NEW-CBSA-STAND-AMT-LOC.\n596100",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   10' TO HOLD-PROV-CBSA\n\n596500                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   17' TO HOLD-PROV-CBSA\n\n596900                        P-NEW-CBSA-STAND-AMT-LOC.\n597000",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   18' TO HOLD-PROV-CBSA\n\n597300                        P-NEW-CBSA-STAND-AMT-LOC.\n597400\n597500     IF (P-NEW-PROVIDER-NO = '220051')",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   22' TO HOLD-PROV-CBSA\n\n597700                        P-NEW-CBSA-STAND-AMT-LOC.\n597800\n597900     IF (P-NEW-PROVIDER-NO = '230040' OR '230078')\n598000         MOVE '   23' TO HOLD-PROV-CBSA",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   23' TO HOLD-PROV-CBSA\n\n598100                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   26' TO HOLD-PROV-CBSA\n\n598600                        P-NEW-CBSA-STAND-AMT-LOC.\n598700\n598800     IF (P-NEW-PROVIDER-NO = '330108' OR",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   33' TO HOLD-PROV-CBSA\n\n599200                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   34' TO HOLD-PROV-CBSA\n\n599600                        P-NEW-CBSA-STAND-AMT-LOC.\n599700\n599800     IF (P-NEW-PROVIDER-NO = '350011')\n599900         MOVE '   35' TO HOLD-PROV-CBSA",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   35' TO HOLD-PROV-CBSA\n\n600000                        P-NEW-CBSA-STAND-AMT-LOC.\n600100\n600200     IF (P-NEW-PROVIDER-NO = '360125' OR '360141')\n600300         MOVE '   36' TO HOLD-PROV-CBSA\n600400                        P-NEW-CBSA-STAND-AMT-LOC.\n600500",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   36' TO HOLD-PROV-CBSA\n\n600400                        P-NEW-CBSA-STAND-AMT-LOC.\n600500\n600600     IF (P-NEW-PROVIDER-NO = '370054')\n600700         MOVE '   37' TO HOLD-PROV-CBSA\n600800                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   37' TO HOLD-PROV-CBSA\n\n600800                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   38' TO HOLD-PROV-CBSA\n\n601200                        P-NEW-CBSA-STAND-AMT-LOC.\n601300",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   39' TO HOLD-PROV-CBSA\n\n601700                        P-NEW-CBSA-STAND-AMT-LOC.\n601800\n601900     IF (P-NEW-PROVIDER-NO = '420009' OR '420038')\n602000         MOVE '   42' TO HOLD-PROV-CBSA",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   42' TO HOLD-PROV-CBSA\n\n602100                        P-NEW-CBSA-STAND-AMT-LOC.\n602200",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   44' TO HOLD-PROV-CBSA\n\n602500                        P-NEW-CBSA-STAND-AMT-LOC.\n602600\n602700     IF (P-NEW-PROVIDER-NO = '450052' OR '450078' OR\n602800                             '450243' OR '450348')",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   45' TO HOLD-PROV-CBSA\n\n603000                        P-NEW-CBSA-STAND-AMT-LOC.\n603100\n603200     IF (P-NEW-PROVIDER-NO = '490004' OR '490005' OR\n603300                             '490116')\n603400         MOVE '   49' TO HOLD-PROV-CBSA",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   49' TO HOLD-PROV-CBSA\n\n603500                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   50' TO HOLD-PROV-CBSA\n\n603900                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   05' TO HOLD-PROV-CBSA\n\n605500                        P-NEW-CBSA-STAND-AMT-LOC.\n605600",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   06' TO HOLD-PROV-CBSA\n\n605900                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   07' TO HOLD-PROV-CBSA\n\n606400                        P-NEW-CBSA-STAND-AMT-LOC.\n606500\n606600     IF (P-NEW-PROVIDER-NO = '100048' OR\n606700                             '100090' OR\n606800                             '100118' OR\n606900                             '100134')",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   10' TO HOLD-PROV-CBSA\n\n607100                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   14' TO HOLD-PROV-CBSA\n\n607600                        P-NEW-CBSA-STAND-AMT-LOC.\n607700",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   17' TO HOLD-PROV-CBSA\n\n608100                        P-NEW-CBSA-STAND-AMT-LOC.\n608200\n608300     IF (P-NEW-PROVIDER-NO = '180016' OR",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   18' TO HOLD-PROV-CBSA\n\n608600                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   19' TO HOLD-PROV-CBSA\n\n609000                        P-NEW-CBSA-STAND-AMT-LOC.\n609100\n609200     IF (P-NEW-PROVIDER-NO = '220051')\n609300         MOVE '   22' TO HOLD-PROV-CBSA\n609400                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   22' TO HOLD-PROV-CBSA\n\n609400                        P-NEW-CBSA-STAND-AMT-LOC.\n609500\n609600     IF (P-NEW-PROVIDER-NO = '230040' OR\n609700                             '230078')\n609800         MOVE '   23' TO HOLD-PROV-CBSA",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   23' TO HOLD-PROV-CBSA\n\n609900                        P-NEW-CBSA-STAND-AMT-LOC.\n610000\n610100     IF (P-NEW-PROVIDER-NO = '260006' OR\n610200                             '260034' OR",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   26' TO HOLD-PROV-CBSA\n\n610600                        P-NEW-CBSA-STAND-AMT-LOC.\n610700\n610800     IF (P-NEW-PROVIDER-NO = '290009')\n610900         MOVE '   29' TO HOLD-PROV-CBSA\n611000                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   29' TO HOLD-PROV-CBSA\n\n611000                        P-NEW-CBSA-STAND-AMT-LOC.\n611100\n611200     IF (P-NEW-PROVIDER-NO = '330108' OR\n611300                             '330235' OR",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   33' TO HOLD-PROV-CBSA\n\n611600                        P-NEW-CBSA-STAND-AMT-LOC.\n611700\n611800     IF (P-NEW-PROVIDER-NO = '340010')\n611900         MOVE '   34' TO HOLD-PROV-CBSA",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   34' TO HOLD-PROV-CBSA\n\n612000                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   35' TO HOLD-PROV-CBSA\n\n612500                        P-NEW-CBSA-STAND-AMT-LOC.\n612600\n612700     IF (P-NEW-PROVIDER-NO = '360125')",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   36' TO HOLD-PROV-CBSA\n\n612900                        P-NEW-CBSA-STAND-AMT-LOC.\n613000\n613100     IF (P-NEW-PROVIDER-NO = '370054')",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   37' TO HOLD-PROV-CBSA\n\n613300                        P-NEW-CBSA-STAND-AMT-LOC.\n613400\n613500     IF (P-NEW-PROVIDER-NO = '380040')",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   38' TO HOLD-PROV-CBSA\n\n613700                        P-NEW-CBSA-STAND-AMT-LOC.\n613800\n613900     IF (P-NEW-PROVIDER-NO = '390130' OR\n614000                             '390183' OR\n614100                             '390211')\n614200         MOVE '   39' TO HOLD-PROV-CBSA",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   39' TO HOLD-PROV-CBSA\n\n614300                        P-NEW-CBSA-STAND-AMT-LOC.\n614400\n614500     IF (P-NEW-PROVIDER-NO = '420009' OR\n614600                             '420038')\n614700         MOVE '   42' TO HOLD-PROV-CBSA",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   42' TO HOLD-PROV-CBSA\n\n614800                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   45' TO HOLD-PROV-CBSA\n\n615500                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   49' TO HOLD-PROV-CBSA\n\n616000                        P-NEW-CBSA-STAND-AMT-LOC.\n616100\n616200     IF (P-NEW-PROVIDER-NO = '500030' OR\n616300                             '500148')\n616400         MOVE '   50' TO HOLD-PROV-CBSA\n616500                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   50' TO HOLD-PROV-CBSA\n\n616500                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE '   51' TO HOLD-PROV-CBSA\n\n616900                        P-NEW-CBSA-STAND-AMT-LOC.\n617000\n617100 2800-2014-EXIT.   EXIT.\n617200",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 0 TO PPS-ISLET-ISOL-PAY-ADD-ON\n\n618500        MOVE PPS-LOW-VOL-PAYMENT-1314\n618600            TO PPS-LOW-VOL-PAYMENT",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "initialization_pattern",
        "description": "Initialization pattern example",
        "code": "MOVE 0 TO PPS-ISLET-ISOL-PAY-ADD-ON\n\n620000        MOVE PPS-LOW-VOL-PAYMENT-PRE13\n620100            TO PPS-LOW-VOL-PAYMENT",
        "comments": "Sets variable to an initial value to establish default states."
    },
    {
        "type": "bulk_initialization",
        "description": "Bulk initialization example",
        "code": "MOVE ALL '0' TO PPS-DATA\n.\n123000     MOVE ALL '0' TO PPS-ADDITIONAL-VARIABLES-PRE13.\n123100     MOVE ALL '0' TO PPS-ADDITIONAL-VARIABLES-1314.\n123200     MOVE ALL '0' TO PPS-ADDITIONAL-VARIABLES.\n123300\n123400*    MOVE ZEROES  TO W-PR-INDEX-RECORD\n123500*                    W-NEW-INDEX-RECORD",
        "comments": "Initializes multiple variables at once to ensure a clean state for processing."
    },
    {
        "type": "bulk_initialization",
        "description": "Bulk initialization example",
        "code": "MOVE ALL '0' TO PPS-ADDITIONAL-VARIABLES-PRE13\n.\n123100     MOVE ALL '0' TO PPS-ADDITIONAL-VARIABLES-1314.\n123200     MOVE ALL '0' TO PPS-ADDITIONAL-VARIABLES.\n123300\n123400*    MOVE ZEROES  TO W-PR-INDEX-RECORD\n123500*                    W-NEW-INDEX-RECORD\n123600*                    W-NEW-PR-INDEX-RECORD",
        "comments": "Initializes multiple variables at once to ensure a clean state for processing."
    },
    {
        "type": "bulk_initialization",
        "description": "Bulk initialization example",
        "code": "MOVE ALL '0' TO PPS-ADDITIONAL-VARIABLES-1314\n.\n123200     MOVE ALL '0' TO PPS-ADDITIONAL-VARIABLES.\n123300\n123400*    MOVE ZEROES  TO W-PR-INDEX-RECORD\n123500*                    W-NEW-INDEX-RECORD",
        "comments": "Initializes multiple variables at once to ensure a clean state for processing."
    },
    {
        "type": "bulk_initialization",
        "description": "Bulk initialization example",
        "code": "MOVE ALL '0' TO PPS-ADDITIONAL-VARIABLES\n.\n123300\n123400*    MOVE ZEROES  TO W-PR-INDEX-RECORD\n123500*                    W-NEW-INDEX-RECORD",
        "comments": "Initializes multiple variables at once to ensure a clean state for processing."
    },
    {
        "type": "bulk_initialization",
        "description": "Bulk initialization example",
        "code": "MOVE ALL '0' TO  PPS-ADDITIONAL-VARIABLES\n129200\n***          MOVE 98 TO PPS-RTC\n129300***          GOBACK.\n129400***\n129500*****************************************************************\n129600\n129700*EHR INDICATOR CHECK FOR 2015 FORWARD",
        "comments": "Initializes multiple variables at once to ensure a clean state for processing."
    },
    {
        "type": "bulk_initialization",
        "description": "Bulk initialization example",
        "code": "MOVE ALL '0' TO PPS-ADDITIONAL-VARIABLES\n131900          MOVE 52 TO PPS-RTC\n132000          GOBACK\n.\n132100\n132200     IF P-NEW-EFF-DATE < 20041001\n132300        IF '*' = P-NEW-GEO-MSA-1ST OR\n132400                 P-NEW-GEO-MSA-2ND OR",
        "comments": "Initializes multiple variables at once to ensure a clean state for processing."
    },
    {
        "type": "bulk_initialization",
        "description": "Bulk initialization example",
        "code": "MOVE ALL '0' TO PPS-ADDITIONAL-VARIABLES\n132800         MOVE 52 TO PPS-RTC\n132900         GOBACK\n.\n133000\n133100     IF P-NEW-EFF-DATE < 20041001 AND\n133200        B-21-DISCHARGE-DATE > 20040930\n133300        MOVE ALL '0' TO PPS-ADDITIONAL-VARIABLES\n133400        MOVE 52 TO PPS-RTC\n133500        GOBACK.",
        "comments": "Initializes multiple variables at once to ensure a clean state for processing."
    },
    {
        "type": "bulk_initialization",
        "description": "Bulk initialization example",
        "code": "MOVE ALL '0' TO PPS-ADDITIONAL-VARIABLES\n133400        MOVE 52 TO PPS-RTC\n133500        GOBACK\n.\n133600\n133700     IF P-NEW-EFF-DATE > 20040930\n133800        IF '*' = P-NEW-CBSA-GEO-1ST OR\n133900                 P-NEW-CBSA-GEO-2ND OR",
        "comments": "Initializes multiple variables at once to ensure a clean state for processing."
    },
    {
        "type": "bulk_initialization",
        "description": "Bulk initialization example",
        "code": "MOVE ALL '0' TO PPS-ADDITIONAL-VARIABLES\n134400         MOVE 52 TO PPS-RTC\n134500         GOBACK\n.\n134600\n134700     IF P-NEW-EFF-DATE < 20041001",
        "comments": "Initializes multiple variables at once to ensure a clean state for processing."
    },
    {
        "type": "bulk_initialization",
        "description": "Bulk initialization example",
        "code": "MOVE ALL '0' TO  PPS-ADDITIONAL-VARIABLES\n139500          GOBACK\n.\n139600\n139700*****************************************************************\n139800**            FY 2021 \"            \"                        *****\n139900**          THIS NEXT CALL WILL PROCESS 2021 BILLS  WITH",
        "comments": "Initializes multiple variables at once to ensure a clean state for processing."
    },
    {
        "type": "bulk_initialization",
        "description": "Bulk initialization example",
        "code": "MOVE ALL '0' TO PPS-ADDITIONAL-VARIABLES\n229700        MOVE 52 TO PPS-RTC\n.\n229800\n229900***  GET THE WAGE-SIZE\n230000\n230100     MOVE P-NEW-STAND-AMT-LOC-MSA TO HOLD-PROV-MSAX.\n230200",
        "comments": "Initializes multiple variables at once to ensure a clean state for processing."
    },
    {
        "type": "bulk_initialization",
        "description": "Bulk initialization example",
        "code": "MOVE ALL '0' TO  PPS-ADDITIONAL-VARIABLES\n231800          GOBACK\n.\n231900\n232000 0500-EXIT.  EXIT.\n232100\n232200 0550-GET-CBSA.\n232300**2005*  OCT 1, 2004 CBSA REPLACED MSA",
        "comments": "Initializes multiple variables at once to ensure a clean state for processing."
    },
    {
        "type": "bulk_initialization",
        "description": "Bulk initialization example",
        "code": "MOVE ALL '0' TO PPS-ADDITIONAL-VARIABLES\n233000        MOVE 52 TO PPS-RTC\n233100        GOBACK\n.\n233200\n233300**----------------------------------------------------------------\n233400** HOLD THE PROVIDER'S CBSA FROM PSF",
        "comments": "Initializes multiple variables at once to ensure a clean state for processing."
    },
    {
        "type": "bulk_initialization",
        "description": "Bulk initialization example",
        "code": "MOVE ALL '0' TO PPS-ADDITIONAL-VARIABLES\n235400        MOVE 52 TO PPS-RTC\n235500        GOBACK\n.\n235600\n235700     IF (P-NEW-CBSA-WI-SPECIAL AND\n235800         P-NEW-CBSA-SPEC-WI-N = ZEROES)\n235900        MOVE ALL '0' TO PPS-ADDITIONAL-VARIABLES\n236000        MOVE 52 TO PPS-RTC\n236100        GOBACK.",
        "comments": "Initializes multiple variables at once to ensure a clean state for processing."
    },
    {
        "type": "bulk_initialization",
        "description": "Bulk initialization example",
        "code": "MOVE ALL '0' TO PPS-ADDITIONAL-VARIABLES\n236000        MOVE 52 TO PPS-RTC\n236100        GOBACK\n.\n236200\n236300     IF (P-NEW-CBSA-WI-SPECIAL AND\n236400        (P-NEW-EFF-DATE < W-FY-BEGIN-DATE OR\n236500         P-NEW-EFF-DATE > W-FY-END-DATE))\n236600        MOVE ALL '0' TO PPS-ADDITIONAL-VARIABLES\n236700        MOVE 52 TO PPS-RTC",
        "comments": "Initializes multiple variables at once to ensure a clean state for processing."
    },
    {
        "type": "bulk_initialization",
        "description": "Bulk initialization example",
        "code": "MOVE ALL '0' TO PPS-ADDITIONAL-VARIABLES\n236700        MOVE 52 TO PPS-RTC\n236800        GOBACK\n.\n236900\n237000     IF P-NEW-CBSA-WI-SPECIAL\n237100        MOVE 'SPEC*'            TO W-NEW-CBSA-X\n237200        MOVE P-NEW-EFF-DATE     TO W-NEW-CBSA-EFF-DATE\n237300        MOVE P-NEW-CBSA-SPEC-WI TO W-NEW-CBSA-WI",
        "comments": "Initializes multiple variables at once to ensure a clean state for processing."
    },
    {
        "type": "bulk_initialization",
        "description": "Bulk initialization example",
        "code": "MOVE ALL '0' TO PPS-ADDITIONAL-VARIABLES\n258500        MOVE 52 TO PPS-RTC\n258600        GOBACK\n.\n258700\n258800**----------------------------------------------------------------\n258900** GET CBSA WAGE SIZE  - BASED ON DISCHARGE DATE\n259000**----------------------------------------------------------------",
        "comments": "Initializes multiple variables at once to ensure a clean state for processing."
    },
    {
        "type": "bulk_initialization",
        "description": "Bulk initialization example",
        "code": "MOVE ALL '0' TO PPS-ADDITIONAL-VARIABLES\n263300        MOVE 52 TO PPS-RTC\n263400        GOBACK\n.\n263500\n263600 0550-EXIT.  EXIT.",
        "comments": "Initializes multiple variables at once to ensure a clean state for processing."
    },
    {
        "type": "bulk_initialization",
        "description": "Bulk initialization example",
        "code": "MOVE ALL '0' TO PPS-ADDITIONAL-VARIABLES\n469100        MOVE 52 TO PPS-RTC\n469200        GO TO 2300-2015-EXIT\n.\n469300\n469400**----------------------------------------------------------------",
        "comments": "Initializes multiple variables at once to ensure a clean state for processing."
    },
    {
        "type": "bulk_initialization",
        "description": "Bulk initialization example",
        "code": "MOVE ALL '0' TO PPS-ADDITIONAL-VARIABLES\n478300        MOVE 52 TO PPS-RTC\n478400        GO TO 2350-2015-EXIT\n.\n478500\n478600**----------------------------------------------------------------\n478700** SET THE PROVIDER'S STATE RURAL CBSA TO 40 (PUERTO RICO)\n478800**----------------------------------------------------------------\n478900     MOVE '   ' TO H-CBSA-RURAL-BLANK.\n479000     MOVE '40'  TO H-CBSA-RURAL-STATE.",
        "comments": "Initializes multiple variables at once to ensure a clean state for processing."
    },
    {
        "type": "control_flow_with_thru",
        "description": "Control flow with thru example",
        "code": "PERFORM 0900-GET-COUNTY-CODE THRU 0900-EXIT\n\n136600     END-IF.\n136700\n136800     IF OUTM-IND = 1\n136900       PERFORM 0950-GET-OUTM-ADJ THRU 0950-EXIT",
        "comments": "Performs a range of steps in sequence using the THRU construct."
    },
    {
        "type": "control_flow_with_thru",
        "description": "Control flow with thru example",
        "code": "PERFORM 0950-GET-OUTM-ADJ THRU 0950-EXIT\n\n137000         VARYING OUTM-IDX2 FROM OUTM-IDX BY 1 UNTIL\n137100         OUTM-CNTY(OUTM-IDX2) NOT = P-NEW-COUNTY-CODE-X",
        "comments": "Performs a range of steps in sequence using the THRU construct."
    },
    {
        "type": "control_flow_with_thru",
        "description": "Control flow with thru example",
        "code": "PERFORM 0500-GET-MSA THRU 0500-EXIT\n\n138900     ELSE",
        "comments": "Performs a range of steps in sequence using the THRU construct."
    },
    {
        "type": "control_flow_with_thru",
        "description": "Control flow with thru example",
        "code": "PERFORM 0550-GET-CBSA THRU 0550-EXIT\n.\n139100\n139200***     RTC = 52  --  WAGE-INDEX NOT FOUND\n139300     IF PPS-RTC = 52\n139400          MOVE ALL '0' TO  PPS-ADDITIONAL-VARIABLES\n139500          GOBACK.",
        "comments": "Performs a range of steps in sequence using the THRU construct."
    },
    {
        "type": "control_flow_with_thru",
        "description": "Control flow with thru example",
        "code": "PERFORM 2900-MOVE-PPS-ADDITIONAL-VARS THRU 2900-EXIT\n\n154300         GOBACK.\n154400*****************************************************************\n154500*****************************************************************\n154600*****************************************************************\n154700**            FY 2013 \"HEALTH REFORM\"                       *****",
        "comments": "Performs a range of steps in sequence using the THRU construct."
    },
    {
        "type": "control_flow_with_thru",
        "description": "Control flow with thru example",
        "code": "PERFORM 2900-MOVE-PPS-ADDITIONAL-VARS THRU 2900-EXIT\n\n156100         GOBACK.\n156200*****************************************************************\n156300*****************************************************************\n156400*****************************************************************\n156500**            FY 2012 \"HEALTH REFORM\"                       *****",
        "comments": "Performs a range of steps in sequence using the THRU construct."
    },
    {
        "type": "control_flow_with_thru",
        "description": "Control flow with thru example",
        "code": "PERFORM 2900-MOVE-PPS-ADDITIONAL-VARS THRU 2900-EXIT\n\n157900         GOBACK.\n158000*****************************************************************\n158100*****************************************************************\n158200**            FY 2011 \"HEALTH REFORM\"                       *****\n158300**          THIS NEXT CALL WILL PROCESS 2011 BILLS  WITH\n158400**              A DISCHARGE DATE ON OR AFTER 20101001",
        "comments": "Performs a range of steps in sequence using the THRU construct."
    },
    {
        "type": "control_flow_with_thru",
        "description": "Control flow with thru example",
        "code": "PERFORM 2900-MOVE-PPS-ADDITIONAL-VARS THRU 2900-EXIT\n\n159600         GOBACK.\n159700*****************************************************************",
        "comments": "Performs a range of steps in sequence using the THRU construct."
    },
    {
        "type": "control_flow_with_thru",
        "description": "Control flow with thru example",
        "code": "PERFORM 2900-MOVE-PPS-ADDITIONAL-VARS THRU 2900-EXIT\n\n161300         GOBACK.",
        "comments": "Performs a range of steps in sequence using the THRU construct."
    },
    {
        "type": "control_flow_with_thru",
        "description": "Control flow with thru example",
        "code": "PERFORM 2900-MOVE-PPS-ADDITIONAL-VARS THRU 2900-EXIT\n\n162900         GOBACK.\n163000*****************************************************************\n163100*****************************************************************\n163200**          THIS NEXT CALL WILL PROCESS 2009 BILLS  WITH\n163300**              A DISCHARGE DATE ON OR AFTER 20081001",
        "comments": "Performs a range of steps in sequence using the THRU construct."
    },
    {
        "type": "control_flow_with_thru",
        "description": "Control flow with thru example",
        "code": "PERFORM 2900-MOVE-PPS-ADDITIONAL-VARS THRU 2900-EXIT\n\n164500         GOBACK.\n164600*****************************************************************\n164700*****************************************************************",
        "comments": "Performs a range of steps in sequence using the THRU construct."
    },
    {
        "type": "control_flow_with_thru",
        "description": "Control flow with thru example",
        "code": "PERFORM 2900-MOVE-PPS-ADDITIONAL-VARS THRU 2900-EXIT\n\n166100         GOBACK.",
        "comments": "Performs a range of steps in sequence using the THRU construct."
    },
    {
        "type": "control_flow_with_thru",
        "description": "Control flow with thru example",
        "code": "PERFORM 2900-MOVE-PPS-ADDITIONAL-VARS THRU 2900-EXIT\n\n167700         GOBACK.",
        "comments": "Performs a range of steps in sequence using the THRU construct."
    },
    {
        "type": "control_flow_with_thru",
        "description": "Control flow with thru example",
        "code": "PERFORM 2900-MOVE-PPS-ADDITIONAL-VARS THRU 2900-EXIT\n\n169300         GOBACK.\n169400*****************************************************************",
        "comments": "Performs a range of steps in sequence using the THRU construct."
    },
    {
        "type": "control_flow_with_thru",
        "description": "Control flow with thru example",
        "code": "PERFORM 2900-MOVE-PPS-ADDITIONAL-VARS THRU 2900-EXIT\n\n171100         GOBACK.\n171200*****************************************************************\n171300*****************************************************************\n171400*****************************************************************",
        "comments": "Performs a range of steps in sequence using the THRU construct."
    },
    {
        "type": "control_flow_with_thru",
        "description": "Control flow with thru example",
        "code": "PERFORM 2900-MOVE-PPS-ADDITIONAL-VARS THRU 2900-EXIT\n\n172800         GOBACK.\n172900*****************************************************************\n173000*****************************************************************\n173100*****************************************************************",
        "comments": "Performs a range of steps in sequence using the THRU construct."
    },
    {
        "type": "control_flow_with_thru",
        "description": "Control flow with thru example",
        "code": "PERFORM 2900-MOVE-PPS-ADDITIONAL-VARS THRU 2900-EXIT\n\n174500         GOBACK.\n174600*****************************************************************\n174700*****************************************************************\n174800*****************************************************************\n174900**          THIS NEXT CALL WILL PROCESS 2002 BILLS  WITH",
        "comments": "Performs a range of steps in sequence using the THRU construct."
    },
    {
        "type": "control_flow_with_thru",
        "description": "Control flow with thru example",
        "code": "PERFORM 2900-MOVE-PPS-ADDITIONAL-VARS THRU 2900-EXIT\n\n176200         GOBACK.\n176300*****************************************************************\n176400*****************************************************************",
        "comments": "Performs a range of steps in sequence using the THRU construct."
    },
    {
        "type": "control_flow_with_thru",
        "description": "Control flow with thru example",
        "code": "PERFORM 2900-MOVE-PPS-ADDITIONAL-VARS THRU 2900-EXIT\n\n177900         GOBACK.\n178000*****************************************************************\n178100*****************************************************************\n178200*****************************************************************",
        "comments": "Performs a range of steps in sequence using the THRU construct."
    },
    {
        "type": "control_flow_with_thru",
        "description": "Control flow with thru example",
        "code": "PERFORM 2900-MOVE-PPS-ADDITIONAL-VARS THRU 2900-EXIT\n\n179600         GOBACK.\n179700*****************************************************************\n179800*****************************************************************\n179900**          THIS NEXT CALL WILL PROCESS 1999 BILLS  WITH\n180000**              A DISCHARGE DATE ON OR AFTER 19981001",
        "comments": "Performs a range of steps in sequence using the THRU construct."
    },
    {
        "type": "control_flow_with_thru",
        "description": "Control flow with thru example",
        "code": "PERFORM 2900-MOVE-PPS-ADDITIONAL-VARS THRU 2900-EXIT\n\n181200         GOBACK.",
        "comments": "Performs a range of steps in sequence using the THRU construct."
    },
    {
        "type": "control_flow_with_thru",
        "description": "Control flow with thru example",
        "code": "PERFORM 2900-MOVE-PPS-ADDITIONAL-VARS THRU 2900-EXIT\n\n185400         GOBACK.\n185500*****************************************************************\n185600*****************************************************************",
        "comments": "Performs a range of steps in sequence using the THRU construct."
    },
    {
        "type": "control_flow_with_thru",
        "description": "Control flow with thru example",
        "code": "PERFORM 2900-MOVE-PPS-ADDITIONAL-VARS THRU 2900-EXIT\n\n187000         GOBACK.\n187100*****************************************************************",
        "comments": "Performs a range of steps in sequence using the THRU construct."
    },
    {
        "type": "control_flow_with_thru",
        "description": "Control flow with thru example",
        "code": "PERFORM 2900-MOVE-PPS-ADDITIONAL-VARS THRU 2900-EXIT\n\n188600         GOBACK.\n188700*****************************************************************\n188800*****************************************************************\n188900**          THIS NEXT CALL WILL PROCESS 1995 BILLS  WITH\n189000**              A DISCHARGE DATE ON OR AFTER 19941001\n189100*****************************************************************",
        "comments": "Performs a range of steps in sequence using the THRU construct."
    },
    {
        "type": "control_flow_with_thru",
        "description": "Control flow with thru example",
        "code": "PERFORM 2900-MOVE-PPS-ADDITIONAL-VARS THRU 2900-EXIT\n\n190200         GOBACK.\n190300*****************************************************************\n190400*****************************************************************",
        "comments": "Performs a range of steps in sequence using the THRU construct."
    },
    {
        "type": "control_flow_with_thru",
        "description": "Control flow with thru example",
        "code": "PERFORM 2900-MOVE-PPS-ADDITIONAL-VARS THRU 2900-EXIT\n\n191800         GOBACK.\n191900*****************************************************************",
        "comments": "Performs a range of steps in sequence using the THRU construct."
    },
    {
        "type": "control_flow_with_thru",
        "description": "Control flow with thru example",
        "code": "PERFORM 2900-MOVE-PPS-ADDITIONAL-VARS THRU 2900-EXIT\n\n193400         GOBACK.",
        "comments": "Performs a range of steps in sequence using the THRU construct."
    },
    {
        "type": "control_flow_with_thru",
        "description": "Control flow with thru example",
        "code": "PERFORM 2900-MOVE-PPS-ADDITIONAL-VARS THRU 2900-EXIT\n\n195000         GOBACK.\n195100*****************************************************************\n195200*****************************************************************\n195300**          THIS NEXT CALL WILL PROCESS 1991 BILLS  WITH\n195400**              A DISCHARGE DATE ON OR AFTER 19901001",
        "comments": "Performs a range of steps in sequence using the THRU construct."
    },
    {
        "type": "control_flow_with_thru",
        "description": "Control flow with thru example",
        "code": "PERFORM 2900-MOVE-PPS-ADDITIONAL-VARS THRU 2900-EXIT\n\n196600         GOBACK.",
        "comments": "Performs a range of steps in sequence using the THRU construct."
    },
    {
        "type": "control_flow_with_thru",
        "description": "Control flow with thru example",
        "code": "PERFORM 2900-MOVE-PPS-ADDITIONAL-VARS THRU 2900-EXIT\n\n198200         GOBACK.\n198300*****************************************************************\n198400*****************************************************************\n198500**          THIS NEXT CALL WILL PROCESS 1989 BILLS  WITH",
        "comments": "Performs a range of steps in sequence using the THRU construct."
    },
    {
        "type": "control_flow_with_thru",
        "description": "Control flow with thru example",
        "code": "PERFORM 2900-MOVE-PPS-ADDITIONAL-VARS THRU 2900-EXIT\n\n199800         GOBACK.\n199900*****************************************************************",
        "comments": "Performs a range of steps in sequence using the THRU construct."
    },
    {
        "type": "control_flow_with_thru",
        "description": "Control flow with thru example",
        "code": "PERFORM 2900-MOVE-PPS-ADDITIONAL-VARS THRU 2900-EXIT\n\n201400         GOBACK.\n201500*****************************************************************\n201600*****************************************************************\n201700     MOVE 98 TO PPS-RTC.\n201800     GOBACK.\n201900",
        "comments": "Performs a range of steps in sequence using the THRU construct."
    },
    {
        "type": "control_flow_with_thru",
        "description": "Control flow with thru example",
        "code": "PERFORM 0190-GET-RURAL-FLOOR-2020 THRU 0190-EXIT\n\n205400         GO TO 0175-EXIT\n205500       END-IF\n205600     END-IF.\n205700",
        "comments": "Performs a range of steps in sequence using the THRU construct."
    },
    {
        "type": "control_flow_with_thru",
        "description": "Control flow with thru example",
        "code": "PERFORM 0100-GET-MSA THRU 0100-EXIT\n.\n209500\n209600     IF PPS-RTC = 00\n209700      PERFORM 0300-N-GET-PR-WAGE-INDX\n209800           THRU 0300-N-EXIT VARYING MU2",
        "comments": "Performs a range of steps in sequence using the THRU construct."
    },
    {
        "type": "control_flow_with_thru",
        "description": "Control flow with thru example",
        "code": "PERFORM 0370-PRSPC-CODE-RTN THRU 0370-EXIT\n\n211100\n211200        IF  MESWK-PRSPC-WAGEIN-BLEND > 00.0000\n211300            MOVE MESWK-PRSPC-WAGEIN-BLEND",
        "comments": "Performs a range of steps in sequence using the THRU construct."
    },
    {
        "type": "control_flow_with_thru",
        "description": "Control flow with thru example",
        "code": "PERFORM 0150-GET-CBSA THRU 0150-EXIT\n.\n212400\n212500     IF PPS-RTC = 00\n212600      PERFORM 0350-N-GET-PR-WAGE-INDX\n212700           THRU 0350-EXIT VARYING MA2\n212800           FROM MA1 BY 1 UNTIL\n212900           T-CBSA (MA2) NOT = HOLD-PROV-CBSA.",
        "comments": "Performs a range of steps in sequence using the THRU construct."
    },
    {
        "type": "control_flow_with_thru",
        "description": "Control flow with thru example",
        "code": "PERFORM 0175-GET-RURAL-CBSA THRU 0175-EXIT\n.\n213700\n213800     IF PPS-RTC = 00\n213900      PERFORM 0360-N-GET-PR-RURAL-WAGE-INDX\n214000           THRU 0360-EXIT VARYING MA2",
        "comments": "Performs a range of steps in sequence using the THRU construct."
    },
    {
        "type": "control_flow_with_thru",
        "description": "Control flow with thru example",
        "code": "PERFORM 2300-1998-FLOOR-MSA THRU 2300-1998-EXIT\n.\n221200\n221300**1999***********************************************************\n221400     IF B-21-DISCHARGE-DATE > 19980930 AND",
        "comments": "Performs a range of steps in sequence using the THRU construct."
    },
    {
        "type": "control_flow_with_thru",
        "description": "Control flow with thru example",
        "code": "PERFORM 2300-1999-FLOOR-MSA THRU 2300-1999-EXIT\n.\n221700\n221800**2000***********************************************************",
        "comments": "Performs a range of steps in sequence using the THRU construct."
    },
    {
        "type": "control_flow_with_thru",
        "description": "Control flow with thru example",
        "code": "PERFORM 2300-2000-FLOOR-MSA THRU 2300-2000-EXIT\n.\n222200\n222300**2001***********************************************************\n222400     IF B-21-DISCHARGE-DATE > 20000930 AND",
        "comments": "Performs a range of steps in sequence using the THRU construct."
    },
    {
        "type": "control_flow_with_thru",
        "description": "Control flow with thru example",
        "code": "PERFORM 2300-2001-FLOOR-MSA THRU 2300-2001-EXIT\n.\n222700\n222800**2002***********************************************************\n222900     IF B-21-DISCHARGE-DATE > 20010930 AND\n223000        B-21-DISCHARGE-DATE < 20021001",
        "comments": "Performs a range of steps in sequence using the THRU construct."
    },
    {
        "type": "control_flow_with_thru",
        "description": "Control flow with thru example",
        "code": "PERFORM 2300-2002-FLOOR-MSA THRU 2300-2002-EXIT\n.\n223200\n223300     IF B-21-DISCHARGE-DATE > 20010930 AND\n223400        B-21-DISCHARGE-DATE < 20021001\n223500          PERFORM 2700-2002-WI-401-HOSPITAL THRU 2700-2002-EXIT.\n223600",
        "comments": "Performs a range of steps in sequence using the THRU construct."
    },
    {
        "type": "control_flow_with_thru",
        "description": "Control flow with thru example",
        "code": "PERFORM 2700-2002-WI-401-HOSPITAL THRU 2700-2002-EXIT\n.\n223600\n223700**2003***********************************************************\n223800     IF B-21-DISCHARGE-DATE > 20020930 AND\n223900        B-21-DISCHARGE-DATE < 20031001\n224000          PERFORM 2700-2003-WI-401-HOSPITAL THRU 2700-2003-EXIT.\n224100",
        "comments": "Performs a range of steps in sequence using the THRU construct."
    },
    {
        "type": "control_flow_with_thru",
        "description": "Control flow with thru example",
        "code": "PERFORM 2700-2003-WI-401-HOSPITAL THRU 2700-2003-EXIT\n.\n224100\n224200     IF B-21-DISCHARGE-DATE > 20020930 AND\n224300        B-21-DISCHARGE-DATE < 20031001\n224400        PERFORM 2300-2003-FLOOR-MSA THRU 2300-2003-EXIT.\n224500\n224600**2004***********************************************************",
        "comments": "Performs a range of steps in sequence using the THRU construct."
    },
    {
        "type": "control_flow_with_thru",
        "description": "Control flow with thru example",
        "code": "PERFORM 2300-2003-FLOOR-MSA THRU 2300-2003-EXIT\n.\n224500",
        "comments": "Performs a range of steps in sequence using the THRU construct."
    },
    {
        "type": "control_flow_with_thru",
        "description": "Control flow with thru example",
        "code": "PERFORM 2700-2004-WI-401-HOSPITAL THRU 2700-2004-EXIT\n.\n225000\n225100     IF B-21-DISCHARGE-DATE > 20030930 AND\n225200        B-21-DISCHARGE-DATE < 20041001\n225300        PERFORM 2300-2004-FLOOR-MSA THRU 2300-2004-EXIT.\n225400\n225500*****************************************************************",
        "comments": "Performs a range of steps in sequence using the THRU construct."
    },
    {
        "type": "control_flow_with_thru",
        "description": "Control flow with thru example",
        "code": "PERFORM 2300-2004-FLOOR-MSA THRU 2300-2004-EXIT\n.\n225400\n225500*****************************************************************\n225600     PERFORM 0100-GET-MSA THRU 0100-EXIT.\n225700\n225800***     RTC = 52  --  MSA NOT FOUND",
        "comments": "Performs a range of steps in sequence using the THRU construct."
    },
    {
        "type": "control_flow_with_thru",
        "description": "Control flow with thru example",
        "code": "PERFORM 0100-GET-MSA THRU 0100-EXIT\n.\n225700\n225800***     RTC = 52  --  MSA NOT FOUND\n225900     IF PPS-RTC = 52    GOBACK.\n226000\n226100     IF PPS-RTC = 00",
        "comments": "Performs a range of steps in sequence using the THRU construct."
    },
    {
        "type": "control_flow_with_thru",
        "description": "Control flow with thru example",
        "code": "PERFORM 0800-N-GET-INDIAN-WI THRU 0800-N-EXIT\n.\n227000\n227100***     RTC = 52  --  WAGE-INDEX NOT FOUND",
        "comments": "Performs a range of steps in sequence using the THRU construct."
    },
    {
        "type": "control_flow_with_thru",
        "description": "Control flow with thru example",
        "code": "PERFORM 2500-2000-WI-LUGAR THRU 2500-2000-EXIT\n.\n227800\n227900**2001***********************************************************\n228000     IF B-21-DISCHARGE-DATE > 20000930 AND\n228100        B-21-DISCHARGE-DATE < 20011001",
        "comments": "Performs a range of steps in sequence using the THRU construct."
    },
    {
        "type": "control_flow_with_thru",
        "description": "Control flow with thru example",
        "code": "PERFORM 2500-2001-WI-LUGAR THRU 2500-2001-EXIT\n.\n228300\n228400**2003***********************************************************\n228500     IF B-21-DISCHARGE-DATE > 20020930 AND",
        "comments": "Performs a range of steps in sequence using the THRU construct."
    },
    {
        "type": "control_flow_with_thru",
        "description": "Control flow with thru example",
        "code": "PERFORM 2500-2003-WI-LUGAR THRU 2500-2003-EXIT\n.\n228800\n228900**2004***********************************************************",
        "comments": "Performs a range of steps in sequence using the THRU construct."
    },
    {
        "type": "control_flow_with_thru",
        "description": "Control flow with thru example",
        "code": "PERFORM 2300-2004-RECLASS152 THRU 2300-2004-RECLASS-EXIT\n.\n229300\n229400*****************************************************************\n229500     IF W-NEW-INDEX-RECORD = 00.0000",
        "comments": "Performs a range of steps in sequence using the THRU construct."
    },
    {
        "type": "control_flow_with_thru",
        "description": "Control flow with thru example",
        "code": "PERFORM 0100-GET-MSA THRU 0100-EXIT\n.\n230400\n230500     IF PPS-RTC = 00\n230600         PERFORM 0700-N-GET-WAGE-SIZE",
        "comments": "Performs a range of steps in sequence using the THRU construct."
    },
    {
        "type": "control_flow_with_thru",
        "description": "Control flow with thru example",
        "code": "PERFORM 0200-N-GET-MSAPR THRU 0200-N-EXIT\n.\n231400\n231500***     RTC = 52  --  PR-WAGE-INDEX NOT FOUND",
        "comments": "Performs a range of steps in sequence using the THRU construct."
    },
    {
        "type": "control_flow_with_thru",
        "description": "Control flow with thru example",
        "code": "PERFORM 2700-2005-WI-401-HOSPITAL THRU 2700-2005-EXIT\n.\n238500\n238600     IF B-21-DISCHARGE-DATE > 20050331 AND\n238700        B-21-DISCHARGE-DATE < 20051001\n238800          PERFORM 2750-2005-WI-401-HOSPITAL THRU 2750-2005-EXIT.",
        "comments": "Performs a range of steps in sequence using the THRU construct."
    },
    {
        "type": "control_flow_with_thru",
        "description": "Control flow with thru example",
        "code": "PERFORM 2750-2005-WI-401-HOSPITAL THRU 2750-2005-EXIT\n.\n238900\n239000     IF B-21-DISCHARGE-DATE > 20040930 AND\n239100        B-21-DISCHARGE-DATE < 20051001\n239200        PERFORM 2300-2005-FLOOR-CBSA THRU 2300-2005-EXIT.",
        "comments": "Performs a range of steps in sequence using the THRU construct."
    },
    {
        "type": "control_flow_with_thru",
        "description": "Control flow with thru example",
        "code": "PERFORM 2300-2005-FLOOR-CBSA THRU 2300-2005-EXIT\n.\n239300\n239400**2006***********************************************************\n239500",
        "comments": "Performs a range of steps in sequence using the THRU construct."
    },
    {
        "type": "control_flow_with_thru",
        "description": "Control flow with thru example",
        "code": "PERFORM 2800-2006-WI-401-HOSPITAL THRU 2800-2006-EXIT\n.\n239900\n240000     IF B-21-DISCHARGE-DATE > 20050930 AND\n240100        B-21-DISCHARGE-DATE < 20061001\n240200        PERFORM 2300-2006-FLOOR-CBSA THRU 2300-2006-EXIT.\n240300\n240400**2007***********************************************************",
        "comments": "Performs a range of steps in sequence using the THRU construct."
    },
    {
        "type": "control_flow_with_thru",
        "description": "Control flow with thru example",
        "code": "PERFORM 2300-2006-FLOOR-CBSA THRU 2300-2006-EXIT\n.\n240300\n240400**2007***********************************************************\n240500\n240600     IF B-21-DISCHARGE-DATE > 20060930 AND",
        "comments": "Performs a range of steps in sequence using the THRU construct."
    },
    {
        "type": "control_flow_with_thru",
        "description": "Control flow with thru example",
        "code": "PERFORM 2800-2007-WI-401-HOSPITAL THRU 2800-2007-EXIT\n.\n240900\n241000     IF B-21-DISCHARGE-DATE > 20060930 AND\n241100        B-21-DISCHARGE-DATE < 20071001\n241200        PERFORM 2300-2007-FLOOR-CBSA THRU 2300-2007-EXIT.\n241300",
        "comments": "Performs a range of steps in sequence using the THRU construct."
    },
    {
        "type": "control_flow_with_thru",
        "description": "Control flow with thru example",
        "code": "PERFORM 2300-2007-FLOOR-CBSA THRU 2300-2007-EXIT\n.\n241300",
        "comments": "Performs a range of steps in sequence using the THRU construct."
    },
    {
        "type": "control_flow_with_thru",
        "description": "Control flow with thru example",
        "code": "PERFORM 2800-2008-WI-401-HOSPITAL THRU 2800-2008-EXIT\n.\n242000",
        "comments": "Performs a range of steps in sequence using the THRU construct."
    },
    {
        "type": "control_flow_with_thru",
        "description": "Control flow with thru example",
        "code": "PERFORM 2300-2008-FLOOR-CBSA THRU 2300-2008-EXIT\n.\n242400",
        "comments": "Performs a range of steps in sequence using the THRU construct."
    },
    {
        "type": "control_flow_with_thru",
        "description": "Control flow with thru example",
        "code": "PERFORM 2800-2009-WI-401-HOSPITAL THRU 2800-2009-EXIT\n.\n243100\n243200     IF B-21-DISCHARGE-DATE > 20080930 AND\n243300        B-21-DISCHARGE-DATE < 20091001\n243400        PERFORM 2300-2009-FLOOR-CBSA THRU 2300-2009-EXIT.\n243500\n243600*****************************************************************",
        "comments": "Performs a range of steps in sequence using the THRU construct."
    },
    {
        "type": "control_flow_with_thru",
        "description": "Control flow with thru example",
        "code": "PERFORM 2300-2009-FLOOR-CBSA THRU 2300-2009-EXIT\n.\n243500\n243600*****************************************************************",
        "comments": "Performs a range of steps in sequence using the THRU construct."
    },
    {
        "type": "control_flow_with_thru",
        "description": "Control flow with thru example",
        "code": "PERFORM 2800-2010-WI-401-HOSPITAL THRU 2800-2010-EXIT\n.\n244200\n244300     IF B-21-DISCHARGE-DATE > 20090930 AND\n244400        B-21-DISCHARGE-DATE < 20101001\n244500        PERFORM 2300-2010-FLOOR-CBSA THRU 2300-2010-EXIT.\n244600",
        "comments": "Performs a range of steps in sequence using the THRU construct."
    },
    {
        "type": "control_flow_with_thru",
        "description": "Control flow with thru example",
        "code": "PERFORM 2300-2010-FLOOR-CBSA THRU 2300-2010-EXIT\n.\n244600",
        "comments": "Performs a range of steps in sequence using the THRU construct."
    },
    {
        "type": "control_flow_with_thru",
        "description": "Control flow with thru example",
        "code": "PERFORM 2800-2011-WI-401-HOSPITAL THRU 2800-2011-EXIT\n.\n245300\n245400     IF B-21-DISCHARGE-DATE > 20100930 AND",
        "comments": "Performs a range of steps in sequence using the THRU construct."
    },
    {
        "type": "control_flow_with_thru",
        "description": "Control flow with thru example",
        "code": "PERFORM 2300-2011-FLOOR-CBSA THRU 2300-2011-EXIT\n.\n245700\n245800**2012***********************************************************\n245900",
        "comments": "Performs a range of steps in sequence using the THRU construct."
    },
    {
        "type": "control_flow_with_thru",
        "description": "Control flow with thru example",
        "code": "PERFORM 2800-2012-WI-401-HOSPITAL THRU 2800-2012-EXIT\n.\n246300\n246400     IF B-21-DISCHARGE-DATE > 20110930 AND\n246500        B-21-DISCHARGE-DATE < 20121001\n246600        PERFORM 2300-2012-FLOOR-CBSA THRU 2300-2012-EXIT.\n246700",
        "comments": "Performs a range of steps in sequence using the THRU construct."
    },
    {
        "type": "control_flow_with_thru",
        "description": "Control flow with thru example",
        "code": "PERFORM 2300-2012-FLOOR-CBSA THRU 2300-2012-EXIT\n.\n246700\n246800*****************************************************************\n246900**2013***********************************************************\n247000\n247100     IF B-21-DISCHARGE-DATE > 20120930 AND",
        "comments": "Performs a range of steps in sequence using the THRU construct."
    },
    {
        "type": "control_flow_with_thru",
        "description": "Control flow with thru example",
        "code": "PERFORM 2800-2013-WI-401-HOSPITAL THRU 2800-2013-EXIT\n.\n247400\n247500     IF B-21-DISCHARGE-DATE > 20120930 AND\n247600        B-21-DISCHARGE-DATE < 20131001\n247700        PERFORM 2300-2013-FLOOR-CBSA THRU 2300-2013-EXIT.\n247800",
        "comments": "Performs a range of steps in sequence using the THRU construct."
    },
    {
        "type": "control_flow_with_thru",
        "description": "Control flow with thru example",
        "code": "PERFORM 2300-2013-FLOOR-CBSA THRU 2300-2013-EXIT\n.\n247800\n247900**2014***********************************************************\n248000\n248100     IF B-21-DISCHARGE-DATE > 20130930 AND",
        "comments": "Performs a range of steps in sequence using the THRU construct."
    },
    {
        "type": "control_flow_with_thru",
        "description": "Control flow with thru example",
        "code": "PERFORM 2800-2014-WI-401-HOSPITAL THRU 2800-2014-EXIT\n.\n248400\n248500     IF B-21-DISCHARGE-DATE > 20130930 AND\n248600        B-21-DISCHARGE-DATE < 20141001\n248700        PERFORM 2300-2014-FLOOR-CBSA THRU 2300-2014-EXIT.\n248800",
        "comments": "Performs a range of steps in sequence using the THRU construct."
    },
    {
        "type": "control_flow_with_thru",
        "description": "Control flow with thru example",
        "code": "PERFORM 2300-2014-FLOOR-CBSA THRU 2300-2014-EXIT\n.\n248800\n248900**2015***********************************************************\n249000* 401 HOSPITAL PROCESS STOPPED FOR FY2015\n249100**2015***********************************************************",
        "comments": "Performs a range of steps in sequence using the THRU construct."
    },
    {
        "type": "control_flow_with_thru",
        "description": "Control flow with thru example",
        "code": "PERFORM 2800-2015-WI-401-HOSPITAL THRU 2800-2015-EXIT\n.\n249500*\n249600*****************************************************************\n249700\n249800**----------------------------------------------------------------",
        "comments": "Performs a range of steps in sequence using the THRU construct."
    },
    {
        "type": "control_flow_with_thru",
        "description": "Control flow with thru example",
        "code": "PERFORM 0150-GET-CBSA THRU 0150-EXIT\n.\n250300\n250400***  RTC = 52  --  CBSA NOT FOUND\n250500     IF PPS-RTC = 52 GOBACK.",
        "comments": "Performs a range of steps in sequence using the THRU construct."
    },
    {
        "type": "control_flow_with_thru",
        "description": "Control flow with thru example",
        "code": "PERFORM 1000-GET-PREVYR-WI THRU 1000-EXIT\n.\n256100\n256200     IF B-21-DISCHARGE-DATE > 20190930",
        "comments": "Performs a range of steps in sequence using the THRU construct."
    },
    {
        "type": "control_flow_with_thru",
        "description": "Control flow with thru example",
        "code": "PERFORM 0850-N-GET-CBSA-INDIAN-WI THRU 0850-EXIT\n.\n257600\n257700***  RTC = 52  --  WAGE-INDEX NOT FOUND\n257800     IF PPS-RTC = 52 GOBACK.\n257900\n258000     IF W-NEW-CBSA-WI NOT NUMERIC\n258100        MOVE 0 TO W-NEW-CBSA-WI.",
        "comments": "Performs a range of steps in sequence using the THRU construct."
    },
    {
        "type": "control_flow_with_thru",
        "description": "Control flow with thru example",
        "code": "PERFORM 0150-GET-CBSA THRU 0150-EXIT\n.\n259400\n259500***  RTC = 52  --  WAGE-INDEX NOT FOUND\n259600     IF PPS-RTC = 52 GOBACK.\n259700",
        "comments": "Performs a range of steps in sequence using the THRU construct."
    },
    {
        "type": "control_flow_with_thru",
        "description": "Control flow with thru example",
        "code": "PERFORM 0250-N-GET-CBSA-PR THRU 0250-EXIT\n.\n261000\n261100**----------------------------------------------------------------\n261200** FOR FYS 2015 AND AFTER, APPLY THE RURAL FLOOR POLICY TO THE\n261300** PUERTO RICO SPECIFIC WAGE INDEX\n261400**----------------------------------------------------------------",
        "comments": "Performs a range of steps in sequence using the THRU construct."
    },
    {
        "type": "control_flow_with_thru",
        "description": "Control flow with thru example",
        "code": "PERFORM 0100-GET-MSA THRU 0100-EXIT\n.\n273000\n273100     IF PPS-RTC = 00\n273200        PERFORM 0600-N-GET-WAGE-INDX",
        "comments": "Performs a range of steps in sequence using the THRU construct."
    },
    {
        "type": "control_flow_with_thru",
        "description": "Control flow with thru example",
        "code": "PERFORM 0150-GET-CBSA THRU 0150-EXIT\n.\n274800\n274900     IF PPS-RTC = 00\n275000        PERFORM 0650-N-GET-CBSA-WAGE-INDX\n275100            THRU 0650-N-EXIT VARYING MA2\n275200            FROM MA1 BY 1 UNTIL",
        "comments": "Performs a range of steps in sequence using the THRU construct."
    },
    {
        "type": "control_flow_with_thru",
        "description": "Control flow with thru example",
        "code": "PERFORM 0175-GET-RURAL-CBSA THRU 0175-EXIT\n.\n470700\n470800     IF PPS-RTC = 00\n470900      IF W-RURAL-CBSA-EFF-DATE NOT = WS-9S\n471000       IF B-21-DISCHARGE-DATE > 20200930\n471100        IF H-CBSA-PROV-BLANK = '   '",
        "comments": "Performs a range of steps in sequence using the THRU construct."
    },
    {
        "type": "control_flow_with_thru",
        "description": "Control flow with thru example",
        "code": "PERFORM 0690-GET-RURAL-FLOOR-WAGE-INDX THRU 0690-EXIT\n\n473200          GO TO 0690-BYPASS\n473300        END-IF\n473400       END-IF\n473500      END-IF\n473600     END-IF.",
        "comments": "Performs a range of steps in sequence using the THRU construct."
    },
    {
        "type": "control_flow_with_thru",
        "description": "Control flow with thru example",
        "code": "PERFORM 0260-N-GET-RURAL-CBSA-PR THRU 0260-EXIT\n.\n479600\n479700*------------------------------------------------------------*",
        "comments": "Performs a range of steps in sequence using the THRU construct."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "126900     IF B-21-DISCHG-MM >= 01 AND\n\n127000        B-21-DISCHG-MM <= 09",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "130000     IF B-21-DISCHARGE-DATE > 20140930 AND\n\n130100        (P-NEW-EHR-REDUC-INDN NOT = 'Y' AND\n130200         P-NEW-EHR-REDUC-INDN NOT = ' ')\n130300           MOVE 65 TO PPS-RTC",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "131000     IF B-21-DISCHARGE-DATE > 19990930 AND\n\n131100        B-21-DISCHARGE-DATE < 20001001\n131200      IF (P-NEW-CHG-CODE-INDEX = 'Y' AND\n131300          P-NEW-GEO-LOC-MSAX = P-NEW-WAGE-INDEX-LOC-MSA)",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "131200      IF (P-NEW-CHG-CODE-INDEX = 'Y' AND\n\n131300          P-NEW-GEO-LOC-MSAX = P-NEW-WAGE-INDEX-LOC-MSA)\n131400          AND (P-NEW-GEO-LOC-MSAX NOT = '1600' AND NOT = '3285'\n131500                            AND   NOT = '5600' AND NOT = '1520'\n131600                            AND   NOT = '1640' AND NOT = '0240'\n131700                            AND   NOT = '3360' AND NOT = '1123')",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "132200     IF P-NEW-EFF-DATE < 20041001\n\n132300        IF '*' = P-NEW-GEO-MSA-1ST OR\n132400                 P-NEW-GEO-MSA-2ND OR\n132500                 P-NEW-GEO-MSA-3RD OR\n132600                 P-NEW-GEO-MSA-4TH\n132700         MOVE ALL '0' TO PPS-ADDITIONAL-VARIABLES",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "132300        IF '*' = P-NEW-GEO-MSA-1ST OR\n\n132400                 P-NEW-GEO-MSA-2ND OR\n132500                 P-NEW-GEO-MSA-3RD OR\n132600                 P-NEW-GEO-MSA-4TH\n132700         MOVE ALL '0' TO PPS-ADDITIONAL-VARIABLES\n132800         MOVE 52 TO PPS-RTC\n132900         GOBACK.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "133100     IF P-NEW-EFF-DATE < 20041001 AND\n\n133200        B-21-DISCHARGE-DATE > 20040930\n133300        MOVE ALL '0' TO PPS-ADDITIONAL-VARIABLES\n133400        MOVE 52 TO PPS-RTC\n133500        GOBACK.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "133700     IF P-NEW-EFF-DATE > 20040930\n\n133800        IF '*' = P-NEW-CBSA-GEO-1ST OR\n133900                 P-NEW-CBSA-GEO-2ND OR\n134000                 P-NEW-CBSA-GEO-3RD OR\n134100                 P-NEW-CBSA-GEO-4TH OR",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "133800        IF '*' = P-NEW-CBSA-GEO-1ST OR\n\n133900                 P-NEW-CBSA-GEO-2ND OR\n134000                 P-NEW-CBSA-GEO-3RD OR\n134100                 P-NEW-CBSA-GEO-4TH OR\n134200                 P-NEW-CBSA-GEO-5TH",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "134700     IF P-NEW-EFF-DATE < 20041001\n\n134800        IF (P-NEW-WAGE-INDEX-LOC-MSA = '    ' OR\n134900            P-NEW-WAGE-INDEX-LOC-MSA = '0000')\n135000            MOVE P-NEW-GEO-LOC-MSA9 TO P-NEW-WAGE-INDEX-LOC-MSA.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "134800        IF (P-NEW-WAGE-INDEX-LOC-MSA = '    ' OR\n\n134900            P-NEW-WAGE-INDEX-LOC-MSA = '0000')\n135000            MOVE P-NEW-GEO-LOC-MSA9 TO P-NEW-WAGE-INDEX-LOC-MSA.\n135100     IF P-NEW-EFF-DATE < 20041001\n135200        IF (P-NEW-STAND-AMT-LOC-MSA = '    ' OR",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "135100     IF P-NEW-EFF-DATE < 20041001\n\n135200        IF (P-NEW-STAND-AMT-LOC-MSA = '    ' OR\n135300            P-NEW-STAND-AMT-LOC-MSA = '0000')\n135400            MOVE P-NEW-GEO-LOC-MSA9 TO P-NEW-STAND-AMT-LOC-MSA.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "135200        IF (P-NEW-STAND-AMT-LOC-MSA = '    ' OR\n\n135300            P-NEW-STAND-AMT-LOC-MSA = '0000')\n135400            MOVE P-NEW-GEO-LOC-MSA9 TO P-NEW-STAND-AMT-LOC-MSA.\n135500\n135600****************************\n135700* BEGIN OUTMIGRATION CHECK *",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "136000     IF (P-NEW-CBSA-RECLASS-LOC = '     ' OR\n\n136100         P-NEW-CBSA-RECLASS-LOC = '00000') AND\n136200        (P-NEW-CBSA-STAND-AMT-LOC = '     ' OR\n136300         P-NEW-CBSA-STAND-AMT-LOC = '00000') AND\n136400         P-NEW-CBSA-WI-BLANK\n136500       PERFORM 0900-GET-COUNTY-CODE THRU 0900-EXIT",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "136800     IF OUTM-IND = 1\n\n136900       PERFORM 0950-GET-OUTM-ADJ THRU 0950-EXIT\n137000         VARYING OUTM-IDX2 FROM OUTM-IDX BY 1 UNTIL",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "137800     IF P-NEW-EFF-DATE > 20040930\n\n137900        IF (P-NEW-CBSA-RECLASS-LOC = '     ' OR",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "137900        IF (P-NEW-CBSA-RECLASS-LOC = '     ' OR\n\n138000            P-NEW-CBSA-RECLASS-LOC = '00000')\n138100            MOVE P-NEW-CBSA-GEO-LOC9 TO P-NEW-CBSA-RECLASS-LOC.\n138200     IF P-NEW-EFF-DATE > 20040930\n138300        IF (P-NEW-CBSA-STAND-AMT-LOC = '     ' OR\n138400            P-NEW-CBSA-STAND-AMT-LOC = '00000')",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "138200     IF P-NEW-EFF-DATE > 20040930\n\n138300        IF (P-NEW-CBSA-STAND-AMT-LOC = '     ' OR",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "138300        IF (P-NEW-CBSA-STAND-AMT-LOC = '     ' OR\n\n138400            P-NEW-CBSA-STAND-AMT-LOC = '00000')",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "138700     IF P-NEW-EFF-DATE < 20041001\n\n138800        PERFORM 0500-GET-MSA THRU 0500-EXIT\n138900     ELSE\n139000        PERFORM 0550-GET-CBSA THRU 0550-EXIT.\n139100\n139200***     RTC = 52  --  WAGE-INDEX NOT FOUND\n139300     IF PPS-RTC = 52",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "139300     IF PPS-RTC = 52\n\n139400          MOVE ALL '0' TO  PPS-ADDITIONAL-VARIABLES\n139500          GOBACK.\n139600\n139700*****************************************************************\n139800**            FY 2021 \"            \"                        *****\n139900**          THIS NEXT CALL WILL PROCESS 2021 BILLS  WITH",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "140200     IF B-21-DISCHARGE-DATE\n\n140300              > 20200930\n140400         CALL  PPCAL215 USING BILL-DATA-2021\n140500                              PPS-DATA\n140600                              PRICER-OPT-VERS-SW\n140700                              PPS-ADDITIONAL-VARIABLES",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "144000     IF B-21-DISCHARGE-DATE\n\n144100              > 20190930\n144200         CALL  PPCAL204 USING BILL-NEW-DATA",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "145500     IF B-21-DISCHARGE-DATE\n\n145600              > 20180930\n145700         CALL  PPCAL192 USING BILL-NEW-DATA",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "147000     IF B-21-DISCHARGE-DATE\n\n147100              > 20170930\n147200         CALL  PPCAL182 USING BILL-NEW-DATA\n147300                              PPS-DATA\n147400                              PRICER-OPT-VERS-SW\n147500                              PPS-ADDITIONAL-VARIABLES\n147600                              PROV-NEW-HOLD",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "148500     IF B-21-DISCHARGE-DATE\n\n148600              > 20160930\n148700         CALL  PPCAL171 USING BILL-NEW-DATA\n148800                              PPS-DATA\n148900                              PRICER-OPT-VERS-SW\n149000                              PPS-ADDITIONAL-VARIABLES",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "150000     IF B-21-DISCHARGE-DATE\n\n150100              > 20150930\n150200         CALL  PPCAL163 USING BILL-NEW-DATA\n150300                              PPS-DATA\n150400                              PRICER-OPT-VERS-SW\n150500                              PPS-ADDITIONAL-VARIABLES\n150600                              PROV-NEW-HOLD",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "151600     IF B-21-DISCHARGE-DATE\n\n151700              > 20140930\n151800         CALL  PPCAL156 USING BILL-NEW-DATA\n151900                              PPS-DATA\n152000                              PRICER-OPT-VERS-SW\n152100                              PPS-ADDITIONAL-VARIABLES",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "153300     IF B-21-DISCHARGE-DATE\n\n153400              > 20130930\n153500         CALL  PPCAL14B USING BILL-NEW-DATA\n153600                              PPS-DATA\n153700                              PRICER-OPT-VERS-SW\n153800                              PPS-ADDITIONAL-VARIABLES-1314\n153900                              PROV-NEW-HOLD",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "155100     IF B-21-DISCHARGE-DATE\n\n155200              > 20120930\n155300         CALL  PPCAL135 USING BILL-NEW-DATA\n155400                              PPS-DATA\n155500                              PRICER-OPT-VERS-SW",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "156900     IF B-21-DISCHARGE-DATE\n\n157000              > 20110930\n157100         CALL  PPCAL125 USING BILL-NEW-DATA\n157200                              PPS-DATA",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "158600     IF B-21-DISCHARGE-DATE\n\n158700              > 20100930\n158800         CALL  PPCAL119 USING BILL-NEW-DATA\n158900                              PPS-DATA\n159000                              PRICER-OPT-VERS-SW\n159100                              PPS-ADDITIONAL-VARIABLES-PRE13",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "160300     IF B-21-DISCHARGE-DATE\n\n160400              > 20100331\n160500         CALL  PPCAL10P USING BILL-NEW-DATA\n160600                              PPS-DATA",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "161900     IF B-21-DISCHARGE-DATE\n\n162000              > 20090930\n162100         CALL  PPCAL10O USING BILL-NEW-DATA\n162200                              PPS-DATA\n162300                              PRICER-OPT-VERS-SW\n162400                              PPS-ADDITIONAL-VARIABLES-PRE13",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "163500     IF B-21-DISCHARGE-DATE\n\n163600              > 20080930\n163700         CALL  PPCAL09D USING BILL-NEW-DATA",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "165100     IF B-21-DISCHARGE-DATE\n\n165200              > 20070930\n165300         CALL  PPCAL08D USING BILL-NEW-DATA",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "166700     IF B-21-DISCHARGE-DATE\n\n166800              > 20060930\n166900         CALL  PPCAL07B USING BILL-NEW-DATA\n167000                              PPS-DATA\n167100                              PRICER-OPT-VERS-SW\n167200                              PPS-ADDITIONAL-VARIABLES-PRE13\n167300                              PROV-NEW-HOLD",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "168300     IF B-21-DISCHARGE-DATE\n\n168400              > 20050930",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "170100     IF B-21-DISCHARGE-DATE\n\n170200              > 20040930\n170300         CALL  PPCAL059 USING BILL-NEW-DATA\n170400                              PPS-DATA\n170500                              PRICER-OPT-VERS-SW",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "171800     IF B-21-DISCHARGE-DATE\n\n171900              > 20030930",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "173500     IF B-21-DISCHARGE-DATE\n\n173600              > 20020930\n173700         CALL  PPCAL038 USING BILL-NEW-DATA\n173800                              PPS-DATA",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "175200     IF B-21-DISCHARGE-DATE\n\n175300              > 20010930\n175400         CALL  PPCAL026 USING BILL-NEW-DATA\n175500                              PPS-DATA\n175600                              PRICER-OPT-VERS-SW",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "176900     IF B-21-DISCHARGE-DATE\n\n177000              > 20000930\n177100         CALL  PPCAL017 USING BILL-NEW-DATA",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "178600     IF B-21-DISCHARGE-DATE\n\n178700              > 19990930",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "180200     IF B-21-DISCHARGE-DATE\n\n180300              > 19980930\n180400         CALL  PPCAL998 USING BILL-NEW-DATA",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "184400     IF B-21-DISCHARGE-DATE\n\n184500              > 19970930\n184600         CALL  PPCAL987 USING BILL-DATA\n184700                              PPS-DATA",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "186000     IF B-21-DISCHARGE-DATE\n\n186100              > 19960930\n186200         CALL  PPCAL974 USING BILL-DATA\n186300                              PPS-DATA\n186400                              PRICER-OPT-VERS-SW",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "187600     IF B-21-DISCHARGE-DATE\n\n187700              > 19950930\n187800         CALL  PPCAL964 USING BILL-DATA\n187900                              PPS-DATA\n188000                              PRICER-OPT-VERS-SW",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "189200     IF B-21-DISCHARGE-DATE\n\n189300              > 19940930\n189400         CALL  PPCAL954 USING BILL-DATA\n189500                              PPS-DATA",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "190800     IF B-21-DISCHARGE-DATE\n\n190900              > 19930930",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "192400     IF B-21-DISCHARGE-DATE\n\n192500              > 19920930",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "194000     IF B-21-DISCHARGE-DATE\n\n194100              > 19910930\n194200         CALL  PPCAL926 USING BILL-DATA",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "195600     IF B-21-DISCHARGE-DATE\n\n195700              > 19900930\n195800         CALL  PPCAL915 USING BILL-DATA\n195900                              PPS-DATA",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "197200     IF B-21-DISCHARGE-DATE\n\n197300              > 19890930\n197400         CALL  PPCAL905 USING BILL-DATA\n197500                              PPS-DATA",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "198800     IF B-21-DISCHARGE-DATE\n\n198900              > 19880930\n199000         CALL  PPCAL894 USING BILL-DATA\n199100                              PPS-DATA\n199200                              PRICER-OPT-VERS-SW\n199300                              PPS-ADDITIONAL-VARIABLES-PRE13\n199400                              PROV-HOLD",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "200400     IF B-21-DISCHARGE-DATE\n\n200500              > 19870930\n200600         CALL  PPCAL884 USING BILL-DATA\n200700                              PPS-DATA",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "204800     IF B-21-DISCHARGE-DATE > 20190930 AND\n\n204900        B-21-DISCHARGE-DATE < 20201001\n205000       IF H-CBSA-PROV-BLANK = '   '\n205100         GO TO 0175-EXIT\n205200       ELSE\n205300         PERFORM 0190-GET-RURAL-FLOOR-2020 THRU 0190-EXIT",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "205000       IF H-CBSA-PROV-BLANK = '   '\n\n205100         GO TO 0175-EXIT",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "208800     IF P-NEW-CHG-CODE-INDEX = 'Y'\n\n208900        MOVE P-NEW-WAGE-INDEX-LOC-MSA TO HOLD-PROV-MSAX\n209000     ELSE\n209100        MOVE P-NEW-GEO-LOC-MSAX TO HOLD-PROV-MSAX.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "209600     IF PPS-RTC = 00\n\n209700      PERFORM 0300-N-GET-PR-WAGE-INDX\n209800           THRU 0300-N-EXIT VARYING MU2\n209900           FROM MU1 BY 1 UNTIL\n210000           M-MSAX-MSA (MU2) NOT = HOLD-PROV-MSAX.\n210100\n210200 0200-N-EXIT.  EXIT.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "210800     IF B-21-DISCHARGE-DATE > 20140930 AND\n\n210900        B-21-DISCHARGE-DATE < 20151001\n211000        PERFORM 0370-PRSPC-CODE-RTN THRU 0370-EXIT\n211100\n211200        IF  MESWK-PRSPC-WAGEIN-BLEND > 00.0000\n211300            MOVE MESWK-PRSPC-WAGEIN-BLEND\n211400                              TO W-NEW-CBSA-PR-WI",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "211200        IF  MESWK-PRSPC-WAGEIN-BLEND > 00.0000\n\n211300            MOVE MESWK-PRSPC-WAGEIN-BLEND\n211400                              TO W-NEW-CBSA-PR-WI\n211500        GO TO 0250-EXIT.\n211600\n211700     MOVE P-NEW-CBSA-STAND-AMT-LOC TO HOLD-PROV-CBSA.\n211800",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "211900     IF P-NEW-CBSA-WI-RECLASS OR P-NEW-CBSA-WI-DUAL\n\n212000        MOVE P-NEW-CBSA-RECLASS-LOC TO HOLD-PROV-CBSA.\n212100\n212200     MOVE '*' TO H-CBSA-LAST-POS.\n212300     PERFORM 0150-GET-CBSA THRU 0150-EXIT.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "212500     IF PPS-RTC = 00\n\n212600      PERFORM 0350-N-GET-PR-WAGE-INDX\n212700           THRU 0350-EXIT VARYING MA2\n212800           FROM MA1 BY 1 UNTIL\n212900           T-CBSA (MA2) NOT = HOLD-PROV-CBSA.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "213800     IF PPS-RTC = 00\n\n213900      PERFORM 0360-N-GET-PR-RURAL-WAGE-INDX",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "214800     IF  B-21-DISCHARGE-DATE NOT < M-MSAX-EFF-DATE (MU2)\n\n214900         MOVE M-MSAX-WAGE-INDX1 (MU2) TO W-NEW-PR-INDEX-RECORD",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "215000         IF P-NEW-CHG-CODE-INDEX  = 'Y'\n\n215100            MOVE M-MSAX-WAGE-INDX2 (MU2)\n215200                                     TO W-NEW-PR-INDEX-RECORD.\n215300\n215400 0300-N-EXIT.  EXIT.\n215500\n215600 0350-N-GET-PR-WAGE-INDX.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "215800     IF  B-21-DISCHARGE-DATE NOT < T-CBSA-EFF-DATE (MA2) AND\n\n215900         (T-CBSA-EFF-DATE (MA2) >= W-FY-BEGIN-DATE AND\n216000          T-CBSA-EFF-DATE (MA2) <= W-FY-END-DATE)\n216100         MOVE T-CBSA-WAGE-INDX1 (MA2)\n216200                              TO W-NEW-CBSA-PR-WI",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "216300         IF P-NEW-CBSA-SPEC-PAY-IND =  'Y'\n\n216400             MOVE T-CBSA-WAGE-INDX2 (MA2)\n216500                              TO W-NEW-CBSA-PR-WI.\n216600\n216700 0350-EXIT.  EXIT.\n216800\n216900 0360-N-GET-PR-RURAL-WAGE-INDX.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "217100     IF  B-21-DISCHARGE-DATE NOT < T-CBSA-EFF-DATE (MA2) AND\n\n217200         (T-CBSA-EFF-DATE (MA2) >= W-FY-BEGIN-DATE AND\n217300          T-CBSA-EFF-DATE (MA2) <= W-FY-END-DATE)\n217400         MOVE T-CBSA-WAGE-INDX1 (MA2)\n217500                              TO W-RURAL-CBSA-PR-WI",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "217600         IF P-NEW-CBSA-SPEC-PAY-IND = 'Y'\n\n217700             MOVE T-CBSA-WAGE-INDX2 (MA2)\n217800                              TO W-RURAL-CBSA-PR-WI.\n217900\n218000 0360-EXIT.  EXIT.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "220300        IF P-NEW-CHG-CODE-INDEX = 'Y'\n\n220400           MOVE P-NEW-WAGE-INDEX-LOC-MSA TO HOLD-PROV-MSAX\n220500        ELSE\n220600           MOVE P-NEW-GEO-LOC-MSA9 TO HOLD-PROV-MSAX.\n220700\n220800**1998***********************************************************",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "220900     IF B-21-DISCHARGE-DATE > 19970930 AND\n\n221000        B-21-DISCHARGE-DATE < 19981001\n221100        PERFORM 2300-1998-FLOOR-MSA THRU 2300-1998-EXIT.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "221400     IF B-21-DISCHARGE-DATE > 19980930 AND\n\n221500        B-21-DISCHARGE-DATE < 19991001\n221600        PERFORM 2300-1999-FLOOR-MSA THRU 2300-1999-EXIT.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "221900     IF B-21-DISCHARGE-DATE > 19990930 AND\n\n222000        B-21-DISCHARGE-DATE < 20001001\n222100        PERFORM 2300-2000-FLOOR-MSA THRU 2300-2000-EXIT.\n222200\n222300**2001***********************************************************",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "222400     IF B-21-DISCHARGE-DATE > 20000930 AND\n\n222500        B-21-DISCHARGE-DATE < 20011001\n222600        PERFORM 2300-2001-FLOOR-MSA THRU 2300-2001-EXIT.\n222700\n222800**2002***********************************************************\n222900     IF B-21-DISCHARGE-DATE > 20010930 AND\n223000        B-21-DISCHARGE-DATE < 20021001",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "222900     IF B-21-DISCHARGE-DATE > 20010930 AND\n\n223000        B-21-DISCHARGE-DATE < 20021001\n223100        PERFORM 2300-2002-FLOOR-MSA THRU 2300-2002-EXIT.\n223200",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "223300     IF B-21-DISCHARGE-DATE > 20010930 AND\n\n223400        B-21-DISCHARGE-DATE < 20021001\n223500          PERFORM 2700-2002-WI-401-HOSPITAL THRU 2700-2002-EXIT.\n223600\n223700**2003***********************************************************\n223800     IF B-21-DISCHARGE-DATE > 20020930 AND\n223900        B-21-DISCHARGE-DATE < 20031001",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "223800     IF B-21-DISCHARGE-DATE > 20020930 AND\n\n223900        B-21-DISCHARGE-DATE < 20031001\n224000          PERFORM 2700-2003-WI-401-HOSPITAL THRU 2700-2003-EXIT.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "224200     IF B-21-DISCHARGE-DATE > 20020930 AND\n\n224300        B-21-DISCHARGE-DATE < 20031001\n224400        PERFORM 2300-2003-FLOOR-MSA THRU 2300-2003-EXIT.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "224700     IF B-21-DISCHARGE-DATE > 20030930 AND\n\n224800        B-21-DISCHARGE-DATE < 20041001\n224900          PERFORM 2700-2004-WI-401-HOSPITAL THRU 2700-2004-EXIT.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "225100     IF B-21-DISCHARGE-DATE > 20030930 AND\n\n225200        B-21-DISCHARGE-DATE < 20041001",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "225900     IF PPS-RTC = 52    GOBACK.\n\n226000\n226100     IF PPS-RTC = 00",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "226100     IF PPS-RTC = 00\n\n226200        PERFORM 0600-N-GET-WAGE-INDX",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "226700     IF P-N-INDIAN-HEALTH-SERVICE\n\n226800             MOVE 00 TO PPS-RTC\n226900             PERFORM 0800-N-GET-INDIAN-WI THRU 0800-N-EXIT.\n227000",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "227200     IF PPS-RTC = 52    GOBACK.\n\n227300\n227400**2000***********************************************************\n227500     IF B-21-DISCHARGE-DATE > 19990930 AND",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "227500     IF B-21-DISCHARGE-DATE > 19990930 AND\n\n227600        B-21-DISCHARGE-DATE < 20001001\n227700          PERFORM 2500-2000-WI-LUGAR THRU 2500-2000-EXIT.\n227800\n227900**2001***********************************************************\n228000     IF B-21-DISCHARGE-DATE > 20000930 AND\n228100        B-21-DISCHARGE-DATE < 20011001",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "228000     IF B-21-DISCHARGE-DATE > 20000930 AND\n\n228100        B-21-DISCHARGE-DATE < 20011001",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "228500     IF B-21-DISCHARGE-DATE > 20020930 AND\n\n228600        B-21-DISCHARGE-DATE < 20031001\n228700          PERFORM 2500-2003-WI-LUGAR THRU 2500-2003-EXIT.\n228800\n228900**2004***********************************************************\n229000     IF B-21-DISCHARGE-DATE > 20031231 AND",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "229000     IF B-21-DISCHARGE-DATE > 20031231 AND\n\n229100        B-21-DISCHARGE-DATE < 20041001",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "229500     IF W-NEW-INDEX-RECORD = 00.0000\n\n229600        MOVE ALL '0' TO PPS-ADDITIONAL-VARIABLES\n229700        MOVE 52 TO PPS-RTC.\n229800\n229900***  GET THE WAGE-SIZE",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "230500     IF PPS-RTC = 00\n\n230600         PERFORM 0700-N-GET-WAGE-SIZE\n230700           THRU 0700-N-EXIT VARYING MU2\n230800           FROM MU1 BY 1 UNTIL\n230900           M-MSAX-MSA (MU2) NOT = HOLD-PROV-MSAX.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "231100     IF P-PR-NEW-STATE\n\n231200        IF B-21-DISCHARGE-DATE > 19970930",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "231200        IF B-21-DISCHARGE-DATE > 19970930\n\n231300              PERFORM 0200-N-GET-MSAPR THRU 0200-N-EXIT.\n231400",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "231600     IF PPS-RTC = 52\n\n231700          MOVE ALL '0' TO  PPS-ADDITIONAL-VARIABLES\n231800          GOBACK.\n231900\n232000 0500-EXIT.  EXIT.\n232100\n232200 0550-GET-CBSA.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "232800     IF P-NEW-EFF-DATE < 20041001\n\n232900        MOVE ALL '0' TO PPS-ADDITIONAL-VARIABLES\n233000        MOVE 52 TO PPS-RTC",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "234200     IF P-NEW-CBSA-WI-RECLASS OR P-NEW-CBSA-WI-DUAL\n\n234300        MOVE P-NEW-CBSA-RECLASS-LOC TO HOLD-PROV-CBSA.\n234400\n234500**----------------------------------------------------------------\n234600** IF THE PSF INDICATES THE SPECIAL WAGE INDEX SHOULD BE USED,\n234700** VALIDATE THE SPECIAL WAGE INDEX VALUE AND EFFECTIVE DATE. IF",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "235100     IF (P-NEW-CBSA-WI-SPECIAL AND\n\n235200         P-NEW-CBSA-SPEC-WI-N NOT NUMERIC)\n235300        MOVE ALL '0' TO PPS-ADDITIONAL-VARIABLES\n235400        MOVE 52 TO PPS-RTC\n235500        GOBACK.\n235600",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "235700     IF (P-NEW-CBSA-WI-SPECIAL AND\n\n235800         P-NEW-CBSA-SPEC-WI-N = ZEROES)\n235900        MOVE ALL '0' TO PPS-ADDITIONAL-VARIABLES\n236000        MOVE 52 TO PPS-RTC\n236100        GOBACK.\n236200",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "236300     IF (P-NEW-CBSA-WI-SPECIAL AND\n\n236400        (P-NEW-EFF-DATE < W-FY-BEGIN-DATE OR\n236500         P-NEW-EFF-DATE > W-FY-END-DATE))\n236600        MOVE ALL '0' TO PPS-ADDITIONAL-VARIABLES",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "237000     IF P-NEW-CBSA-WI-SPECIAL\n\n237100        MOVE 'SPEC*'            TO W-NEW-CBSA-X\n237200        MOVE P-NEW-EFF-DATE     TO W-NEW-CBSA-EFF-DATE\n237300        MOVE P-NEW-CBSA-SPEC-WI TO W-NEW-CBSA-WI",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "238200     IF B-21-DISCHARGE-DATE > 20040930 AND\n\n238300        B-21-DISCHARGE-DATE < 20050401\n238400          PERFORM 2700-2005-WI-401-HOSPITAL THRU 2700-2005-EXIT.\n238500",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "238600     IF B-21-DISCHARGE-DATE > 20050331 AND\n\n238700        B-21-DISCHARGE-DATE < 20051001\n238800          PERFORM 2750-2005-WI-401-HOSPITAL THRU 2750-2005-EXIT.\n238900\n239000     IF B-21-DISCHARGE-DATE > 20040930 AND\n239100        B-21-DISCHARGE-DATE < 20051001",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "239000     IF B-21-DISCHARGE-DATE > 20040930 AND\n\n239100        B-21-DISCHARGE-DATE < 20051001\n239200        PERFORM 2300-2005-FLOOR-CBSA THRU 2300-2005-EXIT.\n239300\n239400**2006***********************************************************\n239500",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "239600     IF B-21-DISCHARGE-DATE > 20050930 AND\n\n239700        B-21-DISCHARGE-DATE < 20061001\n239800          PERFORM 2800-2006-WI-401-HOSPITAL THRU 2800-2006-EXIT.\n239900",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "240000     IF B-21-DISCHARGE-DATE > 20050930 AND\n\n240100        B-21-DISCHARGE-DATE < 20061001\n240200        PERFORM 2300-2006-FLOOR-CBSA THRU 2300-2006-EXIT.\n240300\n240400**2007***********************************************************\n240500",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "240600     IF B-21-DISCHARGE-DATE > 20060930 AND\n\n240700        B-21-DISCHARGE-DATE < 20071001\n240800          PERFORM 2800-2007-WI-401-HOSPITAL THRU 2800-2007-EXIT.\n240900\n241000     IF B-21-DISCHARGE-DATE > 20060930 AND\n241100        B-21-DISCHARGE-DATE < 20071001\n241200        PERFORM 2300-2007-FLOOR-CBSA THRU 2300-2007-EXIT.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "241000     IF B-21-DISCHARGE-DATE > 20060930 AND\n\n241100        B-21-DISCHARGE-DATE < 20071001",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "241700     IF B-21-DISCHARGE-DATE > 20070930 AND\n\n241800        B-21-DISCHARGE-DATE < 20081001",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "242100     IF B-21-DISCHARGE-DATE > 20070930 AND\n\n242200        B-21-DISCHARGE-DATE < 20081001",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "242800     IF B-21-DISCHARGE-DATE > 20080930 AND\n\n242900        B-21-DISCHARGE-DATE < 20091001\n243000          PERFORM 2800-2009-WI-401-HOSPITAL THRU 2800-2009-EXIT.\n243100\n243200     IF B-21-DISCHARGE-DATE > 20080930 AND\n243300        B-21-DISCHARGE-DATE < 20091001\n243400        PERFORM 2300-2009-FLOOR-CBSA THRU 2300-2009-EXIT.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "243200     IF B-21-DISCHARGE-DATE > 20080930 AND\n\n243300        B-21-DISCHARGE-DATE < 20091001\n243400        PERFORM 2300-2009-FLOOR-CBSA THRU 2300-2009-EXIT.\n243500\n243600*****************************************************************\n243700**2010***********************************************************\n243800",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "243900     IF B-21-DISCHARGE-DATE > 20090930 AND\n\n244000        B-21-DISCHARGE-DATE < 20101001\n244100          PERFORM 2800-2010-WI-401-HOSPITAL THRU 2800-2010-EXIT.\n244200",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "244300     IF B-21-DISCHARGE-DATE > 20090930 AND\n\n244400        B-21-DISCHARGE-DATE < 20101001\n244500        PERFORM 2300-2010-FLOOR-CBSA THRU 2300-2010-EXIT.\n244600",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "245000     IF B-21-DISCHARGE-DATE > 20100930 AND\n\n245100        B-21-DISCHARGE-DATE < 20111001\n245200          PERFORM 2800-2011-WI-401-HOSPITAL THRU 2800-2011-EXIT.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "245400     IF B-21-DISCHARGE-DATE > 20100930 AND\n\n245500        B-21-DISCHARGE-DATE < 20111001\n245600        PERFORM 2300-2011-FLOOR-CBSA THRU 2300-2011-EXIT.\n245700\n245800**2012***********************************************************\n245900",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "246000     IF B-21-DISCHARGE-DATE > 20110930 AND\n\n246100        B-21-DISCHARGE-DATE < 20121001\n246200          PERFORM 2800-2012-WI-401-HOSPITAL THRU 2800-2012-EXIT.\n246300\n246400     IF B-21-DISCHARGE-DATE > 20110930 AND",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "246400     IF B-21-DISCHARGE-DATE > 20110930 AND\n\n246500        B-21-DISCHARGE-DATE < 20121001\n246600        PERFORM 2300-2012-FLOOR-CBSA THRU 2300-2012-EXIT.\n246700\n246800*****************************************************************\n246900**2013***********************************************************",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "247100     IF B-21-DISCHARGE-DATE > 20120930 AND\n\n247200        B-21-DISCHARGE-DATE < 20131001",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "247500     IF B-21-DISCHARGE-DATE > 20120930 AND\n\n247600        B-21-DISCHARGE-DATE < 20131001\n247700        PERFORM 2300-2013-FLOOR-CBSA THRU 2300-2013-EXIT.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "248100     IF B-21-DISCHARGE-DATE > 20130930 AND\n\n248200        B-21-DISCHARGE-DATE < 20141001\n248300          PERFORM 2800-2014-WI-401-HOSPITAL THRU 2800-2014-EXIT.\n248400\n248500     IF B-21-DISCHARGE-DATE > 20130930 AND",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "248500     IF B-21-DISCHARGE-DATE > 20130930 AND\n\n248600        B-21-DISCHARGE-DATE < 20141001",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "250500     IF PPS-RTC = 52 GOBACK.\n\n250600\n250700**----------------------------------------------------------------",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "251000     IF PPS-RTC = 00\n\n251100        PERFORM 0650-N-GET-CBSA-WAGE-INDX\n251200         THRU   0650-N-EXIT VARYING MA2\n251300                FROM MA1 BY 1 UNTIL\n251400                T-CBSA (MA2) NOT = HOLD-PROV-CBSA.\n251500",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "251900     IF B-21-DISCHARGE-DATE > 20140930\n\n252000          PERFORM 2300-2015-FWD-FLOOR-CBSA\n252100             THRU 2300-2015-EXIT.\n252200\n252300**----------------------------------------------------------------",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "252700     IF OUTM-IND = 1\n\n252800        COMPUTE W-NEW-CBSA-WI = W-NEW-CBSA-WI + HLD-OUTM-ADJ.\n252900\n253000**----------------------------------------------------------------\n253100** FOR FYS 2020 THROUGH 2023, APPLY THE WAGE INDEX BOOST",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "253400     IF B-21-DISCHARGE-DATE > 20200930\n\n253500        IF W-NEW-CBSA-WI < WI_QUARTILE_FY2021\n253600           COMPUTE W-NEW-CBSA-WI ROUNDED =",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "253500        IF W-NEW-CBSA-WI < WI_QUARTILE_FY2021\n\n253600           COMPUTE W-NEW-CBSA-WI ROUNDED =\n253700             ((WI_QUARTILE_FY2021 - W-NEW-CBSA-WI) / 2)\n253800             + W-NEW-CBSA-WI.\n253900",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "254000     IF B-21-DISCHARGE-DATE > 20190930 AND\n\n254100        B-21-DISCHARGE-DATE < 20201001\n254200        IF W-NEW-CBSA-WI < WI_QUARTILE_FY2020\n254300           COMPUTE W-NEW-CBSA-WI ROUNDED =\n254400             ((WI_QUARTILE_FY2020 - W-NEW-CBSA-WI) / 2)\n254500             + W-NEW-CBSA-WI.\n254600",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "254200        IF W-NEW-CBSA-WI < WI_QUARTILE_FY2020\n\n254300           COMPUTE W-NEW-CBSA-WI ROUNDED =\n254400             ((WI_QUARTILE_FY2020 - W-NEW-CBSA-WI) / 2)\n254500             + W-NEW-CBSA-WI.\n254600\n254700**----------------------------------------------------------------",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "255100     IF B-21-DISCHARGE-DATE > 20200930\n\n255200        IF P-NEW-IND-PRIOR-YEAR AND P-NEW-SUPP-WI > 0\n255300           MOVE P-NEW-SUPP-WI TO HLD-PREV-WI",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "255200        IF P-NEW-IND-PRIOR-YEAR AND P-NEW-SUPP-WI > 0\n\n255300           MOVE P-NEW-SUPP-WI TO HLD-PREV-WI\n255400        ELSE",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "255800     IF B-21-DISCHARGE-DATE > 20190930 AND\n\n255900        B-21-DISCHARGE-DATE < 20201001",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "256200     IF B-21-DISCHARGE-DATE > 20190930\n\n256300        IF (((W-NEW-CBSA-WI - HLD-PREV-WI) / HLD-PREV-WI)",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "256300        IF (((W-NEW-CBSA-WI - HLD-PREV-WI) / HLD-PREV-WI)\n\n256400              < WI_PCT_REDUC_FY2020)\n256500           COMPUTE W-NEW-CBSA-WI ROUNDED =\n256600              HLD-PREV-WI * WI_PCT_ADJ_FY2020.\n256700",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "257300     IF P-N-INDIAN-HEALTH-SERVICE\n\n257400        MOVE 00 TO PPS-RTC\n257500        PERFORM 0850-N-GET-CBSA-INDIAN-WI THRU 0850-EXIT.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "257800     IF PPS-RTC = 52 GOBACK.\n\n257900\n258000     IF W-NEW-CBSA-WI NOT NUMERIC\n258100        MOVE 0 TO W-NEW-CBSA-WI.\n258200\n258300     IF W-NEW-CBSA-WI = 00.0000",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "258000     IF W-NEW-CBSA-WI NOT NUMERIC\n\n258100        MOVE 0 TO W-NEW-CBSA-WI.\n258200\n258300     IF W-NEW-CBSA-WI = 00.0000\n258400        MOVE ALL '0' TO PPS-ADDITIONAL-VARIABLES",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "258300     IF W-NEW-CBSA-WI = 00.0000\n\n258400        MOVE ALL '0' TO PPS-ADDITIONAL-VARIABLES",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "259600     IF PPS-RTC = 52 GOBACK.\n\n259700\n259800     IF PPS-RTC = 00\n259900        PERFORM 0750-GET-CBSA-SIZE\n260000           THRU 0750-EXIT VARYING MA2",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "259800     IF PPS-RTC = 00\n\n259900        PERFORM 0750-GET-CBSA-SIZE\n260000           THRU 0750-EXIT VARYING MA2",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "260800     IF P-PR-NEW-STATE AND B-21-DISCHARGE-DATE < 20161001\n\n260900        PERFORM 0250-N-GET-CBSA-PR THRU 0250-EXIT.\n261000\n261100**----------------------------------------------------------------\n261200** FOR FYS 2015 AND AFTER, APPLY THE RURAL FLOOR POLICY TO THE",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "261500     IF P-PR-NEW-STATE AND B-21-DISCHARGE-DATE > 20140930\n\n261600                       AND B-21-DISCHARGE-DATE < 20161001\n261700        PERFORM 2350-2015-FWD-FLOOR-CBSA-PR\n261800           THRU 2350-2015-EXIT.\n261900\n262000***  RTC = 52  --  WAGE-INDEX NOT FOUND",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "262100     IF PPS-RTC = 52 GOBACK.\n\n262200\n262300     IF P-PR-NEW-STATE AND B-21-DISCHARGE-DATE > 20160930\n262400        GO TO 0550-EXIT.\n262500",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "262300     IF P-PR-NEW-STATE AND B-21-DISCHARGE-DATE > 20160930\n\n262400        GO TO 0550-EXIT.\n262500\n262600     IF P-PR-NEW-STATE AND",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "262600     IF P-PR-NEW-STATE AND\n\n262700        W-NEW-CBSA-PR-WI NOT NUMERIC\n262800        MOVE 0 TO W-NEW-CBSA-PR-WI.\n262900\n263000     IF P-PR-NEW-STATE AND\n263100        W-NEW-CBSA-PR-WI = 00.0000",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "263000     IF P-PR-NEW-STATE AND\n\n263100        W-NEW-CBSA-PR-WI = 00.0000\n263200        MOVE ALL '0' TO PPS-ADDITIONAL-VARIABLES\n263300        MOVE 52 TO PPS-RTC\n263400        GOBACK.\n263500",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "264000     IF  B-21-DISCHARGE-DATE NOT < M-MSAX-EFF-DATE (MU2)\n\n264100         MOVE M-MSAX-MSA        (MU2) TO W-NEW-MSA\n264200         MOVE M-MSAX-EFF-DATE   (MU2) TO W-NEW-EFF-DATE",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "264400         IF P-NEW-CHG-CODE-INDEX  = 'Y'\n\n264500            MOVE M-MSAX-WAGE-INDX2 (MU2) TO W-NEW-INDEX-RECORD.\n264600\n264700 0600-N-EXIT.  EXIT.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "265100     IF  B-21-DISCHARGE-DATE NOT < T-CBSA-EFF-DATE (MA2)\n\n265200       IF (HOLD-PROV-CBSA = '   98'  OR",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "265200       IF (HOLD-PROV-CBSA = '   98'  OR\n\n265300           HOLD-PROV-CBSA = '   99') OR\n265400          (T-CBSA-EFF-DATE (MA2) >= W-FY-BEGIN-DATE AND\n265500           T-CBSA-EFF-DATE (MA2) <= W-FY-END-DATE)\n265600         MOVE T-CBSA            (MA2) TO W-NEW-CBSA-X\n265700         MOVE T-CBSA-EFF-DATE   (MA2) TO W-NEW-CBSA-EFF-DATE\n265800         MOVE T-CBSA-WAGE-INDX1 (MA2) TO W-NEW-CBSA-WI",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "265900         IF P-NEW-CBSA-WI-RECLASS\n\n266000            MOVE T-CBSA-WAGE-INDX2 (MA2) TO W-NEW-CBSA-WI.\n266100",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "266600     IF B-21-DISCHARGE-DATE NOT < T-CBSA-EFF-DATE (MA2) AND\n\n266700        T-CBSA-EFF-DATE (MA2) >= W-FY-BEGIN-DATE AND\n266800        T-CBSA-EFF-DATE (MA2) <= W-FY-END-DATE\n266900        MOVE T-CBSA            (MA2) TO W-RURAL-CBSA-X\n267000        MOVE T-CBSA-EFF-DATE   (MA2) TO W-RURAL-CBSA-EFF-DATE",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "267700     IF B-21-DISCHARGE-DATE NOT < T-CBSA-EFF-DATE (MA2) AND\n\n267800        T-CBSA-EFF-DATE (MA2) >= W-FY-BEGIN-DATE AND\n267900        T-CBSA-EFF-DATE (MA2) <= W-FY-END-DATE",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "268800     IF  B-21-DISCHARGE-DATE NOT < RUFL-EFF-DATE (RUFL-IDX2) AND\n\n268900         RUFL-EFF-DATE (RUFL-IDX2) >= W-FY-BEGIN-DATE AND\n269000         RUFL-EFF-DATE (RUFL-IDX2) <= W-FY-END-DATE\n269100         MOVE RUFL-CBSA      (RUFL-IDX2)  TO W-RURAL-CBSA-X\n269200         MOVE RUFL-EFF-DATE  (RUFL-IDX2)  TO W-RURAL-CBSA-EFF-DATE\n269300         MOVE RUFL-WI3       (RUFL-IDX2)  TO W-RURAL-CBSA-WI.\n269400",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "269900     IF  B-21-DISCHARGE-DATE NOT < M-MSAX-EFF-DATE (MU2)\n\n270000         IF  P-NEW-STD-RURAL-CHECK\n270100             MOVE 'R' TO W-NEW-SIZE\n270200         ELSE\n270300         IF  M-MSAX-SIZE (MU2) = 'L'",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "270000         IF  P-NEW-STD-RURAL-CHECK\n\n270100             MOVE 'R' TO W-NEW-SIZE\n270200         ELSE\n270300         IF  M-MSAX-SIZE (MU2) = 'L'",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "270300         IF  M-MSAX-SIZE (MU2) = 'L'\n\n270400             MOVE 'L' TO W-NEW-SIZE\n270500         ELSE\n270600             MOVE 'O' TO W-NEW-SIZE.\n270700 0700-N-EXIT.  EXIT.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "271100     IF  B-21-DISCHARGE-DATE NOT < T-CBSA-EFF-DATE (MA2)\n\n271200         IF  P-NEW-CBSA-STD-RURAL-CHECK\n271300             MOVE 'R' TO W-NEW-CBSA-SIZE\n271400         ELSE\n271500         IF  T-CBSA-SIZE (MA2) = 'L'\n271600             MOVE 'L' TO W-NEW-CBSA-SIZE\n271700         ELSE",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "271200         IF  P-NEW-CBSA-STD-RURAL-CHECK\n\n271300             MOVE 'R' TO W-NEW-CBSA-SIZE\n271400         ELSE",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "271500         IF  T-CBSA-SIZE (MA2) = 'L'\n\n271600             MOVE 'L' TO W-NEW-CBSA-SIZE",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "272200     IF  P-NEW-STATE = 02\n\n272300             MOVE 98 TO H-MSAX-PROV-STATE\n272400     ELSE\n272500             MOVE 99 TO H-MSAX-PROV-STATE.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "273100     IF PPS-RTC = 00\n\n273200        PERFORM 0600-N-GET-WAGE-INDX\n273300            THRU 0600-N-EXIT VARYING MU2\n273400            FROM MU1 BY 1 UNTIL\n273500            M-MSAX-MSA (MU2) NOT = HOLD-PROV-MSAX.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "274000     IF  P-NEW-STATE-CODE-X = 02\n\n274100             MOVE 98 TO H-CBSA-PROV-STATE\n274200     ELSE",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "274900     IF PPS-RTC = 00\n\n275000        PERFORM 0650-N-GET-CBSA-WAGE-INDX\n275100            THRU 0650-N-EXIT VARYING MA2",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "277100     IF OUTM-EFF-DATE(OUTM-IDX2) <= B-21-DISCHARGE-DATE AND\n\n277200        OUTM-EFF-DATE(OUTM-IDX2) >= W-FY-BEGIN-DATE AND",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "279500        IF HOLD-PROV-MSAX = '6020'\n\n279600           AND P-NEW-STATE = 36\n279700               MOVE '  36' TO HOLD-PROV-MSAX.\n279800\n279900        IF HOLD-PROV-MSAX = '9000'\n280000           AND P-NEW-STATE = 36\n280100                MOVE '  36' TO HOLD-PROV-MSAX.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "279900        IF HOLD-PROV-MSAX = '9000'\n\n280000           AND P-NEW-STATE = 36\n280100                MOVE '  36' TO HOLD-PROV-MSAX.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "280700        IF HOLD-PROV-MSAX = '6020'\n\n280800           AND P-NEW-STATE = 36\n280900               MOVE '  36' TO HOLD-PROV-MSAX.\n281000",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "281100        IF HOLD-PROV-MSAX = '9000'\n\n281200           AND P-NEW-STATE = 36\n281300                MOVE '  36' TO HOLD-PROV-MSAX.\n281400\n281500        IF HOLD-PROV-MSAX = '8080'",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "281500        IF HOLD-PROV-MSAX = '8080'\n\n281600           AND P-NEW-STATE = 36\n281700               MOVE '  36' TO HOLD-PROV-MSAX.\n281800\n281900        IF HOLD-PROV-MSAX = '1900'",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "281900        IF HOLD-PROV-MSAX = '1900'\n\n282000           AND P-NEW-STATE = 21\n282100               MOVE '  21' TO HOLD-PROV-MSAX.\n282200\n282300        IF HOLD-PROV-MSAX = '6340'\n282400           AND P-NEW-CHG-CODE-INDEX = 'Y'\n282500           AND P-NEW-STATE = 53",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "282300        IF HOLD-PROV-MSAX = '6340'\n\n282400           AND P-NEW-CHG-CODE-INDEX = 'Y'\n282500           AND P-NEW-STATE = 53\n282600               MOVE '  53' TO HOLD-PROV-MSAX.\n282700\n282800 2300-1999-EXIT. EXIT.\n282900",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "283200        IF HOLD-PROV-MSAX = '6020'\n\n283300           AND P-NEW-STATE = 36\n283400               MOVE '  36' TO HOLD-PROV-MSAX.\n283500\n283600        IF HOLD-PROV-MSAX = '9000'",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "283600        IF HOLD-PROV-MSAX = '9000'\n\n283700           AND P-NEW-STATE = 36",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "284000        IF HOLD-PROV-MSAX = '8080'\n\n284100           AND P-NEW-STATE = 36\n284200               MOVE '  36' TO HOLD-PROV-MSAX.\n284300",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "284400        IF HOLD-PROV-MSAX = '2440'\n\n284500           AND P-NEW-STATE = 15",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "284800        IF HOLD-PROV-MSAX = '2520'\n\n284900           AND P-NEW-CHG-CODE-INDEX = 'Y'",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "285300        IF HOLD-PROV-MSAX = '1123'\n\n285400           AND P-NEW-STATE = 22\n285500               MOVE '  22' TO HOLD-PROV-MSAX.\n285600",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "286100        IF HOLD-PROV-MSAX = '1900'\n\n286200           AND P-NEW-STATE = 21\n286300               MOVE '  21' TO HOLD-PROV-MSAX.\n286400\n286500        IF HOLD-PROV-MSAX = '6020'\n286600           AND P-NEW-STATE = 36\n286700               MOVE '  36' TO HOLD-PROV-MSAX.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "286500        IF HOLD-PROV-MSAX = '6020'\n\n286600           AND P-NEW-STATE = 36\n286700               MOVE '  36' TO HOLD-PROV-MSAX.\n286800\n286900        IF HOLD-PROV-MSAX = '8080'\n287000           AND P-NEW-STATE = 36\n287100               MOVE '  36' TO HOLD-PROV-MSAX.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "286900        IF HOLD-PROV-MSAX = '8080'\n\n287000           AND P-NEW-STATE = 36\n287100               MOVE '  36' TO HOLD-PROV-MSAX.\n287200\n287300        IF HOLD-PROV-MSAX = '1123'\n287400           AND P-NEW-STATE = 22\n287500               MOVE '  22' TO HOLD-PROV-MSAX.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "287300        IF HOLD-PROV-MSAX = '1123'\n\n287400           AND P-NEW-STATE = 22\n287500               MOVE '  22' TO HOLD-PROV-MSAX.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "287700        IF HOLD-PROV-MSAX = '2440'\n\n287800           AND P-NEW-STATE = 15",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "288100        IF HOLD-PROV-MSAX = '9000'\n\n288200           AND P-NEW-STATE = 36\n288300                MOVE '  36' TO HOLD-PROV-MSAX.\n288400",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "288500        IF HOLD-PROV-MSAX = '9000'\n\n288600           AND P-NEW-STATE = 51\n288700                MOVE '  51' TO HOLD-PROV-MSAX.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "289300        IF HOLD-PROV-MSAX = '1123'\n\n289400           AND P-NEW-STATE = 22\n289500               MOVE '  22' TO HOLD-PROV-MSAX.\n289600\n289700        IF HOLD-PROV-MSAX = '1900'\n289800           AND P-NEW-STATE = 21",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "289700        IF HOLD-PROV-MSAX = '1900'\n\n289800           AND P-NEW-STATE = 21\n289900               MOVE '  21' TO HOLD-PROV-MSAX.\n290000\n290100        IF HOLD-PROV-MSAX = '2440'",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "290100        IF HOLD-PROV-MSAX = '2440'\n\n290200           AND P-NEW-STATE = 15\n290300               MOVE '  15' TO HOLD-PROV-MSAX.\n290400\n290500        IF HOLD-PROV-MSAX = '6020'\n290600           AND P-NEW-STATE = 36",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "290500        IF HOLD-PROV-MSAX = '6020'\n\n290600           AND P-NEW-STATE = 36",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "290900        IF HOLD-PROV-MSAX = '8080'\n\n291000           AND P-NEW-STATE = 36\n291100               MOVE '  36' TO HOLD-PROV-MSAX.\n291200\n291300        IF HOLD-PROV-MSAX = '9000'\n291400           AND P-NEW-STATE = 36\n291500                MOVE '  36' TO HOLD-PROV-MSAX.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "291300        IF HOLD-PROV-MSAX = '9000'\n\n291400           AND P-NEW-STATE = 36\n291500                MOVE '  36' TO HOLD-PROV-MSAX.\n291600\n291700        IF HOLD-PROV-MSAX = '1303'\n291800           AND P-NEW-CHG-CODE-INDEX = 'Y'",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "291700        IF HOLD-PROV-MSAX = '1303'\n\n291800           AND P-NEW-CHG-CODE-INDEX = 'Y'\n291900           AND P-NEW-STATE = 47\n292000               MOVE 'N' TO P-NEW-CHG-CODE-INDEX\n292100               MOVE '  47' TO HOLD-PROV-MSAX.\n292200\n292300        IF HOLD-PROV-MSAX = '  14'",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "292300        IF HOLD-PROV-MSAX = '  14'\n\n292400           AND P-NEW-CHG-CODE-INDEX = 'Y'\n292500           AND P-NEW-STATE = 16",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "293300        IF HOLD-PROV-MSAX = '  14'\n\n293400           AND P-NEW-CHG-CODE-INDEX = 'Y'\n293500           AND P-NEW-STATE = 16\n293600               MOVE 'N' TO P-NEW-CHG-CODE-INDEX",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "293900        IF HOLD-PROV-MSAX = '1123'\n\n294000           AND P-NEW-STATE = 22\n294100               MOVE '  22' TO HOLD-PROV-MSAX.\n294200\n294300        IF HOLD-PROV-MSAX = '1800'",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "294300        IF HOLD-PROV-MSAX = '1800'\n\n294400           AND P-NEW-CHG-CODE-INDEX = 'Y'\n294500           AND P-NEW-STATE = 11",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "294900        IF HOLD-PROV-MSAX = '1900'\n\n295000           AND P-NEW-STATE = 21\n295100               MOVE '  21' TO HOLD-PROV-MSAX.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "295300        IF HOLD-PROV-MSAX = '2440'\n\n295400           AND P-NEW-STATE = 15\n295500               MOVE '  15' TO HOLD-PROV-MSAX.\n295600\n295700        IF HOLD-PROV-MSAX = '3660'\n295800           AND P-NEW-CHG-CODE-INDEX = 'Y'\n295900           AND P-NEW-STATE = 49",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "295700        IF HOLD-PROV-MSAX = '3660'\n\n295800           AND P-NEW-CHG-CODE-INDEX = 'Y'\n295900           AND P-NEW-STATE = 49\n296000               MOVE 'N' TO P-NEW-CHG-CODE-INDEX\n296100               MOVE '  49' TO HOLD-PROV-MSAX.\n296200",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "296300        IF HOLD-PROV-MSAX = '3660'\n\n296400           AND P-NEW-STATE = 49\n296500               MOVE '  49' TO HOLD-PROV-MSAX.\n296600\n296700        IF HOLD-PROV-MSAX = '3700'",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "296700        IF HOLD-PROV-MSAX = '3700'\n\n296800           AND P-NEW-CHG-CODE-INDEX = 'Y'\n296900           AND P-NEW-STATE = 26\n297000               MOVE 'N' TO P-NEW-CHG-CODE-INDEX\n297100               MOVE '  26' TO HOLD-PROV-MSAX.\n297200",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "297300        IF HOLD-PROV-MSAX = '6020'\n\n297400           AND P-NEW-STATE = 36",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "297700        IF HOLD-PROV-MSAX = '9000'\n\n297800           AND P-NEW-STATE = 36\n297900                MOVE '  36' TO HOLD-PROV-MSAX.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "298500        IF HOLD-PROV-MSAX = '  14'\n\n298600           AND P-NEW-CHG-CODE-INDEX = 'Y'\n298700           AND P-NEW-STATE = 16\n298800               MOVE 'N' TO P-NEW-CHG-CODE-INDEX\n298900               MOVE '  16' TO HOLD-PROV-MSAX.\n299000\n299100        IF HOLD-PROV-MSAX = '0200'",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "299100        IF HOLD-PROV-MSAX = '0200'\n\n299200           AND P-NEW-CHG-CODE-INDEX = 'Y'\n299300           AND P-NEW-STATE = 06\n299400               MOVE 'N' TO P-NEW-CHG-CODE-INDEX\n299500               MOVE '  06' TO HOLD-PROV-MSAX.\n299600\n299700        IF HOLD-PROV-MSAX = '1480'",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "299700        IF HOLD-PROV-MSAX = '1480'\n\n299800           AND P-NEW-CHG-CODE-INDEX = 'Y'\n299900           AND P-NEW-STATE = 36\n300000               MOVE 'N' TO P-NEW-CHG-CODE-INDEX\n300100               MOVE '  36' TO HOLD-PROV-MSAX.\n300200\n300300        IF HOLD-PROV-MSAX = '1900'",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "300300        IF HOLD-PROV-MSAX = '1900'\n\n300400           AND P-NEW-STATE = 21\n300500               MOVE '  21' TO HOLD-PROV-MSAX.\n300600\n300700        IF HOLD-PROV-MSAX = '2440'\n300800           AND P-NEW-STATE = 15",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "300700        IF HOLD-PROV-MSAX = '2440'\n\n300800           AND P-NEW-STATE = 15\n300900               MOVE '  15' TO HOLD-PROV-MSAX.\n301000",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "301100        IF HOLD-PROV-MSAX = '2985'\n\n301200           AND P-NEW-STATE = 24",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "301500        IF HOLD-PROV-MSAX = '3660'\n\n301600           AND P-NEW-CHG-CODE-INDEX = 'Y'\n301700           AND P-NEW-STATE = 49\n301800               MOVE 'N' TO P-NEW-CHG-CODE-INDEX\n301900               MOVE '  49' TO HOLD-PROV-MSAX.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "302100        IF HOLD-PROV-MSAX = '3660'\n\n302200           AND P-NEW-STATE = 49\n302300               MOVE '  49' TO HOLD-PROV-MSAX.\n302400\n302500        IF HOLD-PROV-MSAX = '3700'\n302600           AND P-NEW-CHG-CODE-INDEX = 'Y'\n302700           AND P-NEW-STATE = 26",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "302500        IF HOLD-PROV-MSAX = '3700'\n\n302600           AND P-NEW-CHG-CODE-INDEX = 'Y'\n302700           AND P-NEW-STATE = 26\n302800               MOVE 'N' TO P-NEW-CHG-CODE-INDEX\n302900               MOVE '  26' TO HOLD-PROV-MSAX.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "303100        IF HOLD-PROV-MSAX = '6020'\n\n303200           AND P-NEW-STATE = 36\n303300               MOVE '  36' TO HOLD-PROV-MSAX.\n303400\n303500        IF HOLD-PROV-MSAX = '6740'",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "303500        IF HOLD-PROV-MSAX = '6740'\n\n303600           AND P-NEW-CHG-CODE-INDEX = 'Y'\n303700           AND P-NEW-STATE = 50\n303800               MOVE 'N' TO P-NEW-CHG-CODE-INDEX",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "304100        IF HOLD-PROV-MSAX = '7720'\n\n304200           AND P-NEW-CHG-CODE-INDEX = 'Y'\n304300           AND P-NEW-STATE = 28\n304400               MOVE 'N' TO P-NEW-CHG-CODE-INDEX\n304500               MOVE '  28' TO HOLD-PROV-MSAX.\n304600\n304700        IF HOLD-PROV-MSAX = '8080'",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "304700        IF HOLD-PROV-MSAX = '8080'\n\n304800           AND P-NEW-STATE = 36\n304900                MOVE '  36' TO HOLD-PROV-MSAX.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "305100        IF HOLD-PROV-MSAX = '9000'\n\n305200           AND P-NEW-STATE = 36\n305300                MOVE '  36' TO HOLD-PROV-MSAX.\n305400",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "305800       IF (P-NEW-PROVIDER-NO = '330001' OR '330126' OR\n\n305900                               '330135' OR '330205' OR\n306000                               '330209' OR '330264')\n306100          AND (P-NEW-WAGE-INDEX-LOC-MSA = '5600'\n306200          AND  P-NEW-CHG-CODE-INDEX = 'Y')\n306300               MOVE 1.3892 TO W-NEW-INDEX-RECORD.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "306500       IF (P-NEW-PROVIDER-NO = '470003')\n\n306600          AND (P-NEW-WAGE-INDEX-LOC-MSA = '1123'\n306700          AND  P-NEW-CHG-CODE-INDEX = 'Y')\n306800               MOVE 1.1120 TO W-NEW-INDEX-RECORD.\n306900\n307000 2300-2004-RECLASS-EXIT. EXIT.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "307400        IF HOLD-PROV-CBSA = '10900'\n\n307500           AND P-NEW-STATE = 31\n307600               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n307700               MOVE '   31' TO HOLD-PROV-CBSA.\n307800\n307900        IF HOLD-PROV-CBSA = '16620'\n308000           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "307900        IF HOLD-PROV-CBSA = '16620'\n\n308000           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n308100           AND P-NEW-STATE = 36\n308200               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "308500        IF HOLD-PROV-CBSA = '19060'\n\n308600           AND P-NEW-STATE = 21\n308700               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "309000        IF HOLD-PROV-CBSA = '21780'\n\n309100           AND P-NEW-STATE = 15",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "309500        IF HOLD-PROV-CBSA = '22020'\n\n309600           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n309700           AND P-NEW-STATE = 24\n309800               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n309900               MOVE '   24' TO HOLD-PROV-CBSA.\n310000",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "310100        IF HOLD-PROV-CBSA = '22020'\n\n310200           AND P-NEW-STATE = 24\n310300               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n310400               MOVE '   24' TO HOLD-PROV-CBSA.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "310600        IF HOLD-PROV-CBSA = '24220'\n\n310700           AND P-NEW-STATE = 24\n310800               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n310900               MOVE '   24' TO HOLD-PROV-CBSA.\n311000\n311100        IF HOLD-PROV-CBSA = '25540'\n311200           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "311100        IF HOLD-PROV-CBSA = '25540'\n\n311200           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n311300           AND P-NEW-STATE = 07",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "311700        IF HOLD-PROV-CBSA = '29100'\n\n311800           AND P-NEW-STATE = 52\n311900               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n312000               MOVE '   52' TO HOLD-PROV-CBSA.\n312100\n312200        IF HOLD-PROV-CBSA = '30300'",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "312200        IF HOLD-PROV-CBSA = '30300'\n\n312300           AND P-NEW-STATE = 50\n312400               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n312500               MOVE '   50' TO HOLD-PROV-CBSA.\n312600\n312700        IF HOLD-PROV-CBSA = '37620'",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "312700        IF HOLD-PROV-CBSA = '37620'\n\n312800           AND P-NEW-STATE = 36\n312900               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n313000               MOVE '   36' TO HOLD-PROV-CBSA.\n313100\n313200        IF HOLD-PROV-CBSA = '48260'",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "313200        IF HOLD-PROV-CBSA = '48260'\n\n313300           AND P-NEW-STATE = 36\n313400               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "313700        IF HOLD-PROV-CBSA = '48540'\n\n313800           AND P-NEW-STATE = 36\n313900               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "314200        IF HOLD-PROV-CBSA = '48864'\n\n314300           AND P-NEW-STATE = 31",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "314700        IF HOLD-PROV-CBSA = '48864'\n\n314800           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n314900           AND P-NEW-STATE = 31\n315000               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n315100               MOVE '   31' TO HOLD-PROV-CBSA.\n315200",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "315300        IF B-21-DISCHARGE-DATE > 20041231\n\n315400           IF HOLD-PROV-CBSA = '39900'\n315500              AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n315600              AND P-NEW-STATE = 05",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "315400           IF HOLD-PROV-CBSA = '39900'\n\n315500              AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n315600              AND P-NEW-STATE = 05\n315700                  MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n315800                  MOVE '   05' TO HOLD-PROV-CBSA.\n315900",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "316000        IF B-21-DISCHARGE-DATE < 20050101\n\n316100           IF (HOLD-PROV-CBSA = '28420'\n316200               AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n316300               AND P-NEW-STATE = 50)\n316400                  MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "316100           IF (HOLD-PROV-CBSA = '28420'\n\n316200               AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n316300               AND P-NEW-STATE = 50)\n316400                  MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n316500                  MOVE '   50' TO HOLD-PROV-CBSA.\n316600",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "317200        IF HOLD-PROV-CBSA = '   10'\n\n317300           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n317400           AND P-NEW-STATE = 10\n317500               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "317800        IF HOLD-PROV-CBSA = '   50'\n\n317900           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "318400        IF HOLD-PROV-CBSA = '10900'\n\n318500           AND P-NEW-STATE = 31\n318600               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n318700               MOVE '   31' TO HOLD-PROV-CBSA.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "318900        IF HOLD-PROV-CBSA = '15764'\n\n319000           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n319100           AND P-NEW-STATE = 30\n319200               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n319300               MOVE '   30' TO HOLD-PROV-CBSA.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "319500        IF HOLD-PROV-CBSA = '16620'\n\n319600           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n319700           AND P-NEW-STATE = 36",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "320100        IF HOLD-PROV-CBSA = '19060'\n\n320200           AND P-NEW-STATE = 21\n320300               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n320400               MOVE '   21' TO HOLD-PROV-CBSA.\n320500",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "320600        IF HOLD-PROV-CBSA = '22020'\n\n320700           AND P-NEW-STATE = 24\n320800               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n320900               MOVE '   24' TO HOLD-PROV-CBSA.\n321000\n321100        IF HOLD-PROV-CBSA = '24220'",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "321100        IF HOLD-PROV-CBSA = '24220'\n\n321200           AND P-NEW-STATE = 24\n321300               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n321400               MOVE '   24' TO HOLD-PROV-CBSA.\n321500\n321600        IF HOLD-PROV-CBSA = '24580'\n321700           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "321600        IF HOLD-PROV-CBSA = '24580'\n\n321700           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "322200        IF HOLD-PROV-CBSA = '25540'\n\n322300           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n322400           AND P-NEW-STATE = 07\n322500               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n322600               MOVE '   07' TO HOLD-PROV-CBSA.\n322700",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "322800        IF HOLD-PROV-CBSA = '30300'\n\n322900           AND P-NEW-STATE = 50\n323000               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n323100               MOVE '   50' TO HOLD-PROV-CBSA.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "323300        IF HOLD-PROV-CBSA = '37620'\n\n323400           AND P-NEW-STATE = 36\n323500               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n323600               MOVE '   36' TO HOLD-PROV-CBSA.\n323700\n323800        IF HOLD-PROV-CBSA = '39900'",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "323800        IF HOLD-PROV-CBSA = '39900'\n\n323900           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "324400        IF HOLD-PROV-CBSA = '48260'\n\n324500           AND P-NEW-STATE = 36\n324600               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n324700               MOVE '   36' TO HOLD-PROV-CBSA.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "324900        IF HOLD-PROV-CBSA = '48540'\n\n325000           AND P-NEW-STATE = 36\n325100               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "325400        IF HOLD-PROV-CBSA = '48540'\n\n325500           AND P-NEW-STATE = 51\n325600               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n325700               MOVE '   51' TO HOLD-PROV-CBSA.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "325900        IF HOLD-PROV-CBSA = '48864'\n\n326000           AND P-NEW-STATE = 31",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "326400        IF HOLD-PROV-CBSA = '49660'\n\n326500           AND P-NEW-STATE = 36\n326600               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n326700               MOVE '   36' TO HOLD-PROV-CBSA.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "327300        IF HOLD-PROV-CBSA = '   10'\n\n327400           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n327500           AND P-NEW-STATE = 10\n327600               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n327700               MOVE '   10' TO HOLD-PROV-CBSA.\n327800\n327900        IF HOLD-PROV-CBSA = '   14'",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "327900        IF HOLD-PROV-CBSA = '   14'\n\n328000           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n328100           AND P-NEW-STATE = 14\n328200               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n328300               MOVE '   14' TO HOLD-PROV-CBSA.\n328400",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "328500        IF HOLD-PROV-CBSA = '   26'\n\n328600           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n328700           AND P-NEW-STATE = 26\n328800               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "329100        IF HOLD-PROV-CBSA = '   50'\n\n329200           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "329700        IF HOLD-PROV-CBSA = '10900'\n\n329800           AND P-NEW-STATE = 31\n329900               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "330200        IF HOLD-PROV-CBSA = '19060'\n\n330300           AND P-NEW-STATE = 21\n330400               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n330500               MOVE '   21' TO HOLD-PROV-CBSA.\n330600\n330700        IF HOLD-PROV-CBSA = '22020'",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "330700        IF HOLD-PROV-CBSA = '22020'\n\n330800           AND P-NEW-STATE = 24\n330900               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n331000               MOVE '   24' TO HOLD-PROV-CBSA.\n331100\n331200        IF HOLD-PROV-CBSA = '24220'\n331300           AND P-NEW-STATE = 24",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "331200        IF HOLD-PROV-CBSA = '24220'\n\n331300           AND P-NEW-STATE = 24\n331400               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "331700        IF HOLD-PROV-CBSA = '24580'\n\n331800           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n331900           AND P-NEW-STATE = 52\n332000               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n332100               MOVE '   52' TO HOLD-PROV-CBSA.\n332200",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "332300        IF HOLD-PROV-CBSA = '25540'\n\n332400           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n332500           AND P-NEW-STATE = 07",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "332900        IF HOLD-PROV-CBSA = '26580'\n\n333000           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n333100           AND P-NEW-STATE = 36\n333200               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "333500        IF B-21-DISCHARGE-DATE < 20061103\n\n333600           IF (HOLD-PROV-CBSA = '27860'\n333700               AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n333800               AND P-NEW-STATE = 26)",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "333600           IF (HOLD-PROV-CBSA = '27860'\n\n333700               AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n333800               AND P-NEW-STATE = 26)\n333900                   MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "334200        IF HOLD-PROV-CBSA = '29100'\n\n334300           AND P-NEW-STATE = 52\n334400               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n334500               MOVE '   52' TO HOLD-PROV-CBSA.\n334600",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "334700        IF HOLD-PROV-CBSA = '30300'\n\n334800           AND P-NEW-STATE = 50\n334900               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n335000               MOVE '   50' TO HOLD-PROV-CBSA.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "335200        IF HOLD-PROV-CBSA = '37620'\n\n335300           AND P-NEW-STATE = 36\n335400               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n335500               MOVE '   36' TO HOLD-PROV-CBSA.\n335600",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "335700        IF HOLD-PROV-CBSA = '37964'\n\n335800           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n335900           AND P-NEW-STATE = 31",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "336300        IF HOLD-PROV-CBSA = '38300'\n\n336400           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n336500           AND P-NEW-STATE = 36\n336600               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "336900        IF HOLD-PROV-CBSA = '39300'\n\n337000           AND P-NEW-STATE = 22\n337100               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n337200               MOVE '   22' TO HOLD-PROV-CBSA.\n337300\n337400        IF HOLD-PROV-CBSA = '39300'",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "337400        IF HOLD-PROV-CBSA = '39300'\n\n337500           AND P-NEW-STATE = 41\n337600               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n337700               MOVE '   41' TO HOLD-PROV-CBSA.\n337800\n337900        IF HOLD-PROV-CBSA = '45500'",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "337900        IF HOLD-PROV-CBSA = '45500'\n\n338000           AND P-NEW-STATE = 45\n338100               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n338200               MOVE '   45' TO HOLD-PROV-CBSA.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "338400        IF HOLD-PROV-CBSA = '48260'\n\n338500           AND P-NEW-STATE = 36\n338600               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n338700               MOVE '   36' TO HOLD-PROV-CBSA.\n338800\n338900        IF HOLD-PROV-CBSA = '48540'\n339000           AND P-NEW-STATE = 36",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "338900        IF HOLD-PROV-CBSA = '48540'\n\n339000           AND P-NEW-STATE = 36",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "339400        IF HOLD-PROV-CBSA = '48540'\n\n339500           AND P-NEW-STATE = 51\n339600               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n339700               MOVE '   51' TO HOLD-PROV-CBSA.\n339800",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "339900        IF HOLD-PROV-CBSA = '48864'\n\n340000           AND P-NEW-STATE = 31\n340100               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n340200               MOVE '   31' TO HOLD-PROV-CBSA.\n340300\n340400\n340500 2300-2007-EXIT. EXIT.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "340900        IF HOLD-PROV-CBSA = '   39'\n\n341000           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n341100           AND P-NEW-STATE = 33\n341200               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n341300               MOVE '   33' TO HOLD-PROV-CBSA.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "341500        IF HOLD-PROV-CBSA = '   39'\n\n341600           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n341700           AND P-NEW-STATE = 39\n341800               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n341900               MOVE '   39' TO HOLD-PROV-CBSA.\n342000",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "342100        IF HOLD-PROV-CBSA = '10900'\n\n342200           AND P-NEW-STATE = 31\n342300               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n342400               MOVE '   31' TO HOLD-PROV-CBSA.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "342600        IF HOLD-PROV-CBSA = '19060'\n\n342700           AND P-NEW-STATE = 21\n342800               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n342900               MOVE '   21' TO HOLD-PROV-CBSA.\n343000\n343100        IF HOLD-PROV-CBSA = '21780'",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "343100        IF HOLD-PROV-CBSA = '21780'\n\n343200           AND P-NEW-STATE = 15\n343300               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n343400               MOVE '   15' TO HOLD-PROV-CBSA.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "343600        IF HOLD-PROV-CBSA = '21780'\n\n343700           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n343800           AND P-NEW-STATE = 15\n343900               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n344000               MOVE '   15' TO HOLD-PROV-CBSA.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "344200        IF HOLD-PROV-CBSA = '22020'\n\n344300           AND P-NEW-STATE = 24\n344400               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n344500               MOVE '   24' TO HOLD-PROV-CBSA.\n344600\n344700        IF HOLD-PROV-CBSA = '24220'",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "344700        IF HOLD-PROV-CBSA = '24220'\n\n344800           AND P-NEW-STATE = 24\n344900               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n345000               MOVE '   24' TO HOLD-PROV-CBSA.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "345200        IF HOLD-PROV-CBSA = '24580'\n\n345300           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n345400           AND P-NEW-STATE = 52\n345500               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "345800        IF HOLD-PROV-CBSA = '25540'\n\n345900           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n346000           AND P-NEW-STATE = 07\n346100               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n346200               MOVE '   07' TO HOLD-PROV-CBSA.\n346300",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "346400        IF HOLD-PROV-CBSA = '28420'\n\n346500           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n346600           AND P-NEW-STATE = 50",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "347000        IF HOLD-PROV-CBSA = '28700'\n\n347100           AND P-NEW-STATE = 44\n347200               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n347300               MOVE '   44' TO HOLD-PROV-CBSA.\n347400\n347500        IF HOLD-PROV-CBSA = '28700'\n347600           AND P-NEW-STATE = 49",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "347500        IF HOLD-PROV-CBSA = '28700'\n\n347600           AND P-NEW-STATE = 49\n347700               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "348000        IF HOLD-PROV-CBSA = '30300'\n\n348100           AND P-NEW-STATE = 50\n348200               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "348500        IF HOLD-PROV-CBSA = '35084'\n\n348600           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n348700           AND P-NEW-STATE = 31\n348800               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n348900               MOVE '   31' TO HOLD-PROV-CBSA.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "349100        IF HOLD-PROV-CBSA = '37620'\n\n349200           AND P-NEW-STATE = 36",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "349600        IF HOLD-PROV-CBSA = '37964'\n\n349700           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n349800           AND P-NEW-STATE = 31\n349900               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "350200        IF HOLD-PROV-CBSA = '38300'\n\n350300           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n350400           AND P-NEW-STATE = 36\n350500               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n350600               MOVE '   36' TO HOLD-PROV-CBSA.\n350700\n350800        IF HOLD-PROV-CBSA = '45500'",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "350800        IF HOLD-PROV-CBSA = '45500'\n\n350900           AND P-NEW-STATE = 45",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "351300        IF HOLD-PROV-CBSA = '48260'\n\n351400           AND P-NEW-STATE = 36\n351500               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "351800        IF HOLD-PROV-CBSA = '48540'\n\n351900           AND P-NEW-STATE = 36\n352000               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n352100               MOVE '   36' TO HOLD-PROV-CBSA.\n352200",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "352300        IF HOLD-PROV-CBSA = '48540'\n\n352400           AND P-NEW-STATE = 51\n352500               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n352600               MOVE '   51' TO HOLD-PROV-CBSA.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "352800        IF HOLD-PROV-CBSA = '48864'\n\n352900           AND P-NEW-STATE = 31\n353000               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n353100               MOVE '   31' TO HOLD-PROV-CBSA.\n353200",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "353300        IF HOLD-PROV-CBSA = '48864'\n\n353400           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n353500           AND P-NEW-STATE = 31\n353600               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n353700               MOVE '   31' TO HOLD-PROV-CBSA.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "354600        IF HOLD-PROV-CBSA = '   04'\n\n354700           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n354800           AND P-NEW-STATE = 04\n354900               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n355000               MOVE '   04' TO HOLD-PROV-CBSA.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "355200        IF HOLD-PROV-CBSA = '   04'\n\n355300           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n355400           AND P-NEW-STATE = 19",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "355800        IF HOLD-PROV-CBSA = '   14'\n\n355900           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n356000           AND P-NEW-STATE = 14",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "356400        IF HOLD-PROV-CBSA = '   14'\n\n356500           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n356600           AND P-NEW-STATE = 26\n356700               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n356800               MOVE '   26' TO HOLD-PROV-CBSA.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "357000        IF HOLD-PROV-CBSA = '10900'\n\n357100           AND P-NEW-STATE = 31\n357200               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n357300               MOVE '   31' TO HOLD-PROV-CBSA.\n357400\n357500        IF HOLD-PROV-CBSA = '19340'",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "357500        IF HOLD-PROV-CBSA = '19340'\n\n357600           AND P-NEW-STATE = 16\n357700               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n357800               MOVE '   16' TO HOLD-PROV-CBSA.\n357900\n358000        IF HOLD-PROV-CBSA = '21780'",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "358000        IF HOLD-PROV-CBSA = '21780'\n\n358100           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "358600        IF HOLD-PROV-CBSA = '22020'\n\n358700           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n358800           AND P-NEW-STATE = 43\n358900               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n359000               MOVE '   43' TO HOLD-PROV-CBSA.\n359100",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "359200        IF HOLD-PROV-CBSA = '22900'\n\n359300           AND P-NEW-STATE = 37\n359400               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n359500               MOVE '   37' TO HOLD-PROV-CBSA.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "359700        IF HOLD-PROV-CBSA = '24580'\n\n359800           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n359900           AND P-NEW-STATE = 52",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "360300        IF HOLD-PROV-CBSA = '25540'\n\n360400           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n360500           AND P-NEW-STATE = 07\n360600               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "360900        IF HOLD-PROV-CBSA = '28420'\n\n361000           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n361100           AND P-NEW-STATE = 50",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "361500        IF HOLD-PROV-CBSA = '28700'\n\n361600           AND P-NEW-STATE = 44\n361700               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n361800               MOVE '   44' TO HOLD-PROV-CBSA.\n361900\n362000        IF HOLD-PROV-CBSA = '28700'",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "362000        IF HOLD-PROV-CBSA = '28700'\n\n362100           AND P-NEW-STATE = 49\n362200               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n362300               MOVE '   49' TO HOLD-PROV-CBSA.\n362400",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "362500        IF HOLD-PROV-CBSA = '28700'\n\n362600           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "363100        IF HOLD-PROV-CBSA = '28700'\n\n363200           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n363300           AND P-NEW-STATE = 44\n363400               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "363700        IF HOLD-PROV-CBSA = '28940'\n\n363800           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n363900           AND P-NEW-STATE = 18",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "364300        IF HOLD-PROV-CBSA = '28940'\n\n364400           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n364500           AND P-NEW-STATE = 44",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "364900        IF HOLD-PROV-CBSA = '34820'\n\n365000           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n365100           AND P-NEW-STATE = 34\n365200               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n365300               MOVE '   34' TO HOLD-PROV-CBSA.\n365400",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "365500        IF HOLD-PROV-CBSA = '34820'\n\n365600           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n365700           AND P-NEW-STATE = 42\n365800               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n365900               MOVE '   42' TO HOLD-PROV-CBSA.\n366000",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "366100        IF HOLD-PROV-CBSA = '37620'\n\n366200           AND P-NEW-STATE = 36\n366300               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n366400               MOVE '   36' TO HOLD-PROV-CBSA.\n366500\n366600        IF HOLD-PROV-CBSA = '37964'",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "366600        IF HOLD-PROV-CBSA = '37964'\n\n366700           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n366800           AND P-NEW-STATE = 31\n366900               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n367000               MOVE '   31' TO HOLD-PROV-CBSA.\n367100\n367200        IF HOLD-PROV-CBSA = '38340'",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "367200        IF HOLD-PROV-CBSA = '38340'\n\n367300           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n367400           AND P-NEW-STATE = 47",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "367800        IF HOLD-PROV-CBSA = '41620'\n\n367900           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n368000           AND P-NEW-STATE = 29\n368100               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n368200               MOVE '   29' TO HOLD-PROV-CBSA.\n368300",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "368400        IF HOLD-PROV-CBSA = '43580'\n\n368500           AND P-NEW-STATE = 16\n368600               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "368900        IF HOLD-PROV-CBSA = '48540'\n\n369000           AND P-NEW-STATE = 36\n369100               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n369200               MOVE '   36' TO HOLD-PROV-CBSA.\n369300",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "369400        IF HOLD-PROV-CBSA = '48540'\n\n369500           AND P-NEW-STATE = 51",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "369900        IF HOLD-PROV-CBSA = '48864'\n\n370000           AND P-NEW-STATE = 31\n370100               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n370200               MOVE '   31' TO HOLD-PROV-CBSA.\n370300\n370400        IF HOLD-PROV-CBSA = '48864'",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "370400        IF HOLD-PROV-CBSA = '48864'\n\n370500           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n370600           AND P-NEW-STATE = 31\n370700               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n370800               MOVE '   31' TO HOLD-PROV-CBSA.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "371000        IF HOLD-PROV-CBSA = '19060'\n\n371100           AND P-NEW-STATE = 21\n371200               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n371300               MOVE '   21' TO HOLD-PROV-CBSA.\n371400\n371500        IF HOLD-PROV-CBSA = '19060'\n371600           AND P-NEW-STATE = 51",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "371500        IF HOLD-PROV-CBSA = '19060'\n\n371600           AND P-NEW-STATE = 51\n371700               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n371800               MOVE '   51' TO HOLD-PROV-CBSA.\n371900\n372000        IF HOLD-PROV-CBSA = '22020'\n372100           AND P-NEW-STATE = 24",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "372000        IF HOLD-PROV-CBSA = '22020'\n\n372100           AND P-NEW-STATE = 24",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "372500        IF HOLD-PROV-CBSA = '24220'\n\n372600           AND P-NEW-STATE = 24\n372700               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "373000        IF HOLD-PROV-CBSA = '30300'\n\n373100           AND P-NEW-STATE = 50\n373200               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n373300               MOVE '   50' TO HOLD-PROV-CBSA.\n373400",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "373500        IF HOLD-PROV-CBSA = '48260'\n\n373600           AND P-NEW-STATE = 36\n373700               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n373800               MOVE '   36' TO HOLD-PROV-CBSA.\n373900",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "375000        IF HOLD-PROV-CBSA = '   33'\n\n375100          AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n375200          AND P-NEW-STATE = 33\n375300               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n375400               MOVE '   33' TO HOLD-PROV-CBSA.\n375500",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "375600        IF HOLD-PROV-CBSA = '   30'\n\n375700          AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "376200        IF HOLD-PROV-CBSA = '   33'\n\n376300          AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "376800        IF HOLD-PROV-CBSA = '10900'\n\n376900           AND P-NEW-STATE = 31\n377000               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n377100               MOVE '   31' TO HOLD-PROV-CBSA.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "377300        IF HOLD-PROV-CBSA = '19340'\n\n377400           AND P-NEW-STATE = 16\n377500               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n377600               MOVE '   16' TO HOLD-PROV-CBSA.\n377700\n377800        IF HOLD-PROV-CBSA = '19340'\n377900           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "377800        IF HOLD-PROV-CBSA = '19340'\n\n377900           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "378400        IF HOLD-PROV-CBSA = '21780'\n\n378500           AND P-NEW-STATE = 15\n378600               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n378700               MOVE '   15' TO HOLD-PROV-CBSA.\n378800\n378900        IF HOLD-PROV-CBSA = '21780'\n379000           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "378900        IF HOLD-PROV-CBSA = '21780'\n\n379000           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n379100           AND P-NEW-STATE = 15\n379200               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n379300               MOVE '   15' TO HOLD-PROV-CBSA.\n379400",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "379500        IF HOLD-PROV-CBSA = '25180'\n\n379600           AND P-NEW-STATE = 21\n379700               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n379800               MOVE '   21' TO HOLD-PROV-CBSA.\n379900",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "380000        IF HOLD-PROV-CBSA = '25540'\n\n380100           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "380600        IF HOLD-PROV-CBSA = '28420'\n\n380700           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n380800           AND P-NEW-STATE = 50\n380900               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n381000               MOVE '   50' TO HOLD-PROV-CBSA.\n381100",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "381200        IF HOLD-PROV-CBSA = '28940'\n\n381300           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n381400           AND P-NEW-STATE = 18\n381500               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n381600               MOVE '   18' TO HOLD-PROV-CBSA.\n381700",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "381800        IF HOLD-PROV-CBSA = '28940'\n\n381900           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n382000           AND P-NEW-STATE = 44\n382100               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n382200               MOVE '   44' TO HOLD-PROV-CBSA.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "382400        IF HOLD-PROV-CBSA = '35084'\n\n382500           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n382600           AND P-NEW-STATE = 31\n382700               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n382800               MOVE '   31' TO HOLD-PROV-CBSA.\n382900\n383000        IF HOLD-PROV-CBSA = '37620'",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "383000        IF HOLD-PROV-CBSA = '37620'\n\n383100           AND P-NEW-STATE = 36\n383200               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n383300               MOVE '   36' TO HOLD-PROV-CBSA.\n383400\n383500        IF HOLD-PROV-CBSA = '37964'\n383600           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "383500        IF HOLD-PROV-CBSA = '37964'\n\n383600           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n383700           AND P-NEW-STATE = 31\n383800               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n383900               MOVE '   31' TO HOLD-PROV-CBSA.\n384000\n384100        IF HOLD-PROV-CBSA = '48540'",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "384100        IF HOLD-PROV-CBSA = '48540'\n\n384200           AND P-NEW-STATE = 36\n384300               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "384600        IF HOLD-PROV-CBSA = '48540'\n\n384700           AND P-NEW-STATE = 51\n384800               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n384900               MOVE '   51' TO HOLD-PROV-CBSA.\n385000\n385100        IF HOLD-PROV-CBSA = '48864'\n385200           AND P-NEW-STATE = 31",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "385100        IF HOLD-PROV-CBSA = '48864'\n\n385200           AND P-NEW-STATE = 31\n385300               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n385400               MOVE '   31' TO HOLD-PROV-CBSA.\n385500",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "385600        IF HOLD-PROV-CBSA = '48864'\n\n385700           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n385800           AND P-NEW-STATE = 31\n385900               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n386000               MOVE '   31' TO HOLD-PROV-CBSA.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "386200        IF HOLD-PROV-CBSA = '49660'\n\n386300           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n386400           AND P-NEW-STATE = 36",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "386800        IF HOLD-PROV-CBSA = '19060'\n\n386900           AND P-NEW-STATE = 21\n387000               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n387100               MOVE '   21' TO HOLD-PROV-CBSA.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "387300        IF HOLD-PROV-CBSA = '22020'\n\n387400           AND P-NEW-STATE = 24\n387500               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n387600               MOVE '   24' TO HOLD-PROV-CBSA.\n387700",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "387800        IF HOLD-PROV-CBSA = '24220'\n\n387900           AND P-NEW-STATE = 24",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "388300        IF HOLD-PROV-CBSA = '30300'\n\n388400           AND P-NEW-STATE = 50\n388500               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n388600               MOVE '   50' TO HOLD-PROV-CBSA.\n388700\n388800        IF HOLD-PROV-CBSA = '35084'",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "388800        IF HOLD-PROV-CBSA = '35084'\n\n388900           AND P-NEW-STATE = 31\n389000               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n389100               MOVE '   31' TO HOLD-PROV-CBSA.\n389200\n389300        IF HOLD-PROV-CBSA = '48260'\n389400           AND P-NEW-STATE = 36",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "389300        IF HOLD-PROV-CBSA = '48260'\n\n389400           AND P-NEW-STATE = 36\n389500               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n389600               MOVE '   36' TO HOLD-PROV-CBSA.\n389700",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "389800        IF HOLD-PROV-CBSA = '48260'\n\n389900           AND P-NEW-STATE = 51",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "391400        IF HOLD-PROV-CBSA = '   45'\n\n391500          AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n391600          AND P-NEW-STATE = 45\n391700               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n391800               MOVE '   45' TO HOLD-PROV-CBSA.\n391900\n392000        IF HOLD-PROV-CBSA = '   37'",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "392000        IF HOLD-PROV-CBSA = '   37'\n\n392100          AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n392200          AND P-NEW-STATE = 37\n392300               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n392400               MOVE '   37' TO HOLD-PROV-CBSA.\n392500",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "392600        IF HOLD-PROV-CBSA = '10900'\n\n392700           AND P-NEW-STATE = 31\n392800               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n392900               MOVE '   31' TO HOLD-PROV-CBSA.\n393000",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "393100        IF HOLD-PROV-CBSA = '21500'\n\n393200          AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n393300           AND P-NEW-STATE = 33\n393400               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "393700        IF HOLD-PROV-CBSA = '21500'\n\n393800          AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n393900           AND P-NEW-STATE = 39",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "394300        IF HOLD-PROV-CBSA = '21780'\n\n394400           AND P-NEW-STATE = 15\n394500               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n394600               MOVE '   15' TO HOLD-PROV-CBSA.\n394700",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "394800        IF HOLD-PROV-CBSA = '22900'\n\n394900           AND P-NEW-STATE = 37\n395000               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "395300        IF HOLD-PROV-CBSA = '24540'\n\n395400           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n395500           AND P-NEW-STATE = 53\n395600               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n395700               MOVE '   53' TO HOLD-PROV-CBSA.\n395800",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "395900        IF HOLD-PROV-CBSA = '25540'\n\n396000           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n396100           AND P-NEW-STATE = 07\n396200               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n396300               MOVE '   07' TO HOLD-PROV-CBSA.\n396400",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "396500        IF HOLD-PROV-CBSA = '28700'\n\n396600           AND P-NEW-STATE = 44\n396700               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n396800               MOVE '   44' TO HOLD-PROV-CBSA.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "397000        IF HOLD-PROV-CBSA = '28700'\n\n397100           AND P-NEW-STATE = 49",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "397500        IF HOLD-PROV-CBSA = '28940'\n\n397600           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n397700           AND P-NEW-STATE = 18\n397800               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n397900               MOVE '   18' TO HOLD-PROV-CBSA.\n398000",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "398100        IF HOLD-PROV-CBSA = '28940'\n\n398200           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "398700        IF HOLD-PROV-CBSA = '37620'\n\n398800           AND P-NEW-STATE = 36\n398900               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n399000               MOVE '   36' TO HOLD-PROV-CBSA.\n399100\n399200        IF HOLD-PROV-CBSA = '37620'",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "399200        IF HOLD-PROV-CBSA = '37620'\n\n399300           AND P-NEW-STATE = 51",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "399700        IF HOLD-PROV-CBSA = '37964'\n\n399800           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n399900           AND P-NEW-STATE = 31\n400000               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n400100               MOVE '   31' TO HOLD-PROV-CBSA.\n400200\n400300        IF HOLD-PROV-CBSA = '38300'",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "400300        IF HOLD-PROV-CBSA = '38300'\n\n400400           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n400500           AND P-NEW-STATE = 36\n400600               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "400900        IF HOLD-PROV-CBSA = '38300'\n\n401000           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n401100           AND P-NEW-STATE = 39\n401200               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n401300               MOVE '   39' TO HOLD-PROV-CBSA.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "401500        IF HOLD-PROV-CBSA = '43580'\n\n401600           AND P-NEW-STATE = 43",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "402000        IF HOLD-PROV-CBSA = '48540'\n\n402100           AND P-NEW-STATE = 36\n402200               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "402500        IF HOLD-PROV-CBSA = '48540'\n\n402600           AND P-NEW-STATE = 51\n402700               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n402800               MOVE '   51' TO HOLD-PROV-CBSA.\n402900\n403000        IF HOLD-PROV-CBSA = '48864'",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "403000        IF HOLD-PROV-CBSA = '48864'\n\n403100           AND P-NEW-STATE = 31",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "403500        IF HOLD-PROV-CBSA = '17300'\n\n403600           AND P-NEW-STATE = 18\n403700               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "404000        IF HOLD-PROV-CBSA = '17300'\n\n404100           AND P-NEW-STATE = 44\n404200               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "404500        IF HOLD-PROV-CBSA = '19060'\n\n404600           AND P-NEW-STATE = 21\n404700               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n404800               MOVE '   21' TO HOLD-PROV-CBSA.\n404900",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "405000        IF HOLD-PROV-CBSA = '22020'\n\n405100           AND P-NEW-STATE = 24\n405200               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n405300               MOVE '   24' TO HOLD-PROV-CBSA.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "405500        IF HOLD-PROV-CBSA = '22020'\n\n405600           AND P-NEW-STATE = 35\n405700               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n405800               MOVE '   35' TO HOLD-PROV-CBSA.\n405900\n406000        IF HOLD-PROV-CBSA = '24220'",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "406000        IF HOLD-PROV-CBSA = '24220'\n\n406100           AND P-NEW-STATE = 24\n406200               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "406500        IF HOLD-PROV-CBSA = '24220'\n\n406600           AND P-NEW-STATE = 35\n406700               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n406800               MOVE '   35' TO HOLD-PROV-CBSA.\n406900\n407000        IF HOLD-PROV-CBSA = '30300'\n407100           AND P-NEW-STATE = 50",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "407000        IF HOLD-PROV-CBSA = '30300'\n\n407100           AND P-NEW-STATE = 50\n407200               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n407300               MOVE '   50' TO HOLD-PROV-CBSA.\n407400\n407500        IF HOLD-PROV-CBSA = '44600'\n407600           AND P-NEW-STATE = 36",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "407500        IF HOLD-PROV-CBSA = '44600'\n\n407600           AND P-NEW-STATE = 36",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "408000        IF HOLD-PROV-CBSA = '44600'\n\n408100           AND P-NEW-STATE = 51\n408200               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n408300               MOVE '   51' TO HOLD-PROV-CBSA.\n408400",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "408500        IF HOLD-PROV-CBSA = '45500'\n\n408600           AND P-NEW-STATE = 45\n408700               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n408800               MOVE '   45' TO HOLD-PROV-CBSA.\n408900",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "410100        IF HOLD-PROV-CBSA = '   30'\n\n410200          AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n410300          AND P-NEW-STATE = 30\n410400               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n410500               MOVE '   30' TO HOLD-PROV-CBSA.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "410700        IF HOLD-PROV-CBSA = '   39'\n\n410800          AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "411300        IF HOLD-PROV-CBSA = '   39'\n\n411400          AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n411500          AND P-NEW-STATE = 33\n411600               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n411700               MOVE '   33' TO HOLD-PROV-CBSA.\n411800",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "411900        IF HOLD-PROV-CBSA = '10900'\n\n412000           AND P-NEW-STATE = 31",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "412400        IF HOLD-PROV-CBSA = '14484'\n\n412500           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n412600           AND P-NEW-STATE = 22\n412700               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n412800               MOVE '   22' TO HOLD-PROV-CBSA.\n412900",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "413000        IF HOLD-PROV-CBSA = '16020'\n\n413100           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n413200           AND P-NEW-STATE = 14\n413300               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n413400               MOVE '   14' TO HOLD-PROV-CBSA.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "413600        IF HOLD-PROV-CBSA = '21500'\n\n413700          AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "414200        IF HOLD-PROV-CBSA = '21500'\n\n414300          AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n414400           AND P-NEW-STATE = 39\n414500               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n414600               MOVE '   39' TO HOLD-PROV-CBSA.\n414700",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "414800        IF HOLD-PROV-CBSA = '22900'\n\n414900           AND P-NEW-STATE = 37\n415000               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n415100               MOVE '   37' TO HOLD-PROV-CBSA.\n415200",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "415300        IF HOLD-PROV-CBSA = '25180'\n\n415400           AND P-NEW-STATE = 21\n415500               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n415600               MOVE '   21' TO HOLD-PROV-CBSA.\n415700\n415800        IF HOLD-PROV-CBSA = '25540'",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "415800        IF HOLD-PROV-CBSA = '25540'\n\n415900           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "416400        IF HOLD-PROV-CBSA = '25540'\n\n416500           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n416600           AND P-NEW-STATE = 22",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "417000        IF HOLD-PROV-CBSA = '26820'\n\n417100           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n417200           AND P-NEW-STATE = 53\n417300               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n417400               MOVE '   53' TO HOLD-PROV-CBSA.\n417500",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "417600        IF HOLD-PROV-CBSA = '28700'\n\n417700           AND P-NEW-STATE = 44\n417800               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n417900               MOVE '   44' TO HOLD-PROV-CBSA.\n418000\n418100        IF HOLD-PROV-CBSA = '28700'\n418200           AND P-NEW-STATE = 49",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "418100        IF HOLD-PROV-CBSA = '28700'\n\n418200           AND P-NEW-STATE = 49\n418300               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n418400               MOVE '   49' TO HOLD-PROV-CBSA.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "418600        IF HOLD-PROV-CBSA = '28700'\n\n418700           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n418800           AND P-NEW-STATE = 18\n418900               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n419000               MOVE '   18' TO HOLD-PROV-CBSA.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "419200        IF HOLD-PROV-CBSA = '28700'\n\n419300           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n419400           AND P-NEW-STATE = 44",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "419800        IF HOLD-PROV-CBSA = '28940'\n\n419900           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n420000           AND P-NEW-STATE = 18\n420100               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "420400        IF HOLD-PROV-CBSA = '35084'\n\n420500           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n420600           AND P-NEW-STATE = 31\n420700               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n420800               MOVE '   31' TO HOLD-PROV-CBSA.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "421000        IF HOLD-PROV-CBSA = '37620'\n\n421100           AND P-NEW-STATE = 36\n421200               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n421300               MOVE '   36' TO HOLD-PROV-CBSA.\n421400\n421500        IF HOLD-PROV-CBSA = '37964'\n421600           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "421500        IF HOLD-PROV-CBSA = '37964'\n\n421600           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n421700           AND P-NEW-STATE = 31\n421800               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n421900               MOVE '   31' TO HOLD-PROV-CBSA.\n422000\n422100        IF HOLD-PROV-CBSA = '43580'",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "422100        IF HOLD-PROV-CBSA = '43580'\n\n422200           AND P-NEW-STATE = 43\n422300               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n422400               MOVE '   43' TO HOLD-PROV-CBSA.\n422500\n422600        IF HOLD-PROV-CBSA = '44600'",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "422600        IF HOLD-PROV-CBSA = '44600'\n\n422700           AND P-NEW-STATE = 36",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "423100        IF HOLD-PROV-CBSA = '44600'\n\n423200           AND P-NEW-STATE = 51",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "423600        IF HOLD-PROV-CBSA = '48540'\n\n423700           AND P-NEW-STATE = 36\n423800               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "424100        IF HOLD-PROV-CBSA = '48540'\n\n424200           AND P-NEW-STATE = 51\n424300               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "424600        IF HOLD-PROV-CBSA = '48864'\n\n424700           AND P-NEW-STATE = 31\n424800               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n424900               MOVE '   31' TO HOLD-PROV-CBSA.\n425000\n425100        IF HOLD-PROV-CBSA = '49660'",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "425100        IF HOLD-PROV-CBSA = '49660'\n\n425200           AND P-NEW-STATE = 36\n425300               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n425400               MOVE '   36' TO HOLD-PROV-CBSA.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "425600        IF HOLD-PROV-CBSA = '49660'\n\n425700           AND P-NEW-STATE = 39",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "426100        IF HOLD-PROV-CBSA = '19060'\n\n426200           AND P-NEW-STATE = 21\n426300               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n426400               MOVE '   21' TO HOLD-PROV-CBSA.\n426500\n426600        IF HOLD-PROV-CBSA = '22020'",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "426600        IF HOLD-PROV-CBSA = '22020'\n\n426700           AND P-NEW-STATE = 24\n426800               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n426900               MOVE '   24' TO HOLD-PROV-CBSA.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "427100        IF HOLD-PROV-CBSA = '22020'\n\n427200           AND P-NEW-STATE = 35\n427300               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "427600        IF HOLD-PROV-CBSA = '24220'\n\n427700           AND P-NEW-STATE = 24\n427800               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n427900               MOVE '   24' TO HOLD-PROV-CBSA.\n428000\n428100        IF HOLD-PROV-CBSA = '24220'",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "428100        IF HOLD-PROV-CBSA = '24220'\n\n428200           AND P-NEW-STATE = 35\n428300               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "428600        IF HOLD-PROV-CBSA = '30300'\n\n428700           AND P-NEW-STATE = 50\n428800               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "429100        IF HOLD-PROV-CBSA = '30860'\n\n429200           AND P-NEW-STATE = 46\n429300               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "429600        IF HOLD-PROV-CBSA = '35084'\n\n429700           AND P-NEW-STATE = 31\n429800               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n429900               MOVE '   31' TO HOLD-PROV-CBSA.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "430100        IF HOLD-PROV-CBSA = '39300'\n\n430200           AND P-NEW-STATE = 22\n430300               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n430400               MOVE '   22' TO HOLD-PROV-CBSA.\n430500",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "430600        IF HOLD-PROV-CBSA = '45500'\n\n430700           AND P-NEW-STATE = 45\n430800               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n430900               MOVE '   45' TO HOLD-PROV-CBSA.\n431000\n431100**************YEARCHANGE 2012.0 ******************************",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "432100        IF HOLD-PROV-CBSA = '10900'\n\n432200           AND P-NEW-STATE = 31\n432300               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n432400               MOVE '   31' TO HOLD-PROV-CBSA.\n432500\n432600        IF HOLD-PROV-CBSA = '14484'\n432700           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "432600        IF HOLD-PROV-CBSA = '14484'\n\n432700           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n432800           AND P-NEW-STATE = 22\n432900               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "433200        IF HOLD-PROV-CBSA = '16020'\n\n433300           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n433400           AND P-NEW-STATE = 14\n433500               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n433600               MOVE '   14' TO HOLD-PROV-CBSA.\n433700\n433800        IF HOLD-PROV-CBSA = '21500'",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "433800        IF HOLD-PROV-CBSA = '21500'\n\n433900          AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n434000           AND P-NEW-STATE = 33\n434100               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "434400        IF HOLD-PROV-CBSA = '21500'\n\n434500          AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n434600           AND P-NEW-STATE = 39",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "435000        IF HOLD-PROV-CBSA = '21780'\n\n435100          AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "435600        IF HOLD-PROV-CBSA = '24580'\n\n435700          AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "436200        IF HOLD-PROV-CBSA = '25540'\n\n436300           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n436400           AND P-NEW-STATE = 07\n436500               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n436600               MOVE '   07' TO HOLD-PROV-CBSA.\n436700",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "436800        IF HOLD-PROV-CBSA = '25540'\n\n436900           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "437400        IF HOLD-PROV-CBSA = '26820'\n\n437500           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n437600           AND P-NEW-STATE = 53\n437700               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "438000        IF HOLD-PROV-CBSA = '27900'\n\n438100           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n438200           AND P-NEW-STATE = 17\n438300               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n438400               MOVE '   17' TO HOLD-PROV-CBSA.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "438600        IF HOLD-PROV-CBSA = '28700'\n\n438700           AND P-NEW-STATE = 44\n438800               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n438900               MOVE '   44' TO HOLD-PROV-CBSA.\n439000\n439100        IF HOLD-PROV-CBSA = '28700'",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "439100        IF HOLD-PROV-CBSA = '28700'\n\n439200           AND P-NEW-STATE = 49\n439300               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n439400               MOVE '   49' TO HOLD-PROV-CBSA.\n439500\n439600        IF HOLD-PROV-CBSA = '28700'",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "439600        IF HOLD-PROV-CBSA = '28700'\n\n439700           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "440200        IF HOLD-PROV-CBSA = '28700'\n\n440300           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n440400           AND P-NEW-STATE = 44",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "440800        IF HOLD-PROV-CBSA = '28940'\n\n440900           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n441000           AND P-NEW-STATE = 18\n441100               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n441200               MOVE '   18' TO HOLD-PROV-CBSA.\n441300\n441400        IF HOLD-PROV-CBSA = '35084'",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "441400        IF HOLD-PROV-CBSA = '35084'\n\n441500           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n441600           AND P-NEW-STATE = 31\n441700               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n441800               MOVE '   31' TO HOLD-PROV-CBSA.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "442000        IF HOLD-PROV-CBSA = '37620'\n\n442100           AND P-NEW-STATE = 36",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "442500        IF HOLD-PROV-CBSA = '37964'\n\n442600           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n442700           AND P-NEW-STATE = 31\n442800               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n442900               MOVE '   31' TO HOLD-PROV-CBSA.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "443100        IF HOLD-PROV-CBSA = '38300'\n\n443200           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n443300           AND P-NEW-STATE = 36\n443400               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n443500               MOVE '   36' TO HOLD-PROV-CBSA.\n443600\n443700        IF HOLD-PROV-CBSA = '43580'",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "443700        IF HOLD-PROV-CBSA = '43580'\n\n443800           AND P-NEW-STATE = 43\n443900               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n444000               MOVE '   43' TO HOLD-PROV-CBSA.\n444100",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "444200        IF HOLD-PROV-CBSA = '48540'\n\n444300           AND P-NEW-STATE = 36\n444400               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n444500               MOVE '   36' TO HOLD-PROV-CBSA.\n444600",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "444700        IF HOLD-PROV-CBSA = '48540'\n\n444800           AND P-NEW-STATE = 51\n444900               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "445200        IF HOLD-PROV-CBSA = '48864'\n\n445300           AND P-NEW-STATE = 31\n445400               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n445500               MOVE '   31' TO HOLD-PROV-CBSA.\n445600\n445700        IF HOLD-PROV-CBSA = '49660'",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "445700        IF HOLD-PROV-CBSA = '49660'\n\n445800           AND P-NEW-STATE = 36",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "446200        IF HOLD-PROV-CBSA = '49660'\n\n446300           AND P-NEW-STATE = 39\n446400               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "446700        IF HOLD-PROV-CBSA = '22020'\n\n446800           AND P-NEW-STATE = 24\n446900               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n447000               MOVE '   24' TO HOLD-PROV-CBSA.\n447100\n447200        IF HOLD-PROV-CBSA = '22020'",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "447200        IF HOLD-PROV-CBSA = '22020'\n\n447300           AND P-NEW-STATE = 35\n447400               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n447500               MOVE '   35' TO HOLD-PROV-CBSA.\n447600",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "447700        IF HOLD-PROV-CBSA = '24220'\n\n447800           AND P-NEW-STATE = 24\n447900               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n448000               MOVE '   24' TO HOLD-PROV-CBSA.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "448200        IF HOLD-PROV-CBSA = '24220'\n\n448300           AND P-NEW-STATE = 35\n448400               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n448500               MOVE '   35' TO HOLD-PROV-CBSA.\n448600",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "448700        IF HOLD-PROV-CBSA = '30300'\n\n448800           AND P-NEW-STATE = 50\n448900               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n449000               MOVE '   50' TO HOLD-PROV-CBSA.\n449100\n449200        IF HOLD-PROV-CBSA = '39300'\n449300           AND P-NEW-STATE = 22",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "449200        IF HOLD-PROV-CBSA = '39300'\n\n449300           AND P-NEW-STATE = 22\n449400               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n449500               MOVE '   22' TO HOLD-PROV-CBSA.\n449600",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "449700        IF HOLD-PROV-CBSA = '39300'\n\n449800           AND P-NEW-STATE = 41\n449900               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n450000               MOVE '   41' TO HOLD-PROV-CBSA.\n450100\n450200        IF HOLD-PROV-CBSA = '44600'\n450300           AND P-NEW-STATE = 36",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "450200        IF HOLD-PROV-CBSA = '44600'\n\n450300           AND P-NEW-STATE = 36\n450400               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n450500               MOVE '   36' TO HOLD-PROV-CBSA.\n450600\n450700",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "451700        IF HOLD-PROV-CBSA = '   07'\n\n451800           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n451900           AND P-NEW-STATE = 07\n452000               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n452100               MOVE '   07' TO HOLD-PROV-CBSA.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "452300        IF HOLD-PROV-CBSA = '   36'\n\n452400           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "452900        IF HOLD-PROV-CBSA = '10900'\n\n453000           AND P-NEW-STATE = 31\n453100               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n453200               MOVE '   31' TO HOLD-PROV-CBSA.\n453300\n453400        IF HOLD-PROV-CBSA = '14484'",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "453400        IF HOLD-PROV-CBSA = '14484'\n\n453500           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n453600           AND P-NEW-STATE = 22\n453700               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n453800               MOVE '   22' TO HOLD-PROV-CBSA.\n453900\n454000        IF HOLD-PROV-CBSA = '17300'",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "454000        IF HOLD-PROV-CBSA = '17300'\n\n454100           AND P-NEW-STATE = 18\n454200               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n454300               MOVE '   18' TO HOLD-PROV-CBSA.\n454400\n454500        IF HOLD-PROV-CBSA = '22900'",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "454500        IF HOLD-PROV-CBSA = '22900'\n\n454600           AND P-NEW-STATE = 37\n454700               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n454800               MOVE '   37' TO HOLD-PROV-CBSA.\n454900\n455000        IF HOLD-PROV-CBSA = '25540'\n455100          AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "455000        IF HOLD-PROV-CBSA = '25540'\n\n455100          AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n455200           AND P-NEW-STATE = 07",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "455600        IF HOLD-PROV-CBSA = '25540'\n\n455700          AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n455800           AND P-NEW-STATE = 22\n455900               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n456000               MOVE '   22' TO HOLD-PROV-CBSA.\n456100\n456200        IF HOLD-PROV-CBSA = '26820'",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "456200        IF HOLD-PROV-CBSA = '26820'\n\n456300           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n456400           AND P-NEW-STATE = 53\n456500               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "456800        IF HOLD-PROV-CBSA = '27180'\n\n456900           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n457000           AND P-NEW-STATE = 25\n457100               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n457200               MOVE '   25' TO HOLD-PROV-CBSA.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "457400        IF HOLD-PROV-CBSA = '28700'\n\n457500           AND P-NEW-STATE = 44",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "457900        IF HOLD-PROV-CBSA = '28700'\n\n458000           AND P-NEW-STATE = 49\n458100               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n458200               MOVE '   49' TO HOLD-PROV-CBSA.\n458300\n458400        IF HOLD-PROV-CBSA = '35644'",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "458400        IF HOLD-PROV-CBSA = '35644'\n\n458500           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "459000        IF HOLD-PROV-CBSA = '37620'\n\n459100           AND P-NEW-STATE = 36\n459200               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n459300               MOVE '   36' TO HOLD-PROV-CBSA.\n459400\n459500        IF HOLD-PROV-CBSA = '43580'",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "459500        IF HOLD-PROV-CBSA = '43580'\n\n459600           AND P-NEW-STATE = 43\n459700               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n459800               MOVE '   43' TO HOLD-PROV-CBSA.\n459900",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "460000        IF HOLD-PROV-CBSA = '48540'\n\n460100           AND P-NEW-STATE = 36",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "460500        IF HOLD-PROV-CBSA = '48540'\n\n460600           AND P-NEW-STATE = 51\n460700               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "461000        IF HOLD-PROV-CBSA = '48864'\n\n461100           AND P-NEW-STATE = 31\n461200               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n461300               MOVE '   31' TO HOLD-PROV-CBSA.\n461400",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "461500        IF HOLD-PROV-CBSA = '49660'\n\n461600           AND P-NEW-STATE = 36\n461700               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n461800               MOVE '   36' TO HOLD-PROV-CBSA.\n461900",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "462000        IF HOLD-PROV-CBSA = '49660'\n\n462100           AND P-NEW-STATE = 39\n462200               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n462300               MOVE '   39' TO HOLD-PROV-CBSA.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "462500        IF HOLD-PROV-CBSA = '19060'\n\n462600           AND P-NEW-STATE = 21",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "463000        IF HOLD-PROV-CBSA = '22020'\n\n463100           AND P-NEW-STATE = 24\n463200               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n463300               MOVE '   24' TO HOLD-PROV-CBSA.\n463400\n463500        IF HOLD-PROV-CBSA = '22020'\n463600           AND P-NEW-STATE = 35",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "463500        IF HOLD-PROV-CBSA = '22020'\n\n463600           AND P-NEW-STATE = 35\n463700               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n463800               MOVE '   35' TO HOLD-PROV-CBSA.\n463900\n464000        IF HOLD-PROV-CBSA = '24220'",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "464000        IF HOLD-PROV-CBSA = '24220'\n\n464100           AND P-NEW-STATE = 24\n464200               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n464300               MOVE '   24' TO HOLD-PROV-CBSA.\n464400",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "464500        IF HOLD-PROV-CBSA = '24220'\n\n464600           AND P-NEW-STATE = 35\n464700               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n464800               MOVE '   35' TO HOLD-PROV-CBSA.\n464900",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "465000        IF HOLD-PROV-CBSA = '30300'\n\n465100           AND P-NEW-STATE = 50\n465200               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n465300               MOVE '   50' TO HOLD-PROV-CBSA.\n465400",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "465500        IF HOLD-PROV-CBSA = '39300'\n\n465600           AND P-NEW-STATE = 22\n465700               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n465800               MOVE '   22' TO HOLD-PROV-CBSA.\n465900\n466000        IF HOLD-PROV-CBSA = '39300'\n466100           AND P-NEW-STATE = 41",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "466000        IF HOLD-PROV-CBSA = '39300'\n\n466100           AND P-NEW-STATE = 41\n466200               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n466300               MOVE '   41' TO HOLD-PROV-CBSA.\n466400\n466500        IF HOLD-PROV-CBSA = '44600'",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "466500        IF HOLD-PROV-CBSA = '44600'\n\n466600           AND P-NEW-STATE = 36\n466700               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n466800               MOVE '   36' TO HOLD-PROV-CBSA.\n466900\n467000        IF HOLD-PROV-CBSA = '45500'",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "467000        IF HOLD-PROV-CBSA = '45500'\n\n467100           AND P-NEW-STATE = 45",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "468600     IF W-NEW-CBSA-WI NOT NUMERIC\n\n468700        MOVE 0 TO W-NEW-CBSA-WI.\n468800\n468900     IF W-NEW-CBSA-WI = 00.0000\n469000        MOVE ALL '0' TO PPS-ADDITIONAL-VARIABLES",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "468900     IF W-NEW-CBSA-WI = 00.0000\n\n469000        MOVE ALL '0' TO PPS-ADDITIONAL-VARIABLES\n469100        MOVE 52 TO PPS-RTC",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "470000     IF H-CBSA-RURAL-STATE = '00'\n\n470100        MOVE '03' TO H-CBSA-RURAL-STATE.\n470200\n470300*------------------------------------------------------------*\n470400* SEARCH TABLE FOR RURAL IPPS CBSA & GET WAGE INDEX (FLOOR)  *\n470500*------------------------------------------------------------*",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "470800     IF PPS-RTC = 00\n\n470900      IF W-RURAL-CBSA-EFF-DATE NOT = WS-9S\n471000       IF B-21-DISCHARGE-DATE > 20200930\n471100        IF H-CBSA-PROV-BLANK = '   '\n471200          GO TO 0690-BYPASS",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "470900      IF W-RURAL-CBSA-EFF-DATE NOT = WS-9S\n\n471000       IF B-21-DISCHARGE-DATE > 20200930\n471100        IF H-CBSA-PROV-BLANK = '   '\n471200          GO TO 0690-BYPASS",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "471000       IF B-21-DISCHARGE-DATE > 20200930\n\n471100        IF H-CBSA-PROV-BLANK = '   '\n471200          GO TO 0690-BYPASS\n471300        ELSE\n471400         PERFORM 0670-GET-RURAL-CBSA-WAGE-INDX\n471500          THRU   0670-EXIT VARYING MA2\n471600                 FROM MA1 BY 1 UNTIL",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "471100        IF H-CBSA-PROV-BLANK = '   '\n\n471200          GO TO 0690-BYPASS",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "472400     IF PPS-RTC = 00\n\n472500      IF W-RURAL-CBSA-EFF-DATE NOT = WS-9S",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "472500      IF W-RURAL-CBSA-EFF-DATE NOT = WS-9S\n\n472600       IF B-21-DISCHARGE-DATE > 20190930 AND\n472700          B-21-DISCHARGE-DATE < 20201001\n472800        IF H-CBSA-PROV-BLANK = '   '\n472900          GO TO 0690-BYPASS\n473000        ELSE",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "472600       IF B-21-DISCHARGE-DATE > 20190930 AND\n\n472700          B-21-DISCHARGE-DATE < 20201001\n472800        IF H-CBSA-PROV-BLANK = '   '\n472900          GO TO 0690-BYPASS\n473000        ELSE\n473100          PERFORM 0690-GET-RURAL-FLOOR-WAGE-INDX THRU 0690-EXIT",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "472800        IF H-CBSA-PROV-BLANK = '   '\n\n472900          GO TO 0690-BYPASS\n473000        ELSE\n473100          PERFORM 0690-GET-RURAL-FLOOR-WAGE-INDX THRU 0690-EXIT\n473200          GO TO 0690-BYPASS",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "473800     IF PPS-RTC = 00\n\n473900       IF W-RURAL-CBSA-EFF-DATE NOT = WS-9S\n474000         PERFORM 0660-GET-RURAL-CBSA-WAGE-INDX\n474100          THRU   0660-EXIT VARYING MA2\n474200                 FROM MA1 BY 1 UNTIL",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "473900       IF W-RURAL-CBSA-EFF-DATE NOT = WS-9S\n\n474000         PERFORM 0660-GET-RURAL-CBSA-WAGE-INDX\n474100          THRU   0660-EXIT VARYING MA2\n474200                 FROM MA1 BY 1 UNTIL\n474300                 T-CBSA (MA2) NOT = HOLD-RURAL-CBSA\n474400       END-IF",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "475600     IF W-RURAL-CBSA-WI NOT NUMERIC\n\n475700        MOVE 0 TO W-RURAL-CBSA-WI.\n475800\n475900*------------------------------------------------------------*\n476000* IF THE STATE'S RURAL FLOOR WAGE INDEX IS HIGHER THAN THE   *\n476100* PROVIDER'S CBSA WAGE INDEX, REPLACE THE CBSA AND WAGE      *\n476200* INDEX WITH STATE CODE AND RURAL FLOOR WAGE INDEX           *",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "476400     IF W-RURAL-CBSA-WI > W-NEW-CBSA-WI\n\n476500        MOVE WAGE-RURAL-CBSA-INDEX-RECORD TO",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "477800     IF W-NEW-CBSA-PR-WI NOT NUMERIC\n\n477900        MOVE 0 TO W-NEW-CBSA-WI.\n478000\n478100     IF W-NEW-CBSA-PR-WI = 00.0000",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "478100     IF W-NEW-CBSA-PR-WI = 00.0000\n\n478200        MOVE ALL '0' TO PPS-ADDITIONAL-VARIABLES\n478300        MOVE 52 TO PPS-RTC\n478400        GO TO 2350-2015-EXIT.\n478500\n478600**----------------------------------------------------------------\n478700** SET THE PROVIDER'S STATE RURAL CBSA TO 40 (PUERTO RICO)",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "480100     IF W-RURAL-CBSA-PR-WI NOT NUMERIC\n\n480200        MOVE 0 TO W-RURAL-CBSA-PR-WI.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "480900     IF W-RURAL-CBSA-PR-WI > W-NEW-CBSA-PR-WI\n\n481000        MOVE W-RURAL-CBSA-PR-WI TO W-NEW-CBSA-PR-WI.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "482500     IF W-P-NEW-EFF-DATE < 0 OR\n\n482600        W-P-NEW-EFF-DATE = '00000000'\n482700        MOVE ZEROES TO W-P-EFF-DATE",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "484400     IF W-P-NEW-REPORT-DATE < 0 OR\n\n484500        W-P-NEW-REPORT-DATE = '00000000'\n484600        MOVE ZEROES TO W-P-REPORT-DATE\n484700     ELSE\n484800        MOVE  W-P-NEW-REPORT-DT-YY  TO W-P-REPORT-DT-YY\n484900        MOVE  W-P-NEW-REPORT-DT-MM  TO W-P-REPORT-DT-MM",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "485400     IF W-P-NEW-FY-BEGIN-DATE < 0  OR\n\n485500        W-P-NEW-FY-BEGIN-DATE = '00000000'",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "486900     IF W-P-NEW-TERMINATION-DATE < 0  OR\n\n487000        W-P-NEW-TERMINATION-DATE = '00000000'\n487100        MOVE ZEROES TO W-P-TERMINATION-DATE\n487200     ELSE\n487300        MOVE  W-P-NEW-TERM-DT-YY    TO W-P-TERM-DT-YY\n487400        MOVE  W-P-NEW-TERM-DT-MM    TO W-P-TERM-DT-MM\n487500        MOVE  W-P-NEW-TERM-DT-DD    TO W-P-TERM-DT-DD.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "487700     IF P-NEW-FYE-DATE  NOT NUMERIC\n\n487800        MOVE ZEROES TO W-P-FISCAL-YEAR-END.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "488000     IF P-NEW-FYE-DATE               < 0  OR\n\n488100        P-NEW-FYE-DATE               = '00000000'\n488200        MOVE ZEROES TO W-P-FISCAL-YEAR-END\n488300     ELSE",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "490900     IF (P-NEW-PROVIDER-NO = '140012' OR '150002' OR '150004' OR\n\n491000                             '150008' OR '150034' OR '150090' OR\n491100                             '150125' OR '150126' OR '150132')",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "491700     IF (P-NEW-PROVIDER-NO = '250078')\n\n491800            AND (P-NEW-STAND-AMT-LOC-MSA = '3285'\n491900            AND P-NEW-WAGE-INDEX-LOC-MSA = '3285'\n492000            AND P-NEW-CHG-CODE-INDEX  = 'Y')\n492100          MOVE 00.7634 TO W-NEW-INDEX-RECORD.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "492300     IF (P-NEW-PROVIDER-NO = '330001' OR '330126' OR '330135' OR\n\n492400                             '330205' OR '330209' OR '330264')\n492500            AND (P-NEW-STAND-AMT-LOC-MSA = '5600'\n492600            AND P-NEW-WAGE-INDEX-LOC-MSA = '5600'\n492700            AND P-NEW-CHG-CODE-INDEX  = 'Y')",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "493000     IF (P-NEW-PROVIDER-NO = '340039' OR '340129' OR '340144')\n\n493100            AND (P-NEW-STAND-AMT-LOC-MSA = '1520'\n493200            AND P-NEW-WAGE-INDEX-LOC-MSA = '1520'\n493300            AND P-NEW-CHG-CODE-INDEX  = 'Y')\n493400          MOVE 00.9434 TO W-NEW-INDEX-RECORD.\n493500\n493600     IF (P-NEW-PROVIDER-NO = '360046' OR '360056' OR '360076' OR",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "493600     IF (P-NEW-PROVIDER-NO = '360046' OR '360056' OR '360076' OR\n\n493700                             '360132')\n493800            AND (P-NEW-STAND-AMT-LOC-MSA = '1640'\n493900            AND P-NEW-WAGE-INDEX-LOC-MSA = '1640'\n494000            AND P-NEW-CHG-CODE-INDEX  = 'Y')\n494100          MOVE 00.9419 TO W-NEW-INDEX-RECORD.\n494200",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "494300     IF (P-NEW-PROVIDER-NO = '390019' OR '390049' OR '390162' OR\n\n494400                             '390194' OR '390197' OR '390263')\n494500            AND (P-NEW-STAND-AMT-LOC-MSA = '0240'\n494600            AND P-NEW-WAGE-INDEX-LOC-MSA = '0240'\n494700            AND P-NEW-CHG-CODE-INDEX  = 'Y')\n494800          MOVE 01.0228 TO W-NEW-INDEX-RECORD.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "495000     IF (P-NEW-PROVIDER-NO = '450065' OR '450072' OR '450591')\n\n495100            AND (P-NEW-STAND-AMT-LOC-MSA = '3360'\n495200            AND P-NEW-WAGE-INDEX-LOC-MSA = '3360'\n495300            AND P-NEW-CHG-CODE-INDEX  = 'Y')",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "495600     IF (P-NEW-PROVIDER-NO = '470003')\n\n495700            AND (P-NEW-STAND-AMT-LOC-MSA = '1123'\n495800            AND P-NEW-WAGE-INDEX-LOC-MSA = '1123'\n495900            AND P-NEW-CHG-CODE-INDEX  = 'Y')\n496000          MOVE 01.1359 TO W-NEW-INDEX-RECORD.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "496800     IF (P-NEW-PROVIDER-NO = '010043')\n\n496900            AND (P-NEW-STAND-AMT-LOC-MSA = '1000'\n497000            AND P-NEW-WAGE-INDEX-LOC-MSA = '1000'",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "497400     IF (P-NEW-PROVIDER-NO = '010072' OR '010101')\n\n497500            AND (P-NEW-STAND-AMT-LOC-MSA = '0450'\n497600            AND P-NEW-WAGE-INDEX-LOC-MSA = '0450'\n497700            AND P-NEW-CHG-CODE-INDEX  = 'Y')\n497800          MOVE 00.7871 TO W-NEW-INDEX-RECORD.\n497900\n498000     IF (P-NEW-PROVIDER-NO = '100098')",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "498000     IF (P-NEW-PROVIDER-NO = '100098')\n\n498100            AND (P-NEW-STAND-AMT-LOC-MSA = '8960'\n498200            AND P-NEW-WAGE-INDEX-LOC-MSA = '8960'\n498300            AND P-NEW-CHG-CODE-INDEX  = 'Y')\n498400          MOVE 00.9615 TO W-NEW-INDEX-RECORD.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "498600     IF (P-NEW-PROVIDER-NO = '100232')\n\n498700            AND (P-NEW-STAND-AMT-LOC-MSA = '2900'\n498800            AND P-NEW-WAGE-INDEX-LOC-MSA = '2900'\n498900            AND P-NEW-CHG-CODE-INDEX  = 'Y')\n499000          MOVE 01.0074 TO W-NEW-INDEX-RECORD.\n499100\n499200     IF (P-NEW-PROVIDER-NO = '110130')",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "499200     IF (P-NEW-PROVIDER-NO = '110130')\n\n499300            AND (P-NEW-STAND-AMT-LOC-MSA = '0500'\n499400            AND P-NEW-WAGE-INDEX-LOC-MSA = '0500'",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "499800     IF (P-NEW-PROVIDER-NO = '140230')\n\n499900            AND (P-NEW-STAND-AMT-LOC-MSA = '1400'\n500000            AND P-NEW-WAGE-INDEX-LOC-MSA = '1400'\n500100            AND P-NEW-CHG-CODE-INDEX  = 'Y')\n500200          MOVE 00.9069 TO W-NEW-INDEX-RECORD.\n500300\n500400     IF (P-NEW-PROVIDER-NO = '230027')",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "500400     IF (P-NEW-PROVIDER-NO = '230027')\n\n500500            AND (P-NEW-STAND-AMT-LOC-MSA = '3000'",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "501000     IF (P-NEW-PROVIDER-NO = '340071' OR '340124')\n\n501100            AND (P-NEW-STAND-AMT-LOC-MSA = '6640'",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "501600     IF (P-NEW-PROVIDER-NO = '390030' OR '390181' OR '390183')\n\n501700            AND (P-NEW-STAND-AMT-LOC-MSA = '6680'",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "502200     IF (P-NEW-PROVIDER-NO = '390201')\n\n502300            AND (P-NEW-STAND-AMT-LOC-MSA = '5640'\n502400            AND P-NEW-WAGE-INDEX-LOC-MSA = '5640'\n502500            AND P-NEW-CHG-CODE-INDEX  = 'Y')\n502600          MOVE 01.0890 TO W-NEW-INDEX-RECORD.\n502700\n502800 2500-2001-EXIT.   EXIT.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "503400     IF (P-NEW-PROVIDER-NO = '110130')\n\n503500            AND (P-NEW-STAND-AMT-LOC-MSA = '  11'\n503600            AND P-NEW-WAGE-INDEX-LOC-MSA = '  11'\n503700            AND P-NEW-CHG-CODE-INDEX  = 'Y')\n503800          MOVE 00.8230 TO W-NEW-INDEX-RECORD.\n503900\n504000",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "504700     IF (P-NEW-PROVIDER-NO = '050192' OR '050286' OR\n\n504800                             '050446' OR '050469' OR",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "505300     IF (P-NEW-PROVIDER-NO = '100048' OR '100118')\n\n505400         MOVE '  10' TO HOLD-PROV-MSAX\n505500                        P-NEW-STAND-AMT-LOC-MSA.\n505600\n505700     IF (P-NEW-PROVIDER-NO = '170137')\n505800         MOVE '  17' TO HOLD-PROV-MSAX",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "505700     IF (P-NEW-PROVIDER-NO = '170137')\n\n505800         MOVE '  17' TO HOLD-PROV-MSAX\n505900                        P-NEW-STAND-AMT-LOC-MSA.\n506000\n506100     IF (P-NEW-PROVIDER-NO = '190048' OR '190110')\n506200         MOVE '  19' TO HOLD-PROV-MSAX\n506300                        P-NEW-STAND-AMT-LOC-MSA.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "506100     IF (P-NEW-PROVIDER-NO = '190048' OR '190110')\n\n506200         MOVE '  19' TO HOLD-PROV-MSAX\n506300                        P-NEW-STAND-AMT-LOC-MSA.\n506400\n506500     IF (P-NEW-PROVIDER-NO = '230078')\n506600         MOVE '  23' TO HOLD-PROV-MSAX",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "506500     IF (P-NEW-PROVIDER-NO = '230078')\n\n506600         MOVE '  23' TO HOLD-PROV-MSAX\n506700                        P-NEW-STAND-AMT-LOC-MSA.\n506800",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "506900     IF (P-NEW-PROVIDER-NO = '260006')\n\n507000         MOVE '  26' TO HOLD-PROV-MSAX\n507100                        P-NEW-STAND-AMT-LOC-MSA.\n507200\n507300     IF (P-NEW-PROVIDER-NO = '290038')\n507400         MOVE '  29' TO HOLD-PROV-MSAX",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "507300     IF (P-NEW-PROVIDER-NO = '290038')\n\n507400         MOVE '  29' TO HOLD-PROV-MSAX",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "507700     IF (P-NEW-PROVIDER-NO = '300009')\n\n507800         MOVE '  30' TO HOLD-PROV-MSAX\n507900                        P-NEW-STAND-AMT-LOC-MSA.\n508000\n508100     IF (P-NEW-PROVIDER-NO = '390106')\n508200         MOVE '  39' TO HOLD-PROV-MSAX\n508300                        P-NEW-STAND-AMT-LOC-MSA.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "508100     IF (P-NEW-PROVIDER-NO = '390106')\n\n508200         MOVE '  39' TO HOLD-PROV-MSAX\n508300                        P-NEW-STAND-AMT-LOC-MSA.\n508400",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "508500     IF (P-NEW-PROVIDER-NO = '520007' OR '520153')\n\n508600         MOVE '  52' TO HOLD-PROV-MSAX",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "509500     IF (P-NEW-PROVIDER-NO = '050192' OR '050286' OR\n\n509600                             '050446' OR '050469' OR\n509700                             '050528')",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "510100     IF (P-NEW-PROVIDER-NO = '100048' OR '100118')\n\n510200         MOVE '  10' TO HOLD-PROV-MSAX\n510300                        P-NEW-STAND-AMT-LOC-MSA.\n510400\n510500     IF (P-NEW-PROVIDER-NO = '170137')\n510600         MOVE '  17' TO HOLD-PROV-MSAX\n510700                        P-NEW-STAND-AMT-LOC-MSA.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "510500     IF (P-NEW-PROVIDER-NO = '170137')\n\n510600         MOVE '  17' TO HOLD-PROV-MSAX",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "510900     IF (P-NEW-PROVIDER-NO = '190048' OR '190110')\n\n511000         MOVE '  19' TO HOLD-PROV-MSAX",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "511300     IF (P-NEW-PROVIDER-NO = '230078')\n\n511400         MOVE '  23' TO HOLD-PROV-MSAX",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "511700     IF (P-NEW-PROVIDER-NO = '260006')\n\n511800         MOVE '  26' TO HOLD-PROV-MSAX\n511900                        P-NEW-STAND-AMT-LOC-MSA.\n512000\n512100     IF (P-NEW-PROVIDER-NO = '300009')",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "512100     IF (P-NEW-PROVIDER-NO = '300009')\n\n512200         MOVE '  30' TO HOLD-PROV-MSAX\n512300                        P-NEW-STAND-AMT-LOC-MSA.\n512400\n512500     IF (P-NEW-PROVIDER-NO = '380084')\n512600         MOVE '  38' TO HOLD-PROV-MSAX\n512700                        P-NEW-STAND-AMT-LOC-MSA.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "512500     IF (P-NEW-PROVIDER-NO = '380084')\n\n512600         MOVE '  38' TO HOLD-PROV-MSAX\n512700                        P-NEW-STAND-AMT-LOC-MSA.\n512800\n512900 2700-2003-EXIT.   EXIT.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "513500     IF (P-NEW-PROVIDER-NO = '050192' OR '050286' OR\n\n513600                             '050469' OR '050528' OR\n513700                             '050618')\n513800         MOVE '  05' TO HOLD-PROV-MSAX\n513900                        P-NEW-STAND-AMT-LOC-MSA.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "514100     IF (P-NEW-PROVIDER-NO = '100048' OR '100118')\n\n514200         MOVE '  10' TO HOLD-PROV-MSAX\n514300                        P-NEW-STAND-AMT-LOC-MSA.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "514500     IF (P-NEW-PROVIDER-NO = '170137')\n\n514600         MOVE '  17' TO HOLD-PROV-MSAX\n514700                        P-NEW-STAND-AMT-LOC-MSA.\n514800\n514900     IF (P-NEW-PROVIDER-NO = '190048' OR '190110')\n515000         MOVE '  19' TO HOLD-PROV-MSAX\n515100                        P-NEW-STAND-AMT-LOC-MSA.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "514900     IF (P-NEW-PROVIDER-NO = '190048' OR '190110')\n\n515000         MOVE '  19' TO HOLD-PROV-MSAX",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "515300     IF (P-NEW-PROVIDER-NO = '230078')\n\n515400         MOVE '  23' TO HOLD-PROV-MSAX\n515500                        P-NEW-STAND-AMT-LOC-MSA.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "515700     IF (P-NEW-PROVIDER-NO = '260006')\n\n515800         MOVE '  26' TO HOLD-PROV-MSAX\n515900                        P-NEW-STAND-AMT-LOC-MSA.\n516000\n516100     IF (P-NEW-PROVIDER-NO = '300009')\n516200         MOVE '  30' TO HOLD-PROV-MSAX",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "516100     IF (P-NEW-PROVIDER-NO = '300009')\n\n516200         MOVE '  30' TO HOLD-PROV-MSAX",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "516500     IF (P-NEW-PROVIDER-NO = '380084')\n\n516600         MOVE '  38' TO HOLD-PROV-MSAX\n516700                        P-NEW-STAND-AMT-LOC-MSA.\n516800",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "516900     IF (P-NEW-PROVIDER-NO = '390106')\n\n517000         MOVE '  39' TO HOLD-PROV-MSAX\n517100                        P-NEW-STAND-AMT-LOC-MSA.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "517900     IF (P-NEW-PROVIDER-NO = '050192' OR '050286' OR\n\n518000                             '050446' OR '050469' OR\n518100                             '050528' OR '050618' OR\n518200                             '051301')\n518300         MOVE '   05' TO HOLD-PROV-CBSA",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "518600     IF (P-NEW-PROVIDER-NO = '070004')\n\n518700         MOVE '   07' TO HOLD-PROV-CBSA",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "519000     IF (P-NEW-PROVIDER-NO = '100048' OR '100118')\n\n519100         MOVE '   10' TO HOLD-PROV-CBSA\n519200                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "519400     IF (P-NEW-PROVIDER-NO = '170137')\n\n519500         MOVE '   17' TO HOLD-PROV-CBSA",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "519800     IF (P-NEW-PROVIDER-NO = '190048' OR '190110')\n\n519900         MOVE '   19' TO HOLD-PROV-CBSA\n520000                        P-NEW-CBSA-STAND-AMT-LOC.\n520100\n520200     IF (P-NEW-PROVIDER-NO = '230078')\n520300         MOVE '   23' TO HOLD-PROV-CBSA\n520400                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "520200     IF (P-NEW-PROVIDER-NO = '230078')\n\n520300         MOVE '   23' TO HOLD-PROV-CBSA\n520400                        P-NEW-CBSA-STAND-AMT-LOC.\n520500",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "520600     IF (P-NEW-PROVIDER-NO = '260006')\n\n520700         MOVE '   26' TO HOLD-PROV-CBSA\n520800                        P-NEW-CBSA-STAND-AMT-LOC.\n520900",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "521000     IF (P-NEW-PROVIDER-NO = '290038' OR '291301')\n\n521100         MOVE '   29' TO HOLD-PROV-CBSA\n521200                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "521400     IF (P-NEW-PROVIDER-NO = '300009')\n\n521500         MOVE '   30' TO HOLD-PROV-CBSA\n521600                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "521800     IF (P-NEW-PROVIDER-NO = '380084')\n\n521900         MOVE '   38' TO HOLD-PROV-CBSA\n522000                        P-NEW-CBSA-STAND-AMT-LOC.\n522100",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "522200     IF (P-NEW-PROVIDER-NO = '390106' OR '390181')\n\n522300         MOVE '   39' TO HOLD-PROV-CBSA\n522400                        P-NEW-CBSA-STAND-AMT-LOC.\n522500",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "523200     IF (P-NEW-PROVIDER-NO = '030007')\n\n523300         MOVE '   03' TO HOLD-PROV-CBSA\n523400                        P-NEW-CBSA-STAND-AMT-LOC.\n523500\n523600     IF (P-NEW-PROVIDER-NO = '040075')\n523700         MOVE '   04' TO HOLD-PROV-CBSA",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "523600     IF (P-NEW-PROVIDER-NO = '040075')\n\n523700         MOVE '   04' TO HOLD-PROV-CBSA",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "524000     IF (P-NEW-PROVIDER-NO = '050192' OR '050469' OR\n\n524100                             '050528' OR '050618')\n524200         MOVE '   05' TO HOLD-PROV-CBSA",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "524500     IF (P-NEW-PROVIDER-NO = '070004')\n\n524600         MOVE '   07' TO HOLD-PROV-CBSA",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "524900     IF (P-NEW-PROVIDER-NO = '100048' OR '100134')\n\n525000         MOVE '   10' TO HOLD-PROV-CBSA",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "525300     IF (P-NEW-PROVIDER-NO = '130018')\n\n525400         MOVE '   13' TO HOLD-PROV-CBSA\n525500                        P-NEW-CBSA-STAND-AMT-LOC.\n525600",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "525700     IF (P-NEW-PROVIDER-NO = '140167')\n\n525800         MOVE '   14' TO HOLD-PROV-CBSA\n525900                        P-NEW-CBSA-STAND-AMT-LOC.\n526000",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "526100     IF (P-NEW-PROVIDER-NO = '150051' OR '150078')\n\n526200         MOVE '   15' TO HOLD-PROV-CBSA\n526300                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "526500     IF (P-NEW-PROVIDER-NO = '170137')\n\n526600         MOVE '   17' TO HOLD-PROV-CBSA\n526700                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "526900     IF (P-NEW-PROVIDER-NO = '190048')\n\n527000         MOVE '   19' TO HOLD-PROV-CBSA\n527100                        P-NEW-CBSA-STAND-AMT-LOC.\n527200\n527300     IF (P-NEW-PROVIDER-NO = '230078')\n527400         MOVE '   23' TO HOLD-PROV-CBSA",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "527300     IF (P-NEW-PROVIDER-NO = '230078')\n\n527400         MOVE '   23' TO HOLD-PROV-CBSA\n527500                        P-NEW-CBSA-STAND-AMT-LOC.\n527600\n527700     IF (P-NEW-PROVIDER-NO = '240037')\n527800         MOVE '   24' TO HOLD-PROV-CBSA\n527900                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "527700     IF (P-NEW-PROVIDER-NO = '240037')\n\n527800         MOVE '   24' TO HOLD-PROV-CBSA\n527900                        P-NEW-CBSA-STAND-AMT-LOC.\n528000\n528100     IF (P-NEW-PROVIDER-NO = '260006' OR '260122')",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "528100     IF (P-NEW-PROVIDER-NO = '260006' OR '260122')\n\n528200         MOVE '   26' TO HOLD-PROV-CBSA\n528300                        P-NEW-CBSA-STAND-AMT-LOC.\n528400",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "528500     IF (P-NEW-PROVIDER-NO = '300009')\n\n528600         MOVE '   30' TO HOLD-PROV-CBSA\n528700                        P-NEW-CBSA-STAND-AMT-LOC.\n528800\n528900     IF (P-NEW-PROVIDER-NO = '370054')\n529000         MOVE '   37' TO HOLD-PROV-CBSA\n529100                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "528900     IF (P-NEW-PROVIDER-NO = '370054')\n\n529000         MOVE '   37' TO HOLD-PROV-CBSA\n529100                        P-NEW-CBSA-STAND-AMT-LOC.\n529200\n529300     IF (P-NEW-PROVIDER-NO = '380040' OR '380084')",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "529300     IF (P-NEW-PROVIDER-NO = '380040' OR '380084')\n\n529400         MOVE '   38' TO HOLD-PROV-CBSA\n529500                        P-NEW-CBSA-STAND-AMT-LOC.\n529600",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "529700     IF (P-NEW-PROVIDER-NO = '390181' OR '390183' OR\n\n529800                             '390201')\n529900         MOVE '   39' TO HOLD-PROV-CBSA\n530000                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "530200     IF (P-NEW-PROVIDER-NO = '450052' OR '450078' OR\n\n530300                             '450243' OR '450276' OR\n530400                             '450348')\n530500         MOVE '   45' TO HOLD-PROV-CBSA\n530600                        P-NEW-CBSA-STAND-AMT-LOC.\n530700\n530800     IF (P-NEW-PROVIDER-NO = '500023' OR '500037' OR",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "530800     IF (P-NEW-PROVIDER-NO = '500023' OR '500037' OR\n\n530900                             '500122' OR '500147' OR",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "532000     IF (P-NEW-PROVIDER-NO = '030007')\n\n532100         MOVE '   03' TO HOLD-PROV-CBSA\n532200                        P-NEW-CBSA-STAND-AMT-LOC.\n532300\n532400     IF (P-NEW-PROVIDER-NO = '040075')",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "532400     IF (P-NEW-PROVIDER-NO = '040075')\n\n532500         MOVE '   04' TO HOLD-PROV-CBSA\n532600                        P-NEW-CBSA-STAND-AMT-LOC.\n532700\n532800     IF (P-NEW-PROVIDER-NO = '050192' OR '050469' OR\n532900                             '050528' OR '050618')",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "532800     IF (P-NEW-PROVIDER-NO = '050192' OR '050469' OR\n\n532900                             '050528' OR '050618')\n533000         MOVE '   05' TO HOLD-PROV-CBSA\n533100                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "533300     IF (P-NEW-PROVIDER-NO = '070004')\n\n533400         MOVE '   07' TO HOLD-PROV-CBSA\n533500                        P-NEW-CBSA-STAND-AMT-LOC.\n533600\n533700     IF (P-NEW-PROVIDER-NO = '100048' OR '100134')\n533800         MOVE '   10' TO HOLD-PROV-CBSA\n533900                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "533700     IF (P-NEW-PROVIDER-NO = '100048' OR '100134')\n\n533800         MOVE '   10' TO HOLD-PROV-CBSA\n533900                        P-NEW-CBSA-STAND-AMT-LOC.\n534000",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "534100     IF (P-NEW-PROVIDER-NO = '130018')\n\n534200         MOVE '   13' TO HOLD-PROV-CBSA\n534300                        P-NEW-CBSA-STAND-AMT-LOC.\n534400\n534500     IF (P-NEW-PROVIDER-NO = '140167')\n534600         MOVE '   14' TO HOLD-PROV-CBSA",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "534500     IF (P-NEW-PROVIDER-NO = '140167')\n\n534600         MOVE '   14' TO HOLD-PROV-CBSA",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "534900     IF B-21-DISCHARGE-DATE > 20051231\n\n535000        IF (P-NEW-PROVIDER-NO = '150078')",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "535000        IF (P-NEW-PROVIDER-NO = '150078')\n\n535100           MOVE '   15' TO HOLD-PROV-CBSA",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "535400     IF B-21-DISCHARGE-DATE < 20060101\n\n535500        IF (P-NEW-PROVIDER-NO = '150051' OR '150078')\n535600           MOVE '   15' TO HOLD-PROV-CBSA\n535700                          P-NEW-CBSA-STAND-AMT-LOC.\n535800\n535900     IF (P-NEW-PROVIDER-NO = '170137')",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "535500        IF (P-NEW-PROVIDER-NO = '150051' OR '150078')\n\n535600           MOVE '   15' TO HOLD-PROV-CBSA\n535700                          P-NEW-CBSA-STAND-AMT-LOC.\n535800",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "535900     IF (P-NEW-PROVIDER-NO = '170137')\n\n536000         MOVE '   17' TO HOLD-PROV-CBSA\n536100                        P-NEW-CBSA-STAND-AMT-LOC.\n536200",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "536300     IF (P-NEW-PROVIDER-NO = '190048' OR '190110')\n\n536400         MOVE '   19' TO HOLD-PROV-CBSA\n536500                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "536700     IF (P-NEW-PROVIDER-NO = '230042' OR '230078')\n\n536800         MOVE '   23' TO HOLD-PROV-CBSA\n536900                        P-NEW-CBSA-STAND-AMT-LOC.\n537000\n537100     IF (P-NEW-PROVIDER-NO = '240037' OR '240122')\n537200         MOVE '   24' TO HOLD-PROV-CBSA",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "537100     IF (P-NEW-PROVIDER-NO = '240037' OR '240122')\n\n537200         MOVE '   24' TO HOLD-PROV-CBSA\n537300                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "537500     IF (P-NEW-PROVIDER-NO = '260006')\n\n537600         MOVE '   26' TO HOLD-PROV-CBSA",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "537900     IF (P-NEW-PROVIDER-NO = '300009')\n\n538000         MOVE '   30' TO HOLD-PROV-CBSA",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "538300     IF (P-NEW-PROVIDER-NO = '330268')\n\n538400         MOVE '   33' TO HOLD-PROV-CBSA",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "538700     IF (P-NEW-PROVIDER-NO = '370054')\n\n538800         MOVE '   37' TO HOLD-PROV-CBSA",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "539100     IF (P-NEW-PROVIDER-NO = '380040' OR '380084')\n\n539200         MOVE '   38' TO HOLD-PROV-CBSA",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "539500     IF (P-NEW-PROVIDER-NO = '390181' OR '390183' OR\n\n539600                             '390201')\n539700         MOVE '   39' TO HOLD-PROV-CBSA\n539800                        P-NEW-CBSA-STAND-AMT-LOC.\n539900\n540000     IF (P-NEW-PROVIDER-NO = '440135')",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "540000     IF (P-NEW-PROVIDER-NO = '440135')\n\n540100         MOVE '   44' TO HOLD-PROV-CBSA\n540200                        P-NEW-CBSA-STAND-AMT-LOC.\n540300",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "540400     IF (P-NEW-PROVIDER-NO = '450052' OR '450078' OR\n\n540500                             '450243' OR '450276' OR\n540600                             '450348')\n540700         MOVE '   45' TO HOLD-PROV-CBSA\n540800                        P-NEW-CBSA-STAND-AMT-LOC.\n540900",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "541000     IF (P-NEW-PROVIDER-NO = '500023' OR '500043' OR\n\n541100                             '500086' OR '500103' OR\n541200                             '500122' OR '500147' OR\n541300                             '500148')\n541400         MOVE '   50' TO HOLD-PROV-CBSA\n541500                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "542400     IF (P-NEW-PROVIDER-NO = '050192' OR '050469' OR\n\n542500                             '050528' OR '050618')\n542600         MOVE '   05' TO HOLD-PROV-CBSA\n542700                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "542900     IF (P-NEW-PROVIDER-NO = '070004')\n\n543000         MOVE '   07' TO HOLD-PROV-CBSA\n543100                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "543300     IF (P-NEW-PROVIDER-NO = '100048' OR '100134')\n\n543400         MOVE '   10' TO HOLD-PROV-CBSA\n543500                        P-NEW-CBSA-STAND-AMT-LOC.\n543600\n543700     IF (P-NEW-PROVIDER-NO = '140167')",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "543700     IF (P-NEW-PROVIDER-NO = '140167')\n\n543800         MOVE '   14' TO HOLD-PROV-CBSA\n543900                        P-NEW-CBSA-STAND-AMT-LOC.\n544000\n544100     IF (P-NEW-PROVIDER-NO = '170137')\n544200         MOVE '   17' TO HOLD-PROV-CBSA\n544300                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "544100     IF (P-NEW-PROVIDER-NO = '170137')\n\n544200         MOVE '   17' TO HOLD-PROV-CBSA\n544300                        P-NEW-CBSA-STAND-AMT-LOC.\n544400",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "544500     IF (P-NEW-PROVIDER-NO = '230078')\n\n544600         MOVE '   23' TO HOLD-PROV-CBSA\n544700                        P-NEW-CBSA-STAND-AMT-LOC.\n544800",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "544900     IF (P-NEW-PROVIDER-NO = '260006' OR '260047' OR '260195')\n\n545000         MOVE '   26' TO HOLD-PROV-CBSA\n545100                        P-NEW-CBSA-STAND-AMT-LOC.\n545200\n545300     IF (P-NEW-PROVIDER-NO = '330044' OR '330245' OR '330268')\n545400         MOVE '   33' TO HOLD-PROV-CBSA\n545500                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "545300     IF (P-NEW-PROVIDER-NO = '330044' OR '330245' OR '330268')\n\n545400         MOVE '   33' TO HOLD-PROV-CBSA\n545500                        P-NEW-CBSA-STAND-AMT-LOC.\n545600\n545700     IF (P-NEW-PROVIDER-NO = '360125')\n545800         MOVE '   36' TO HOLD-PROV-CBSA\n545900                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "545700     IF (P-NEW-PROVIDER-NO = '360125')\n\n545800         MOVE '   36' TO HOLD-PROV-CBSA",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "546100     IF (P-NEW-PROVIDER-NO = '370054')\n\n546200         MOVE '   37' TO HOLD-PROV-CBSA\n546300                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "546500     IF (P-NEW-PROVIDER-NO = '380040')\n\n546600         MOVE '   38' TO HOLD-PROV-CBSA\n546700                        P-NEW-CBSA-STAND-AMT-LOC.\n546800",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "546900     IF (P-NEW-PROVIDER-NO = '440135' OR '440144')\n\n547000         MOVE '   44' TO HOLD-PROV-CBSA\n547100                        P-NEW-CBSA-STAND-AMT-LOC.\n547200\n547300     IF (P-NEW-PROVIDER-NO = '450052' OR '450078' OR\n547400                             '450243' OR '450348')",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "547300     IF (P-NEW-PROVIDER-NO = '450052' OR '450078' OR\n\n547400                             '450243' OR '450348')\n547500         MOVE '   45' TO HOLD-PROV-CBSA\n547600                        P-NEW-CBSA-STAND-AMT-LOC.\n547700\n547800     IF (P-NEW-PROVIDER-NO = '500148')\n547900         MOVE '   50' TO HOLD-PROV-CBSA",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "547800     IF (P-NEW-PROVIDER-NO = '500148')\n\n547900         MOVE '   50' TO HOLD-PROV-CBSA\n548000                        P-NEW-CBSA-STAND-AMT-LOC.\n548100\n548200     IF (P-NEW-PROVIDER-NO = '520060')\n548300         MOVE '   52' TO HOLD-PROV-CBSA",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "548200     IF (P-NEW-PROVIDER-NO = '520060')\n\n548300         MOVE '   52' TO HOLD-PROV-CBSA\n548400                        P-NEW-CBSA-STAND-AMT-LOC.\n548500\n548600 2800-2007-EXIT.   EXIT.\n548700",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "549300     IF (P-NEW-PROVIDER-NO = '050192' OR\n\n549400                             '050528' OR '050618')\n549500         MOVE '   05' TO HOLD-PROV-CBSA\n549600                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "549800     IF (P-NEW-PROVIDER-NO = '100134')\n\n549900         MOVE '   10' TO HOLD-PROV-CBSA\n550000                        P-NEW-CBSA-STAND-AMT-LOC.\n550100",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "550200     IF (P-NEW-PROVIDER-NO = '170137')\n\n550300         MOVE '   17' TO HOLD-PROV-CBSA\n550400                        P-NEW-CBSA-STAND-AMT-LOC.\n550500\n550600     IF (P-NEW-PROVIDER-NO = '220051' OR '230078')\n550700         MOVE '   23' TO HOLD-PROV-CBSA",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "550600     IF (P-NEW-PROVIDER-NO = '220051' OR '230078')\n\n550700         MOVE '   23' TO HOLD-PROV-CBSA\n550800                        P-NEW-CBSA-STAND-AMT-LOC.\n550900\n551000     IF (P-NEW-PROVIDER-NO = '250017')",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "551000     IF (P-NEW-PROVIDER-NO = '250017')\n\n551100         MOVE '   25' TO HOLD-PROV-CBSA",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "551400     IF (P-NEW-PROVIDER-NO = '260006' OR '260195')\n\n551500         MOVE '   26' TO HOLD-PROV-CBSA\n551600                        P-NEW-CBSA-STAND-AMT-LOC.\n551700\n551800     IF (P-NEW-PROVIDER-NO = '330268')",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "551800     IF (P-NEW-PROVIDER-NO = '330268')\n\n551900         MOVE '   33' TO HOLD-PROV-CBSA\n552000                        P-NEW-CBSA-STAND-AMT-LOC.\n552100\n552200     IF (P-NEW-PROVIDER-NO = '360125')\n552300         MOVE '   36' TO HOLD-PROV-CBSA",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "552200     IF (P-NEW-PROVIDER-NO = '360125')\n\n552300         MOVE '   36' TO HOLD-PROV-CBSA\n552400                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "552600     IF (P-NEW-PROVIDER-NO = '370054')\n\n552700         MOVE '   37' TO HOLD-PROV-CBSA\n552800                        P-NEW-CBSA-STAND-AMT-LOC.\n552900\n553000     IF (P-NEW-PROVIDER-NO = '380040')\n553100         MOVE '   38' TO HOLD-PROV-CBSA\n553200                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "553000     IF (P-NEW-PROVIDER-NO = '380040')\n\n553100         MOVE '   38' TO HOLD-PROV-CBSA\n553200                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "553400     IF (P-NEW-PROVIDER-NO = '390130' OR '390183' OR\n\n553500                             '390185' OR '390201')\n553600         MOVE '   39' TO HOLD-PROV-CBSA",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "553900     IF (P-NEW-PROVIDER-NO = '440135')\n\n554000         MOVE '   44' TO HOLD-PROV-CBSA",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "554300     IF (P-NEW-PROVIDER-NO = '450052' OR '450078' OR\n\n554400                             '450243' OR '450348')\n554500         MOVE '   45' TO HOLD-PROV-CBSA\n554600                        P-NEW-CBSA-STAND-AMT-LOC.\n554700\n554800     IF (P-NEW-PROVIDER-NO = '500148')",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "554800     IF (P-NEW-PROVIDER-NO = '500148')\n\n554900         MOVE '   50' TO HOLD-PROV-CBSA\n555000                        P-NEW-CBSA-STAND-AMT-LOC.\n555100\n555200 2800-2008-EXIT.   EXIT.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "555900     IF (P-NEW-PROVIDER-NO = '040118')\n\n556000         MOVE '   04' TO HOLD-PROV-CBSA\n556100                        P-NEW-CBSA-STAND-AMT-LOC.\n556200\n556300     IF (P-NEW-PROVIDER-NO = '234202' OR",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "556300     IF (P-NEW-PROVIDER-NO = '234202' OR\n\n556400                             '329008' OR '040140')\n556500         MOVE '   05' TO HOLD-PROV-CBSA\n556600                        P-NEW-CBSA-STAND-AMT-LOC.\n556700\n556800     IF (P-NEW-PROVIDER-NO = '070004' OR\n556900                             '070036')",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "556800     IF (P-NEW-PROVIDER-NO = '070004' OR\n\n556900                             '070036')\n557000         MOVE '   07' TO HOLD-PROV-CBSA\n557100                        P-NEW-CBSA-STAND-AMT-LOC.\n557200",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "557300     IF (P-NEW-PROVIDER-NO = '100048' OR\n\n557400                             '100118' OR '100134')",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "557800     IF (P-NEW-PROVIDER-NO = '140167')\n\n557900         MOVE '   14' TO HOLD-PROV-CBSA\n558000                        P-NEW-CBSA-STAND-AMT-LOC.\n558100",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "558200     IF (P-NEW-PROVIDER-NO = '170137')\n\n558300         MOVE '   17' TO HOLD-PROV-CBSA\n558400                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "558600     IF (P-NEW-PROVIDER-NO = '180038')\n\n558700         MOVE '   18' TO HOLD-PROV-CBSA\n558800                        P-NEW-CBSA-STAND-AMT-LOC.\n558900\n559000     IF (P-NEW-PROVIDER-NO = '220051')",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "559000     IF (P-NEW-PROVIDER-NO = '220051')\n\n559100         MOVE '   22' TO HOLD-PROV-CBSA\n559200                        P-NEW-CBSA-STAND-AMT-LOC.\n559300\n559400     IF (P-NEW-PROVIDER-NO = '230078')",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "559400     IF (P-NEW-PROVIDER-NO = '230078')\n\n559500         MOVE '   23' TO HOLD-PROV-CBSA",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "559800     IF (P-NEW-PROVIDER-NO = '250017')\n\n559900         MOVE '   25' TO HOLD-PROV-CBSA\n560000                        P-NEW-CBSA-STAND-AMT-LOC.\n560100\n560200     IF (P-NEW-PROVIDER-NO = '260006' OR '260047' OR '260195')\n560300         MOVE '   26' TO HOLD-PROV-CBSA\n560400                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "560200     IF (P-NEW-PROVIDER-NO = '260006' OR '260047' OR '260195')\n\n560300         MOVE '   26' TO HOLD-PROV-CBSA\n560400                        P-NEW-CBSA-STAND-AMT-LOC.\n560500\n560600     IF (P-NEW-PROVIDER-NO = '330235' OR '330268')",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "560600     IF (P-NEW-PROVIDER-NO = '330235' OR '330268')\n\n560700         MOVE '   33' TO HOLD-PROV-CBSA\n560800                        P-NEW-CBSA-STAND-AMT-LOC.\n560900\n561000     IF (P-NEW-PROVIDER-NO = '360125')",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "561000     IF (P-NEW-PROVIDER-NO = '360125')\n\n561100         MOVE '   36' TO HOLD-PROV-CBSA\n561200                        P-NEW-CBSA-STAND-AMT-LOC.\n561300\n561400     IF (P-NEW-PROVIDER-NO = '370054')\n561500         MOVE '   37' TO HOLD-PROV-CBSA",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "561400     IF (P-NEW-PROVIDER-NO = '370054')\n\n561500         MOVE '   37' TO HOLD-PROV-CBSA\n561600                        P-NEW-CBSA-STAND-AMT-LOC.\n561700\n561800     IF (P-NEW-PROVIDER-NO = '380040')\n561900         MOVE '   38' TO HOLD-PROV-CBSA\n562000                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "561800     IF (P-NEW-PROVIDER-NO = '380040')\n\n561900         MOVE '   38' TO HOLD-PROV-CBSA\n562000                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "562200     IF (P-NEW-PROVIDER-NO = '390130' OR '390183' OR\n\n562300                             '390233')\n562400         MOVE '   39' TO HOLD-PROV-CBSA\n562500                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "562700     IF (P-NEW-PROVIDER-NO = '440135')\n\n562800         MOVE '   44' TO HOLD-PROV-CBSA",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "563100     IF (P-NEW-PROVIDER-NO = '450052' OR '450078' OR\n\n563200                             '450243' OR '450348')",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "563600     IF (P-NEW-PROVIDER-NO = '490116')\n\n563700         MOVE '   49' TO HOLD-PROV-CBSA\n563800                        P-NEW-CBSA-STAND-AMT-LOC.\n563900\n564000     IF (P-NEW-PROVIDER-NO = '500148')",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "564000     IF (P-NEW-PROVIDER-NO = '500148')\n\n564100         MOVE '   50' TO HOLD-PROV-CBSA\n564200                        P-NEW-CBSA-STAND-AMT-LOC.\n564300\n564400 2800-2009-EXIT.   EXIT.\n564500",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "565100     IF (P-NEW-PROVIDER-NO = '040118')\n\n565200         MOVE '   04' TO HOLD-PROV-CBSA",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "565500     IF (P-NEW-PROVIDER-NO = '050192' OR\n\n565600                             '050528' OR '050618')\n565700         MOVE '   05' TO HOLD-PROV-CBSA\n565800                        P-NEW-CBSA-STAND-AMT-LOC.\n565900\n566000     IF (P-NEW-PROVIDER-NO = '070004')\n566100         MOVE '   07' TO HOLD-PROV-CBSA",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "566000     IF (P-NEW-PROVIDER-NO = '070004')\n\n566100         MOVE '   07' TO HOLD-PROV-CBSA\n566200                        P-NEW-CBSA-STAND-AMT-LOC.\n566300\n566400     IF (P-NEW-PROVIDER-NO = '100048' OR",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "566400     IF (P-NEW-PROVIDER-NO = '100048' OR\n\n566500                             '100118' OR '100134')\n566600         MOVE '   10' TO HOLD-PROV-CBSA\n566700                        P-NEW-CBSA-STAND-AMT-LOC.\n566800\n566900     IF (P-NEW-PROVIDER-NO = '140167')",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "566900     IF (P-NEW-PROVIDER-NO = '140167')\n\n567000         MOVE '   14' TO HOLD-PROV-CBSA",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "567300     IF (P-NEW-PROVIDER-NO = '170137')\n\n567400         MOVE '   17' TO HOLD-PROV-CBSA\n567500                        P-NEW-CBSA-STAND-AMT-LOC.\n567600\n567700     IF (P-NEW-PROVIDER-NO = '180038')",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "567700     IF (P-NEW-PROVIDER-NO = '180038')\n\n567800         MOVE '   18' TO HOLD-PROV-CBSA\n567900                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "568100     IF (P-NEW-PROVIDER-NO = '220051')\n\n568200         MOVE '   22' TO HOLD-PROV-CBSA\n568300                        P-NEW-CBSA-STAND-AMT-LOC.\n568400\n568500     IF (P-NEW-PROVIDER-NO = '230078')",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "568500     IF (P-NEW-PROVIDER-NO = '230078')\n\n568600         MOVE '   23' TO HOLD-PROV-CBSA\n568700                        P-NEW-CBSA-STAND-AMT-LOC.\n568800\n568900     IF (P-NEW-PROVIDER-NO = '250017')",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "568900     IF (P-NEW-PROVIDER-NO = '250017')\n\n569000         MOVE '   25' TO HOLD-PROV-CBSA\n569100                        P-NEW-CBSA-STAND-AMT-LOC.\n569200\n569300     IF (P-NEW-PROVIDER-NO = '260006' OR '260034' OR",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "569300     IF (P-NEW-PROVIDER-NO = '260006' OR '260034' OR\n\n569400                             '260047' OR '260195')\n569500         MOVE '   26' TO HOLD-PROV-CBSA\n569600                        P-NEW-CBSA-STAND-AMT-LOC.\n569700\n569800     IF (P-NEW-PROVIDER-NO = '330235' OR '330268')\n569900         MOVE '   33' TO HOLD-PROV-CBSA",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "569800     IF (P-NEW-PROVIDER-NO = '330235' OR '330268')\n\n569900         MOVE '   33' TO HOLD-PROV-CBSA\n570000                        P-NEW-CBSA-STAND-AMT-LOC.\n570100\n570200     IF (P-NEW-PROVIDER-NO = '300023')",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "570200     IF (P-NEW-PROVIDER-NO = '300023')\n\n570300         MOVE '   30' TO HOLD-PROV-CBSA\n570400                        P-NEW-CBSA-STAND-AMT-LOC.\n570500\n570600     IF (P-NEW-PROVIDER-NO = '360125')",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "570600     IF (P-NEW-PROVIDER-NO = '360125')\n\n570700         MOVE '   36' TO HOLD-PROV-CBSA\n570800                        P-NEW-CBSA-STAND-AMT-LOC.\n570900\n571000     IF (P-NEW-PROVIDER-NO = '370054')",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "571000     IF (P-NEW-PROVIDER-NO = '370054')\n\n571100         MOVE '   37' TO HOLD-PROV-CBSA\n571200                        P-NEW-CBSA-STAND-AMT-LOC.\n571300",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "571400     IF (P-NEW-PROVIDER-NO = '380040')\n\n571500         MOVE '   38' TO HOLD-PROV-CBSA\n571600                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "571800     IF (P-NEW-PROVIDER-NO = '390130' OR '390183' OR\n\n571900                             '390233')\n572000         MOVE '   39' TO HOLD-PROV-CBSA\n572100                        P-NEW-CBSA-STAND-AMT-LOC.\n572200\n572300     IF (P-NEW-PROVIDER-NO = '450052' OR '450078' OR\n572400                             '450243' OR '450348')",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "572300     IF (P-NEW-PROVIDER-NO = '450052' OR '450078' OR\n\n572400                             '450243' OR '450348')\n572500         MOVE '   45' TO HOLD-PROV-CBSA\n572600                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "572800     IF (P-NEW-PROVIDER-NO = '490116')\n\n572900         MOVE '   49' TO HOLD-PROV-CBSA\n573000                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "573200     IF (P-NEW-PROVIDER-NO = '500148')\n\n573300         MOVE '   50' TO HOLD-PROV-CBSA\n573400                        P-NEW-CBSA-STAND-AMT-LOC.\n573500\n573600 2800-2010-EXIT.   EXIT.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "574400     IF (P-NEW-PROVIDER-NO = '040118')\n\n574500         MOVE '   04' TO HOLD-PROV-CBSA\n574600                        P-NEW-CBSA-STAND-AMT-LOC.\n574700\n574800     IF (P-NEW-PROVIDER-NO = '050192' OR\n574900                             '050528' OR '050618')",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "574800     IF (P-NEW-PROVIDER-NO = '050192' OR\n\n574900                             '050528' OR '050618')",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "575300     IF (P-NEW-PROVIDER-NO = '070004')\n\n575400         MOVE '   07' TO HOLD-PROV-CBSA\n575500                        P-NEW-CBSA-STAND-AMT-LOC.\n575600\n575700     IF (P-NEW-PROVIDER-NO = '100048' OR\n575800                             '100118' OR '100134')\n575900         MOVE '   10' TO HOLD-PROV-CBSA",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "575700     IF (P-NEW-PROVIDER-NO = '100048' OR\n\n575800                             '100118' OR '100134')\n575900         MOVE '   10' TO HOLD-PROV-CBSA\n576000                        P-NEW-CBSA-STAND-AMT-LOC.\n576100",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "576200     IF (P-NEW-PROVIDER-NO = '140167')\n\n576300         MOVE '   14' TO HOLD-PROV-CBSA\n576400                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "576600     IF (P-NEW-PROVIDER-NO = '170037' OR '170137')\n\n576700         MOVE '   17' TO HOLD-PROV-CBSA\n576800                        P-NEW-CBSA-STAND-AMT-LOC.\n576900\n577000     IF (P-NEW-PROVIDER-NO = '180016' OR '180038')",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "577000     IF (P-NEW-PROVIDER-NO = '180016' OR '180038')\n\n577100         MOVE '   18' TO HOLD-PROV-CBSA\n577200                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "577400     IF (P-NEW-PROVIDER-NO = '220051')\n\n577500         MOVE '   22' TO HOLD-PROV-CBSA\n577600                        P-NEW-CBSA-STAND-AMT-LOC.\n577700",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "577800     IF (P-NEW-PROVIDER-NO = '230040' OR '230078')\n\n577900         MOVE '   23' TO HOLD-PROV-CBSA",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "578200     IF (P-NEW-PROVIDER-NO = '260006' OR '260034' OR\n\n578300                             '260047' OR '260195')\n578400         MOVE '   26' TO HOLD-PROV-CBSA",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "578700     IF (P-NEW-PROVIDER-NO = '300023')\n\n578800         MOVE '   30' TO HOLD-PROV-CBSA\n578900                        P-NEW-CBSA-STAND-AMT-LOC.\n579000\n579100     IF (P-NEW-PROVIDER-NO = '330215' OR '330235' OR",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "579100     IF (P-NEW-PROVIDER-NO = '330215' OR '330235' OR\n\n579200                             '330268')",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "579600     IF (P-NEW-PROVIDER-NO = '340010')\n\n579700         MOVE '   34' TO HOLD-PROV-CBSA\n579800                        P-NEW-CBSA-STAND-AMT-LOC.\n579900\n580000     IF (P-NEW-PROVIDER-NO = '360125')\n580100         MOVE '   36' TO HOLD-PROV-CBSA",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "580000     IF (P-NEW-PROVIDER-NO = '360125')\n\n580100         MOVE '   36' TO HOLD-PROV-CBSA\n580200                        P-NEW-CBSA-STAND-AMT-LOC.\n580300\n580400     IF (P-NEW-PROVIDER-NO = '370054')\n580500         MOVE '   37' TO HOLD-PROV-CBSA\n580600                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "580400     IF (P-NEW-PROVIDER-NO = '370054')\n\n580500         MOVE '   37' TO HOLD-PROV-CBSA\n580600                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "580800     IF (P-NEW-PROVIDER-NO = '380040')\n\n580900         MOVE '   38' TO HOLD-PROV-CBSA\n581000                        P-NEW-CBSA-STAND-AMT-LOC.\n581100",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "581200     IF (P-NEW-PROVIDER-NO = '390130' OR '390183' OR\n\n581300                             '390233')\n581400         MOVE '   39' TO HOLD-PROV-CBSA\n581500                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "581700     IF (P-NEW-PROVIDER-NO = '450052' OR '450078' OR\n\n581800                             '450243' OR '450348')\n581900         MOVE '   45' TO HOLD-PROV-CBSA",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "582200     IF (P-NEW-PROVIDER-NO = '490116')\n\n582300         MOVE '   49' TO HOLD-PROV-CBSA",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "582600     IF (P-NEW-PROVIDER-NO = '500148')\n\n582700         MOVE '   50' TO HOLD-PROV-CBSA\n582800                        P-NEW-CBSA-STAND-AMT-LOC.\n582900\n583000\n583100 2800-2011-EXIT.   EXIT.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "584000     IF (P-NEW-PROVIDER-NO = '040118')\n\n584100         MOVE '   04' TO HOLD-PROV-CBSA",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "584400     IF (P-NEW-PROVIDER-NO = '050192' OR\n\n584500                             '050528' OR '050618')",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "584900     IF (P-NEW-PROVIDER-NO = '070004')\n\n585000         MOVE '   07' TO HOLD-PROV-CBSA\n585100                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "585300     IF (P-NEW-PROVIDER-NO = '100048' OR\n\n585400                             '100118' OR '100134')",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "585800     IF (P-NEW-PROVIDER-NO = '140167')\n\n585900         MOVE '   14' TO HOLD-PROV-CBSA\n586000                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "586200     IF (P-NEW-PROVIDER-NO = '150003')\n\n586300         MOVE '   15' TO HOLD-PROV-CBSA\n586400                        P-NEW-CBSA-STAND-AMT-LOC.\n586500",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "586600     IF (P-NEW-PROVIDER-NO = '170074' OR '170137')\n\n586700         MOVE '   17' TO HOLD-PROV-CBSA",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "587000     IF (P-NEW-PROVIDER-NO = '180016' OR '180038')\n\n587100         MOVE '   18' TO HOLD-PROV-CBSA\n587200                        P-NEW-CBSA-STAND-AMT-LOC.\n587300",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "587400     IF (P-NEW-PROVIDER-NO = '220051')\n\n587500         MOVE '   22' TO HOLD-PROV-CBSA\n587600                        P-NEW-CBSA-STAND-AMT-LOC.\n587700\n587800     IF (P-NEW-PROVIDER-NO = '230040' OR '230078')\n587900         MOVE '   23' TO HOLD-PROV-CBSA",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "587800     IF (P-NEW-PROVIDER-NO = '230040' OR '230078')\n\n587900         MOVE '   23' TO HOLD-PROV-CBSA\n588000                        P-NEW-CBSA-STAND-AMT-LOC.\n588100\n588200     IF (P-NEW-PROVIDER-NO = '260006' OR '260034' OR",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "588200     IF (P-NEW-PROVIDER-NO = '260006' OR '260034' OR\n\n588300                             '260047' OR '260195')\n588400         MOVE '   26' TO HOLD-PROV-CBSA\n588500                        P-NEW-CBSA-STAND-AMT-LOC.\n588600",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "588700     IF (P-NEW-PROVIDER-NO = '300023')\n\n588800         MOVE '   30' TO HOLD-PROV-CBSA",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "589100     IF (P-NEW-PROVIDER-NO = '330013' OR '330057' OR\n\n589200                             '330108' OR '330164' OR\n589300                             '330215' OR '330235' OR",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "589800     IF (P-NEW-PROVIDER-NO = '340010')\n\n589900         MOVE '   34' TO HOLD-PROV-CBSA\n590000                        P-NEW-CBSA-STAND-AMT-LOC.\n590100\n590200     IF (P-NEW-PROVIDER-NO = '360125')",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "590200     IF (P-NEW-PROVIDER-NO = '360125')\n\n590300         MOVE '   36' TO HOLD-PROV-CBSA\n590400                        P-NEW-CBSA-STAND-AMT-LOC.\n590500\n590600     IF (P-NEW-PROVIDER-NO = '370054')",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "590600     IF (P-NEW-PROVIDER-NO = '370054')\n\n590700         MOVE '   37' TO HOLD-PROV-CBSA\n590800                        P-NEW-CBSA-STAND-AMT-LOC.\n590900",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "591000     IF (P-NEW-PROVIDER-NO = '380040')\n\n591100         MOVE '   38' TO HOLD-PROV-CBSA\n591200                        P-NEW-CBSA-STAND-AMT-LOC.\n591300\n591400     IF (P-NEW-PROVIDER-NO = '390130' OR '390183' OR\n591500                             '390233')\n591600         MOVE '   39' TO HOLD-PROV-CBSA",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "591400     IF (P-NEW-PROVIDER-NO = '390130' OR '390183' OR\n\n591500                             '390233')\n591600         MOVE '   39' TO HOLD-PROV-CBSA\n591700                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "591900     IF (P-NEW-PROVIDER-NO = '420038')\n\n592000         MOVE '   42' TO HOLD-PROV-CBSA\n592100                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "592300     IF (P-NEW-PROVIDER-NO = '450052' OR '450078' OR\n\n592400                             '450243' OR '450348')\n592500         MOVE '   45' TO HOLD-PROV-CBSA\n592600                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "592800     IF (P-NEW-PROVIDER-NO = '490116' OR '490116')\n\n592900         MOVE '   49' TO HOLD-PROV-CBSA\n593000                        P-NEW-CBSA-STAND-AMT-LOC.\n593100",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "593200     IF (P-NEW-PROVIDER-NO = '500148')\n\n593300         MOVE '   50' TO HOLD-PROV-CBSA\n593400                        P-NEW-CBSA-STAND-AMT-LOC.\n593500",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "594500     IF (P-NEW-PROVIDER-NO = '290009')\n\n594600         MOVE '   29' TO HOLD-PROV-CBSA\n594700                        P-NEW-CBSA-STAND-AMT-LOC.\n594800\n594900     IF (P-NEW-PROVIDER-NO = '030024')\n595000         MOVE '   03' TO HOLD-PROV-CBSA\n595100                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "594900     IF (P-NEW-PROVIDER-NO = '030024')\n\n595000         MOVE '   03' TO HOLD-PROV-CBSA\n595100                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "595300     IF (P-NEW-PROVIDER-NO = '050192' OR\n\n595400                             '050528' OR '050618')\n595500         MOVE '   05' TO HOLD-PROV-CBSA\n595600                        P-NEW-CBSA-STAND-AMT-LOC.\n595700\n595800     IF (P-NEW-PROVIDER-NO = '070004')",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "595800     IF (P-NEW-PROVIDER-NO = '070004')\n\n595900         MOVE '   07' TO HOLD-PROV-CBSA\n596000                        P-NEW-CBSA-STAND-AMT-LOC.\n596100\n596200     IF (P-NEW-PROVIDER-NO = '100048' OR '100090' OR\n596300                             '100118' OR '100134')",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "596200     IF (P-NEW-PROVIDER-NO = '100048' OR '100090' OR\n\n596300                             '100118' OR '100134')\n596400         MOVE '   10' TO HOLD-PROV-CBSA\n596500                        P-NEW-CBSA-STAND-AMT-LOC.\n596600",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "596700     IF (P-NEW-PROVIDER-NO = '170074' OR '170137')\n\n596800         MOVE '   17' TO HOLD-PROV-CBSA\n596900                        P-NEW-CBSA-STAND-AMT-LOC.\n597000\n597100     IF (P-NEW-PROVIDER-NO = '180016' OR '180038')\n597200         MOVE '   18' TO HOLD-PROV-CBSA",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "597100     IF (P-NEW-PROVIDER-NO = '180016' OR '180038')\n\n597200         MOVE '   18' TO HOLD-PROV-CBSA\n597300                        P-NEW-CBSA-STAND-AMT-LOC.\n597400\n597500     IF (P-NEW-PROVIDER-NO = '220051')",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "597500     IF (P-NEW-PROVIDER-NO = '220051')\n\n597600         MOVE '   22' TO HOLD-PROV-CBSA",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "597900     IF (P-NEW-PROVIDER-NO = '230040' OR '230078')\n\n598000         MOVE '   23' TO HOLD-PROV-CBSA\n598100                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "598300     IF (P-NEW-PROVIDER-NO = '260006' OR '260034' OR\n\n598400                             '260047' OR '260195')\n598500         MOVE '   26' TO HOLD-PROV-CBSA\n598600                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "598800     IF (P-NEW-PROVIDER-NO = '330108' OR\n\n598900                             '330215' OR '330235' OR\n599000                             '330268')\n599100         MOVE '   33' TO HOLD-PROV-CBSA",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "599400     IF (P-NEW-PROVIDER-NO = '340010')\n\n599500         MOVE '   34' TO HOLD-PROV-CBSA\n599600                        P-NEW-CBSA-STAND-AMT-LOC.\n599700\n599800     IF (P-NEW-PROVIDER-NO = '350011')",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "599800     IF (P-NEW-PROVIDER-NO = '350011')\n\n599900         MOVE '   35' TO HOLD-PROV-CBSA\n600000                        P-NEW-CBSA-STAND-AMT-LOC.\n600100",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "600200     IF (P-NEW-PROVIDER-NO = '360125' OR '360141')\n\n600300         MOVE '   36' TO HOLD-PROV-CBSA",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "600600     IF (P-NEW-PROVIDER-NO = '370054')\n\n600700         MOVE '   37' TO HOLD-PROV-CBSA",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "601000     IF (P-NEW-PROVIDER-NO = '380040')\n\n601100         MOVE '   38' TO HOLD-PROV-CBSA\n601200                        P-NEW-CBSA-STAND-AMT-LOC.\n601300\n601400     IF (P-NEW-PROVIDER-NO = '390130' OR '390183' OR\n601500                             '390233')",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "601400     IF (P-NEW-PROVIDER-NO = '390130' OR '390183' OR\n\n601500                             '390233')\n601600         MOVE '   39' TO HOLD-PROV-CBSA\n601700                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "601900     IF (P-NEW-PROVIDER-NO = '420009' OR '420038')\n\n602000         MOVE '   42' TO HOLD-PROV-CBSA",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "602300     IF (P-NEW-PROVIDER-NO = '440189')\n\n602400         MOVE '   44' TO HOLD-PROV-CBSA\n602500                        P-NEW-CBSA-STAND-AMT-LOC.\n602600\n602700     IF (P-NEW-PROVIDER-NO = '450052' OR '450078' OR",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "602700     IF (P-NEW-PROVIDER-NO = '450052' OR '450078' OR\n\n602800                             '450243' OR '450348')\n602900         MOVE '   45' TO HOLD-PROV-CBSA\n603000                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "603200     IF (P-NEW-PROVIDER-NO = '490004' OR '490005' OR\n\n603300                             '490116')\n603400         MOVE '   49' TO HOLD-PROV-CBSA\n603500                        P-NEW-CBSA-STAND-AMT-LOC.\n603600\n603700     IF (P-NEW-PROVIDER-NO = '500030' OR '500148')\n603800         MOVE '   50' TO HOLD-PROV-CBSA",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "603700     IF (P-NEW-PROVIDER-NO = '500030' OR '500148')\n\n603800         MOVE '   50' TO HOLD-PROV-CBSA\n603900                        P-NEW-CBSA-STAND-AMT-LOC.\n604000",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "605000     IF (P-NEW-PROVIDER-NO = '050192' OR\n\n605100                             '050225' OR\n605200                             '050528' OR\n605300                             '050618')\n605400         MOVE '   05' TO HOLD-PROV-CBSA",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "605700     IF (P-NEW-PROVIDER-NO = '060010')\n\n605800         MOVE '   06' TO HOLD-PROV-CBSA\n605900                        P-NEW-CBSA-STAND-AMT-LOC.\n606000\n606100     IF (P-NEW-PROVIDER-NO = '070004' OR",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "606100     IF (P-NEW-PROVIDER-NO = '070004' OR\n\n606200                             '070005')\n606300         MOVE '   07' TO HOLD-PROV-CBSA\n606400                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "606600     IF (P-NEW-PROVIDER-NO = '100048' OR\n\n606700                             '100090' OR\n606800                             '100118' OR\n606900                             '100134')",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "607300     IF (P-NEW-PROVIDER-NO = '140059' OR\n\n607400                             '140145')\n607500         MOVE '   14' TO HOLD-PROV-CBSA\n607600                        P-NEW-CBSA-STAND-AMT-LOC.\n607700\n607800     IF (P-NEW-PROVIDER-NO = '170074' OR",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "607800     IF (P-NEW-PROVIDER-NO = '170074' OR\n\n607900                             '170137')",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "608300     IF (P-NEW-PROVIDER-NO = '180016' OR\n\n608400                             '180038')",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "608800     IF (P-NEW-PROVIDER-NO = '190008')\n\n608900         MOVE '   19' TO HOLD-PROV-CBSA\n609000                        P-NEW-CBSA-STAND-AMT-LOC.\n609100\n609200     IF (P-NEW-PROVIDER-NO = '220051')",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "609200     IF (P-NEW-PROVIDER-NO = '220051')\n\n609300         MOVE '   22' TO HOLD-PROV-CBSA\n609400                        P-NEW-CBSA-STAND-AMT-LOC.\n609500\n609600     IF (P-NEW-PROVIDER-NO = '230040' OR\n609700                             '230078')",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "609600     IF (P-NEW-PROVIDER-NO = '230040' OR\n\n609700                             '230078')\n609800         MOVE '   23' TO HOLD-PROV-CBSA\n609900                        P-NEW-CBSA-STAND-AMT-LOC.\n610000\n610100     IF (P-NEW-PROVIDER-NO = '260006' OR\n610200                             '260034' OR",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "610100     IF (P-NEW-PROVIDER-NO = '260006' OR\n\n610200                             '260034' OR\n610300                             '260047' OR\n610400                             '260195')\n610500         MOVE '   26' TO HOLD-PROV-CBSA",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "610800     IF (P-NEW-PROVIDER-NO = '290009')\n\n610900         MOVE '   29' TO HOLD-PROV-CBSA\n611000                        P-NEW-CBSA-STAND-AMT-LOC.\n611100\n611200     IF (P-NEW-PROVIDER-NO = '330108' OR",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "611200     IF (P-NEW-PROVIDER-NO = '330108' OR\n\n611300                             '330235' OR",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "611800     IF (P-NEW-PROVIDER-NO = '340010')\n\n611900         MOVE '   34' TO HOLD-PROV-CBSA\n612000                        P-NEW-CBSA-STAND-AMT-LOC.\n612100\n612200     IF (P-NEW-PROVIDER-NO = '350011' OR",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "612200     IF (P-NEW-PROVIDER-NO = '350011' OR\n\n612300                             '350015')\n612400         MOVE '   35' TO HOLD-PROV-CBSA\n612500                        P-NEW-CBSA-STAND-AMT-LOC.\n612600",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "612700     IF (P-NEW-PROVIDER-NO = '360125')\n\n612800         MOVE '   36' TO HOLD-PROV-CBSA\n612900                        P-NEW-CBSA-STAND-AMT-LOC.\n613000\n613100     IF (P-NEW-PROVIDER-NO = '370054')\n613200         MOVE '   37' TO HOLD-PROV-CBSA",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "613100     IF (P-NEW-PROVIDER-NO = '370054')\n\n613200         MOVE '   37' TO HOLD-PROV-CBSA\n613300                        P-NEW-CBSA-STAND-AMT-LOC.\n613400\n613500     IF (P-NEW-PROVIDER-NO = '380040')\n613600         MOVE '   38' TO HOLD-PROV-CBSA\n613700                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "613500     IF (P-NEW-PROVIDER-NO = '380040')\n\n613600         MOVE '   38' TO HOLD-PROV-CBSA\n613700                        P-NEW-CBSA-STAND-AMT-LOC.\n613800\n613900     IF (P-NEW-PROVIDER-NO = '390130' OR\n614000                             '390183' OR\n614100                             '390211')",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "613900     IF (P-NEW-PROVIDER-NO = '390130' OR\n\n614000                             '390183' OR\n614100                             '390211')\n614200         MOVE '   39' TO HOLD-PROV-CBSA\n614300                        P-NEW-CBSA-STAND-AMT-LOC.\n614400\n614500     IF (P-NEW-PROVIDER-NO = '420009' OR",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "614500     IF (P-NEW-PROVIDER-NO = '420009' OR\n\n614600                             '420038')\n614700         MOVE '   42' TO HOLD-PROV-CBSA",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "615000     IF (P-NEW-PROVIDER-NO = '450052' OR\n\n615100                             '450078' OR\n615200                             '450243' OR\n615300                             '450348')\n615400         MOVE '   45' TO HOLD-PROV-CBSA",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "615700     IF (P-NEW-PROVIDER-NO = '490004' OR\n\n615800                             '490116')\n615900         MOVE '   49' TO HOLD-PROV-CBSA\n616000                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "616200     IF (P-NEW-PROVIDER-NO = '500030' OR\n\n616300                             '500148')\n616400         MOVE '   50' TO HOLD-PROV-CBSA",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "616700     IF (P-NEW-PROVIDER-NO = '510039')\n\n616800         MOVE '   51' TO HOLD-PROV-CBSA\n616900                        P-NEW-CBSA-STAND-AMT-LOC.\n617000\n617100 2800-2014-EXIT.   EXIT.",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "617600     IF B-21-DISCHARGE-DATE >= 20121001 AND\n\n617700        B-21-DISCHARGE-DATE <= 20140930\n617800        MOVE PPS-VARIABLES-SECTION1-1314",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "conditional_logic",
        "description": "Conditional logic example",
        "code": "619200     IF B-21-DISCHARGE-DATE < 20121001\n\n619300        MOVE PPS-VARIABLES-SECTION1-PRE13",
        "comments": "Executes code based on specific conditions, such as flag checks or value validation."
    },
    {
        "type": "perform_statement",
        "description": "Perform statement example",
        "code": "136500       PERFORM 0900-GET-COUNTY-CODE\n THRU 0900-EXIT\n136600     END-IF.\n136700\n136800     IF OUTM-IND = 1",
        "comments": "PERFORM statement to invoke a specific routine or section."
    },
    {
        "type": "perform_statement",
        "description": "Perform statement example",
        "code": "136900       PERFORM 0950-GET-OUTM-ADJ\n THRU 0950-EXIT\n137000         VARYING OUTM-IDX2 FROM OUTM-IDX BY 1 UNTIL\n137100         OUTM-CNTY(OUTM-IDX2) NOT = P-NEW-COUNTY-CODE-X",
        "comments": "PERFORM statement to invoke a specific routine or section."
    },
    {
        "type": "perform_statement",
        "description": "Perform statement example",
        "code": "138800        PERFORM 0500-GET-MSA\n THRU 0500-EXIT\n138900     ELSE\n139000        PERFORM 0550-GET-CBSA THRU 0550-EXIT.",
        "comments": "PERFORM statement to invoke a specific routine or section."
    },
    {
        "type": "perform_statement",
        "description": "Perform statement example",
        "code": "139000        PERFORM 0550-GET-CBSA\n THRU 0550-EXIT.\n139100\n139200***     RTC = 52  --  WAGE-INDEX NOT FOUND\n139300     IF PPS-RTC = 52\n139400          MOVE ALL '0' TO  PPS-ADDITIONAL-VARIABLES",
        "comments": "PERFORM statement to invoke a specific routine or section."
    },
    {
        "type": "perform_statement",
        "description": "Perform statement example",
        "code": "154200         PERFORM 2900-MOVE-PPS-ADDITIONAL-VARS\n THRU 2900-EXIT\n154300         GOBACK.",
        "comments": "PERFORM statement to invoke a specific routine or section."
    },
    {
        "type": "perform_statement",
        "description": "Perform statement example",
        "code": "156000         PERFORM 2900-MOVE-PPS-ADDITIONAL-VARS\n THRU 2900-EXIT\n156100         GOBACK.",
        "comments": "PERFORM statement to invoke a specific routine or section."
    },
    {
        "type": "perform_statement",
        "description": "Perform statement example",
        "code": "157800         PERFORM 2900-MOVE-PPS-ADDITIONAL-VARS\n THRU 2900-EXIT\n157900         GOBACK.\n158000*****************************************************************",
        "comments": "PERFORM statement to invoke a specific routine or section."
    },
    {
        "type": "perform_statement",
        "description": "Perform statement example",
        "code": "159500         PERFORM 2900-MOVE-PPS-ADDITIONAL-VARS\n THRU 2900-EXIT\n159600         GOBACK.\n159700*****************************************************************",
        "comments": "PERFORM statement to invoke a specific routine or section."
    },
    {
        "type": "perform_statement",
        "description": "Perform statement example",
        "code": "161200         PERFORM 2900-MOVE-PPS-ADDITIONAL-VARS\n THRU 2900-EXIT\n161300         GOBACK.\n161400*****************************************************************\n161500*****************************************************************",
        "comments": "PERFORM statement to invoke a specific routine or section."
    },
    {
        "type": "perform_statement",
        "description": "Perform statement example",
        "code": "162800         PERFORM 2900-MOVE-PPS-ADDITIONAL-VARS\n THRU 2900-EXIT\n162900         GOBACK.",
        "comments": "PERFORM statement to invoke a specific routine or section."
    },
    {
        "type": "perform_statement",
        "description": "Perform statement example",
        "code": "164400         PERFORM 2900-MOVE-PPS-ADDITIONAL-VARS\n THRU 2900-EXIT\n164500         GOBACK.\n164600*****************************************************************\n164700*****************************************************************\n164800**          THIS NEXT CALL WILL PROCESS 2008 BILLS  WITH\n164900**              A DISCHARGE DATE ON OR AFTER 20071001\n165000*****************************************************************",
        "comments": "PERFORM statement to invoke a specific routine or section."
    },
    {
        "type": "perform_statement",
        "description": "Perform statement example",
        "code": "166000         PERFORM 2900-MOVE-PPS-ADDITIONAL-VARS\n THRU 2900-EXIT\n166100         GOBACK.\n166200*****************************************************************\n166300*****************************************************************\n166400**          THIS NEXT CALL WILL PROCESS 2007 BILLS  WITH",
        "comments": "PERFORM statement to invoke a specific routine or section."
    },
    {
        "type": "perform_statement",
        "description": "Perform statement example",
        "code": "167600         PERFORM 2900-MOVE-PPS-ADDITIONAL-VARS\n THRU 2900-EXIT\n167700         GOBACK.\n167800*****************************************************************\n167900*****************************************************************\n168000**          THIS NEXT CALL WILL PROCESS 2006 BILLS  WITH\n168100**              A DISCHARGE DATE ON OR AFTER 20051001\n168200*****************************************************************",
        "comments": "PERFORM statement to invoke a specific routine or section."
    },
    {
        "type": "perform_statement",
        "description": "Perform statement example",
        "code": "169200         PERFORM 2900-MOVE-PPS-ADDITIONAL-VARS\n THRU 2900-EXIT\n169300         GOBACK.\n169400*****************************************************************\n169500*****************************************************************\n169600*****************************************************************\n169700*****************************************************************\n169800**          THIS NEXT CALL WILL PROCESS 2005 BILLS  WITH",
        "comments": "PERFORM statement to invoke a specific routine or section."
    },
    {
        "type": "perform_statement",
        "description": "Perform statement example",
        "code": "171000         PERFORM 2900-MOVE-PPS-ADDITIONAL-VARS\n THRU 2900-EXIT\n171100         GOBACK.\n171200*****************************************************************\n171300*****************************************************************\n171400*****************************************************************\n171500**          THIS NEXT CALL WILL PROCESS 2004 BILLS  WITH\n171600**              A DISCHARGE DATE ON OR AFTER 20031001",
        "comments": "PERFORM statement to invoke a specific routine or section."
    },
    {
        "type": "perform_statement",
        "description": "Perform statement example",
        "code": "172700         PERFORM 2900-MOVE-PPS-ADDITIONAL-VARS\n THRU 2900-EXIT\n172800         GOBACK.\n172900*****************************************************************",
        "comments": "PERFORM statement to invoke a specific routine or section."
    },
    {
        "type": "perform_statement",
        "description": "Perform statement example",
        "code": "174400         PERFORM 2900-MOVE-PPS-ADDITIONAL-VARS\n THRU 2900-EXIT\n174500         GOBACK.\n174600*****************************************************************\n174700*****************************************************************",
        "comments": "PERFORM statement to invoke a specific routine or section."
    },
    {
        "type": "perform_statement",
        "description": "Perform statement example",
        "code": "176100         PERFORM 2900-MOVE-PPS-ADDITIONAL-VARS\n THRU 2900-EXIT\n176200         GOBACK.\n176300*****************************************************************\n176400*****************************************************************\n176500*****************************************************************\n176600**          THIS NEXT CALL WILL PROCESS 2001 BILLS  WITH",
        "comments": "PERFORM statement to invoke a specific routine or section."
    },
    {
        "type": "perform_statement",
        "description": "Perform statement example",
        "code": "177800         PERFORM 2900-MOVE-PPS-ADDITIONAL-VARS\n THRU 2900-EXIT\n177900         GOBACK.\n178000*****************************************************************\n178100*****************************************************************\n178200*****************************************************************\n178300**          THIS NEXT CALL WILL PROCESS 2000 BILLS  WITH",
        "comments": "PERFORM statement to invoke a specific routine or section."
    },
    {
        "type": "perform_statement",
        "description": "Perform statement example",
        "code": "179500         PERFORM 2900-MOVE-PPS-ADDITIONAL-VARS\n THRU 2900-EXIT\n179600         GOBACK.\n179700*****************************************************************\n179800*****************************************************************\n179900**          THIS NEXT CALL WILL PROCESS 1999 BILLS  WITH",
        "comments": "PERFORM statement to invoke a specific routine or section."
    },
    {
        "type": "perform_statement",
        "description": "Perform statement example",
        "code": "181100         PERFORM 2900-MOVE-PPS-ADDITIONAL-VARS\n THRU 2900-EXIT\n181200         GOBACK.\n181300*****************************************************************\n181400*****************************************************************\n181500**   MOVE NEW DATA FORMAT INTO OLD DATA FORMAT\n181600**   TO PROCESS BEFORE 19981001 NON-MILLENNNIUM STANDARD",
        "comments": "PERFORM statement to invoke a specific routine or section."
    },
    {
        "type": "perform_statement",
        "description": "Perform statement example",
        "code": "182000     PERFORM 2400-CONVERT-PSF\n.\n182100     MOVE W-PROV-OLD-HOLD TO PROV-HOLD.\n182200\n182300     MOVE W-NEW-MSA             TO W-MSA.",
        "comments": "PERFORM statement to invoke a specific routine or section."
    },
    {
        "type": "perform_statement",
        "description": "Perform statement example",
        "code": "185300         PERFORM 2900-MOVE-PPS-ADDITIONAL-VARS\n THRU 2900-EXIT\n185400         GOBACK.\n185500*****************************************************************\n185600*****************************************************************\n185700**          THIS NEXT CALL WILL PROCESS 1997 BILLS  WITH",
        "comments": "PERFORM statement to invoke a specific routine or section."
    },
    {
        "type": "perform_statement",
        "description": "Perform statement example",
        "code": "186900         PERFORM 2900-MOVE-PPS-ADDITIONAL-VARS\n THRU 2900-EXIT\n187000         GOBACK.",
        "comments": "PERFORM statement to invoke a specific routine or section."
    },
    {
        "type": "perform_statement",
        "description": "Perform statement example",
        "code": "188500         PERFORM 2900-MOVE-PPS-ADDITIONAL-VARS\n THRU 2900-EXIT\n188600         GOBACK.\n188700*****************************************************************",
        "comments": "PERFORM statement to invoke a specific routine or section."
    },
    {
        "type": "perform_statement",
        "description": "Perform statement example",
        "code": "190100         PERFORM 2900-MOVE-PPS-ADDITIONAL-VARS\n THRU 2900-EXIT\n190200         GOBACK.\n190300*****************************************************************\n190400*****************************************************************\n190500**          THIS NEXT CALL WILL PROCESS 1994 BILLS  WITH",
        "comments": "PERFORM statement to invoke a specific routine or section."
    },
    {
        "type": "perform_statement",
        "description": "Perform statement example",
        "code": "191700         PERFORM 2900-MOVE-PPS-ADDITIONAL-VARS\n THRU 2900-EXIT\n191800         GOBACK.\n191900*****************************************************************\n192000*****************************************************************\n192100**          THIS NEXT CALL WILL PROCESS 1993 BILLS  WITH",
        "comments": "PERFORM statement to invoke a specific routine or section."
    },
    {
        "type": "perform_statement",
        "description": "Perform statement example",
        "code": "193300         PERFORM 2900-MOVE-PPS-ADDITIONAL-VARS\n THRU 2900-EXIT\n193400         GOBACK.\n193500*****************************************************************\n193600*****************************************************************\n193700**          THIS NEXT CALL WILL PROCESS 1992 BILLS  WITH\n193800**              A DISCHARGE DATE ON OR AFTER 19911001",
        "comments": "PERFORM statement to invoke a specific routine or section."
    },
    {
        "type": "perform_statement",
        "description": "Perform statement example",
        "code": "194900         PERFORM 2900-MOVE-PPS-ADDITIONAL-VARS\n THRU 2900-EXIT\n195000         GOBACK.\n195100*****************************************************************",
        "comments": "PERFORM statement to invoke a specific routine or section."
    },
    {
        "type": "perform_statement",
        "description": "Perform statement example",
        "code": "196500         PERFORM 2900-MOVE-PPS-ADDITIONAL-VARS\n THRU 2900-EXIT\n196600         GOBACK.\n196700*****************************************************************\n196800*****************************************************************",
        "comments": "PERFORM statement to invoke a specific routine or section."
    },
    {
        "type": "perform_statement",
        "description": "Perform statement example",
        "code": "198100         PERFORM 2900-MOVE-PPS-ADDITIONAL-VARS\n THRU 2900-EXIT\n198200         GOBACK.\n198300*****************************************************************\n198400*****************************************************************",
        "comments": "PERFORM statement to invoke a specific routine or section."
    },
    {
        "type": "perform_statement",
        "description": "Perform statement example",
        "code": "199700         PERFORM 2900-MOVE-PPS-ADDITIONAL-VARS\n THRU 2900-EXIT\n199800         GOBACK.\n199900*****************************************************************\n200000*****************************************************************\n200100**          THIS NEXT CALL WILL PROCESS 1988 BILLS  WITH\n200200**              A DISCHARGE DATE ON OR AFTER 19871001",
        "comments": "PERFORM statement to invoke a specific routine or section."
    },
    {
        "type": "perform_statement",
        "description": "Perform statement example",
        "code": "201300         PERFORM 2900-MOVE-PPS-ADDITIONAL-VARS\n THRU 2900-EXIT\n201400         GOBACK.",
        "comments": "PERFORM statement to invoke a specific routine or section."
    },
    {
        "type": "perform_statement",
        "description": "Perform statement example",
        "code": "205300         PERFORM 0190-GET-RURAL-FLOOR-2020\n THRU 0190-EXIT\n205400         GO TO 0175-EXIT\n205500       END-IF\n205600     END-IF.\n205700\n205800     SET MA1 TO 1.",
        "comments": "PERFORM statement to invoke a specific routine or section."
    },
    {
        "type": "perform_statement",
        "description": "Perform statement example",
        "code": "209400     PERFORM 0100-GET-MSA\n THRU 0100-EXIT.\n209500\n209600     IF PPS-RTC = 00",
        "comments": "PERFORM statement to invoke a specific routine or section."
    },
    {
        "type": "perform_statement",
        "description": "Perform statement example",
        "code": "209700      PERFORM 0300-N-GET-PR-WAGE-INDX\n\n209800           THRU 0300-N-EXIT VARYING MU2",
        "comments": "PERFORM statement to invoke a specific routine or section."
    },
    {
        "type": "perform_statement",
        "description": "Perform statement example",
        "code": "211000        PERFORM 0370-PRSPC-CODE-RTN\n THRU 0370-EXIT\n211100",
        "comments": "PERFORM statement to invoke a specific routine or section."
    },
    {
        "type": "perform_statement",
        "description": "Perform statement example",
        "code": "212300     PERFORM 0150-GET-CBSA\n THRU 0150-EXIT.\n212400",
        "comments": "PERFORM statement to invoke a specific routine or section."
    },
    {
        "type": "perform_statement",
        "description": "Perform statement example",
        "code": "212600      PERFORM 0350-N-GET-PR-WAGE-INDX\n\n212700           THRU 0350-EXIT VARYING MA2\n212800           FROM MA1 BY 1 UNTIL\n212900           T-CBSA (MA2) NOT = HOLD-PROV-CBSA.\n213000",
        "comments": "PERFORM statement to invoke a specific routine or section."
    },
    {
        "type": "perform_statement",
        "description": "Perform statement example",
        "code": "213600     PERFORM 0175-GET-RURAL-CBSA\n THRU 0175-EXIT.\n213700\n213800     IF PPS-RTC = 00\n213900      PERFORM 0360-N-GET-PR-RURAL-WAGE-INDX\n214000           THRU 0360-EXIT VARYING MA2\n214100           FROM MA1 BY 1 UNTIL\n214200           T-CBSA (MA2) NOT = HOLD-RURAL-CBSA.",
        "comments": "PERFORM statement to invoke a specific routine or section."
    },
    {
        "type": "perform_statement",
        "description": "Perform statement example",
        "code": "213900      PERFORM 0360-N-GET-PR-RURAL-WAGE-INDX\n\n214000           THRU 0360-EXIT VARYING MA2\n214100           FROM MA1 BY 1 UNTIL\n214200           T-CBSA (MA2) NOT = HOLD-RURAL-CBSA.\n214300",
        "comments": "PERFORM statement to invoke a specific routine or section."
    },
    {
        "type": "perform_statement",
        "description": "Perform statement example",
        "code": "221100        PERFORM 2300-1998-FLOOR-MSA\n THRU 2300-1998-EXIT.\n221200",
        "comments": "PERFORM statement to invoke a specific routine or section."
    },
    {
        "type": "perform_statement",
        "description": "Perform statement example",
        "code": "221600        PERFORM 2300-1999-FLOOR-MSA\n THRU 2300-1999-EXIT.\n221700\n221800**2000***********************************************************",
        "comments": "PERFORM statement to invoke a specific routine or section."
    },
    {
        "type": "perform_statement",
        "description": "Perform statement example",
        "code": "222100        PERFORM 2300-2000-FLOOR-MSA\n THRU 2300-2000-EXIT.\n222200\n222300**2001***********************************************************",
        "comments": "PERFORM statement to invoke a specific routine or section."
    },
    {
        "type": "perform_statement",
        "description": "Perform statement example",
        "code": "222600        PERFORM 2300-2001-FLOOR-MSA\n THRU 2300-2001-EXIT.\n222700",
        "comments": "PERFORM statement to invoke a specific routine or section."
    },
    {
        "type": "perform_statement",
        "description": "Perform statement example",
        "code": "223100        PERFORM 2300-2002-FLOOR-MSA\n THRU 2300-2002-EXIT.\n223200",
        "comments": "PERFORM statement to invoke a specific routine or section."
    },
    {
        "type": "perform_statement",
        "description": "Perform statement example",
        "code": "223500          PERFORM 2700-2002-WI-401-HOSPITAL\n THRU 2700-2002-EXIT.\n223600\n223700**2003***********************************************************\n223800     IF B-21-DISCHARGE-DATE > 20020930 AND",
        "comments": "PERFORM statement to invoke a specific routine or section."
    },
    {
        "type": "perform_statement",
        "description": "Perform statement example",
        "code": "224000          PERFORM 2700-2003-WI-401-HOSPITAL\n THRU 2700-2003-EXIT.\n224100\n224200     IF B-21-DISCHARGE-DATE > 20020930 AND\n224300        B-21-DISCHARGE-DATE < 20031001",
        "comments": "PERFORM statement to invoke a specific routine or section."
    },
    {
        "type": "perform_statement",
        "description": "Perform statement example",
        "code": "224400        PERFORM 2300-2003-FLOOR-MSA\n THRU 2300-2003-EXIT.\n224500\n224600**2004***********************************************************",
        "comments": "PERFORM statement to invoke a specific routine or section."
    },
    {
        "type": "perform_statement",
        "description": "Perform statement example",
        "code": "224900          PERFORM 2700-2004-WI-401-HOSPITAL\n THRU 2700-2004-EXIT.\n225000\n225100     IF B-21-DISCHARGE-DATE > 20030930 AND",
        "comments": "PERFORM statement to invoke a specific routine or section."
    },
    {
        "type": "perform_statement",
        "description": "Perform statement example",
        "code": "225300        PERFORM 2300-2004-FLOOR-MSA\n THRU 2300-2004-EXIT.\n225400",
        "comments": "PERFORM statement to invoke a specific routine or section."
    },
    {
        "type": "perform_statement",
        "description": "Perform statement example",
        "code": "225600     PERFORM 0100-GET-MSA\n THRU 0100-EXIT.\n225700\n225800***     RTC = 52  --  MSA NOT FOUND\n225900     IF PPS-RTC = 52    GOBACK.\n226000",
        "comments": "PERFORM statement to invoke a specific routine or section."
    },
    {
        "type": "perform_statement",
        "description": "Perform statement example",
        "code": "226200        PERFORM 0600-N-GET-WAGE-INDX\n\n226300           THRU 0600-N-EXIT VARYING MU2\n226400           FROM MU1 BY 1 UNTIL\n226500           M-MSAX-MSA (MU2) NOT = HOLD-PROV-MSAX.\n226600",
        "comments": "PERFORM statement to invoke a specific routine or section."
    },
    {
        "type": "perform_statement",
        "description": "Perform statement example",
        "code": "226900             PERFORM 0800-N-GET-INDIAN-WI\n THRU 0800-N-EXIT.\n227000\n227100***     RTC = 52  --  WAGE-INDEX NOT FOUND\n227200     IF PPS-RTC = 52    GOBACK.",
        "comments": "PERFORM statement to invoke a specific routine or section."
    },
    {
        "type": "perform_statement",
        "description": "Perform statement example",
        "code": "227700          PERFORM 2500-2000-WI-LUGAR\n THRU 2500-2000-EXIT.\n227800\n227900**2001***********************************************************\n228000     IF B-21-DISCHARGE-DATE > 20000930 AND",
        "comments": "PERFORM statement to invoke a specific routine or section."
    },
    {
        "type": "perform_statement",
        "description": "Perform statement example",
        "code": "228200          PERFORM 2500-2001-WI-LUGAR\n THRU 2500-2001-EXIT.\n228300\n228400**2003***********************************************************\n228500     IF B-21-DISCHARGE-DATE > 20020930 AND\n228600        B-21-DISCHARGE-DATE < 20031001\n228700          PERFORM 2500-2003-WI-LUGAR THRU 2500-2003-EXIT.",
        "comments": "PERFORM statement to invoke a specific routine or section."
    },
    {
        "type": "perform_statement",
        "description": "Perform statement example",
        "code": "228700          PERFORM 2500-2003-WI-LUGAR\n THRU 2500-2003-EXIT.\n228800\n228900**2004***********************************************************\n229000     IF B-21-DISCHARGE-DATE > 20031231 AND",
        "comments": "PERFORM statement to invoke a specific routine or section."
    },
    {
        "type": "perform_statement",
        "description": "Perform statement example",
        "code": "229200        PERFORM 2300-2004-RECLASS152\n THRU 2300-2004-RECLASS-EXIT.\n229300",
        "comments": "PERFORM statement to invoke a specific routine or section."
    },
    {
        "type": "perform_statement",
        "description": "Perform statement example",
        "code": "230300     PERFORM 0100-GET-MSA\n THRU 0100-EXIT.\n230400\n230500     IF PPS-RTC = 00\n230600         PERFORM 0700-N-GET-WAGE-SIZE\n230700           THRU 0700-N-EXIT VARYING MU2\n230800           FROM MU1 BY 1 UNTIL",
        "comments": "PERFORM statement to invoke a specific routine or section."
    },
    {
        "type": "perform_statement",
        "description": "Perform statement example",
        "code": "230600         PERFORM 0700-N-GET-WAGE-SIZE\n\n230700           THRU 0700-N-EXIT VARYING MU2\n230800           FROM MU1 BY 1 UNTIL",
        "comments": "PERFORM statement to invoke a specific routine or section."
    },
    {
        "type": "perform_statement",
        "description": "Perform statement example",
        "code": "231300              PERFORM 0200-N-GET-MSAPR\n THRU 0200-N-EXIT.\n231400",
        "comments": "PERFORM statement to invoke a specific routine or section."
    },
    {
        "type": "perform_statement",
        "description": "Perform statement example",
        "code": "238400          PERFORM 2700-2005-WI-401-HOSPITAL\n THRU 2700-2005-EXIT.\n238500",
        "comments": "PERFORM statement to invoke a specific routine or section."
    },
    {
        "type": "perform_statement",
        "description": "Perform statement example",
        "code": "238800          PERFORM 2750-2005-WI-401-HOSPITAL\n THRU 2750-2005-EXIT.\n238900",
        "comments": "PERFORM statement to invoke a specific routine or section."
    },
    {
        "type": "perform_statement",
        "description": "Perform statement example",
        "code": "239200        PERFORM 2300-2005-FLOOR-CBSA\n THRU 2300-2005-EXIT.\n239300\n239400**2006***********************************************************\n239500\n239600     IF B-21-DISCHARGE-DATE > 20050930 AND\n239700        B-21-DISCHARGE-DATE < 20061001",
        "comments": "PERFORM statement to invoke a specific routine or section."
    },
    {
        "type": "perform_statement",
        "description": "Perform statement example",
        "code": "239800          PERFORM 2800-2006-WI-401-HOSPITAL\n THRU 2800-2006-EXIT.\n239900\n240000     IF B-21-DISCHARGE-DATE > 20050930 AND",
        "comments": "PERFORM statement to invoke a specific routine or section."
    },
    {
        "type": "perform_statement",
        "description": "Perform statement example",
        "code": "240200        PERFORM 2300-2006-FLOOR-CBSA\n THRU 2300-2006-EXIT.\n240300",
        "comments": "PERFORM statement to invoke a specific routine or section."
    },
    {
        "type": "perform_statement",
        "description": "Perform statement example",
        "code": "240800          PERFORM 2800-2007-WI-401-HOSPITAL\n THRU 2800-2007-EXIT.\n240900\n241000     IF B-21-DISCHARGE-DATE > 20060930 AND\n241100        B-21-DISCHARGE-DATE < 20071001\n241200        PERFORM 2300-2007-FLOOR-CBSA THRU 2300-2007-EXIT.\n241300",
        "comments": "PERFORM statement to invoke a specific routine or section."
    },
    {
        "type": "perform_statement",
        "description": "Perform statement example",
        "code": "241200        PERFORM 2300-2007-FLOOR-CBSA\n THRU 2300-2007-EXIT.\n241300\n241400*****************************************************************\n241500**2008***********************************************************",
        "comments": "PERFORM statement to invoke a specific routine or section."
    },
    {
        "type": "perform_statement",
        "description": "Perform statement example",
        "code": "241900          PERFORM 2800-2008-WI-401-HOSPITAL\n THRU 2800-2008-EXIT.\n242000\n242100     IF B-21-DISCHARGE-DATE > 20070930 AND\n242200        B-21-DISCHARGE-DATE < 20081001\n242300        PERFORM 2300-2008-FLOOR-CBSA THRU 2300-2008-EXIT.\n242400\n242500*****************************************************************",
        "comments": "PERFORM statement to invoke a specific routine or section."
    },
    {
        "type": "perform_statement",
        "description": "Perform statement example",
        "code": "242300        PERFORM 2300-2008-FLOOR-CBSA\n THRU 2300-2008-EXIT.\n242400\n242500*****************************************************************\n242600**2009***********************************************************\n242700\n242800     IF B-21-DISCHARGE-DATE > 20080930 AND",
        "comments": "PERFORM statement to invoke a specific routine or section."
    },
    {
        "type": "perform_statement",
        "description": "Perform statement example",
        "code": "243000          PERFORM 2800-2009-WI-401-HOSPITAL\n THRU 2800-2009-EXIT.\n243100\n243200     IF B-21-DISCHARGE-DATE > 20080930 AND",
        "comments": "PERFORM statement to invoke a specific routine or section."
    },
    {
        "type": "perform_statement",
        "description": "Perform statement example",
        "code": "243400        PERFORM 2300-2009-FLOOR-CBSA\n THRU 2300-2009-EXIT.\n243500\n243600*****************************************************************\n243700**2010***********************************************************",
        "comments": "PERFORM statement to invoke a specific routine or section."
    },
    {
        "type": "perform_statement",
        "description": "Perform statement example",
        "code": "244100          PERFORM 2800-2010-WI-401-HOSPITAL\n THRU 2800-2010-EXIT.\n244200",
        "comments": "PERFORM statement to invoke a specific routine or section."
    },
    {
        "type": "perform_statement",
        "description": "Perform statement example",
        "code": "244500        PERFORM 2300-2010-FLOOR-CBSA\n THRU 2300-2010-EXIT.\n244600\n244700*****************************************************************\n244800**2011***********************************************************\n244900",
        "comments": "PERFORM statement to invoke a specific routine or section."
    },
    {
        "type": "perform_statement",
        "description": "Perform statement example",
        "code": "245200          PERFORM 2800-2011-WI-401-HOSPITAL\n THRU 2800-2011-EXIT.\n245300\n245400     IF B-21-DISCHARGE-DATE > 20100930 AND\n245500        B-21-DISCHARGE-DATE < 20111001\n245600        PERFORM 2300-2011-FLOOR-CBSA THRU 2300-2011-EXIT.",
        "comments": "PERFORM statement to invoke a specific routine or section."
    },
    {
        "type": "perform_statement",
        "description": "Perform statement example",
        "code": "245600        PERFORM 2300-2011-FLOOR-CBSA\n THRU 2300-2011-EXIT.\n245700\n245800**2012***********************************************************",
        "comments": "PERFORM statement to invoke a specific routine or section."
    },
    {
        "type": "perform_statement",
        "description": "Perform statement example",
        "code": "246200          PERFORM 2800-2012-WI-401-HOSPITAL\n THRU 2800-2012-EXIT.\n246300\n246400     IF B-21-DISCHARGE-DATE > 20110930 AND\n246500        B-21-DISCHARGE-DATE < 20121001\n246600        PERFORM 2300-2012-FLOOR-CBSA THRU 2300-2012-EXIT.\n246700\n246800*****************************************************************",
        "comments": "PERFORM statement to invoke a specific routine or section."
    },
    {
        "type": "perform_statement",
        "description": "Perform statement example",
        "code": "246600        PERFORM 2300-2012-FLOOR-CBSA\n THRU 2300-2012-EXIT.\n246700\n246800*****************************************************************\n246900**2013***********************************************************\n247000",
        "comments": "PERFORM statement to invoke a specific routine or section."
    },
    {
        "type": "perform_statement",
        "description": "Perform statement example",
        "code": "247300          PERFORM 2800-2013-WI-401-HOSPITAL\n THRU 2800-2013-EXIT.\n247400\n247500     IF B-21-DISCHARGE-DATE > 20120930 AND\n247600        B-21-DISCHARGE-DATE < 20131001\n247700        PERFORM 2300-2013-FLOOR-CBSA THRU 2300-2013-EXIT.\n247800\n247900**2014***********************************************************",
        "comments": "PERFORM statement to invoke a specific routine or section."
    },
    {
        "type": "perform_statement",
        "description": "Perform statement example",
        "code": "247700        PERFORM 2300-2013-FLOOR-CBSA\n THRU 2300-2013-EXIT.\n247800\n247900**2014***********************************************************\n248000\n248100     IF B-21-DISCHARGE-DATE > 20130930 AND\n248200        B-21-DISCHARGE-DATE < 20141001",
        "comments": "PERFORM statement to invoke a specific routine or section."
    },
    {
        "type": "perform_statement",
        "description": "Perform statement example",
        "code": "248300          PERFORM 2800-2014-WI-401-HOSPITAL\n THRU 2800-2014-EXIT.\n248400",
        "comments": "PERFORM statement to invoke a specific routine or section."
    },
    {
        "type": "perform_statement",
        "description": "Perform statement example",
        "code": "248700        PERFORM 2300-2014-FLOOR-CBSA\n THRU 2300-2014-EXIT.\n248800\n248900**2015***********************************************************\n249000* 401 HOSPITAL PROCESS STOPPED FOR FY2015\n249100**2015***********************************************************",
        "comments": "PERFORM statement to invoke a specific routine or section."
    },
    {
        "type": "perform_statement",
        "description": "Perform statement example",
        "code": "250200     PERFORM 0150-GET-CBSA\n THRU 0150-EXIT.\n250300\n250400***  RTC = 52  --  CBSA NOT FOUND\n250500     IF PPS-RTC = 52 GOBACK.",
        "comments": "PERFORM statement to invoke a specific routine or section."
    },
    {
        "type": "perform_statement",
        "description": "Perform statement example",
        "code": "251100        PERFORM 0650-N-GET-CBSA-WAGE-INDX\n\n251200         THRU   0650-N-EXIT VARYING MA2\n251300                FROM MA1 BY 1 UNTIL\n251400                T-CBSA (MA2) NOT = HOLD-PROV-CBSA.\n251500\n251600**----------------------------------------------------------------\n251700** FOR FYS 2015 AND AFTER, APPLY THE RURAL FLOOR POLICY",
        "comments": "PERFORM statement to invoke a specific routine or section."
    },
    {
        "type": "perform_statement",
        "description": "Perform statement example",
        "code": "252000          PERFORM 2300-2015-FWD-FLOOR-CBSA\n\n252100             THRU 2300-2015-EXIT.\n252200\n252300**----------------------------------------------------------------\n252400** FOR FYS 2018 AND AFTER, APPLY THE OUTMIGRATION ADJUSTMENT",
        "comments": "PERFORM statement to invoke a specific routine or section."
    },
    {
        "type": "perform_statement",
        "description": "Perform statement example",
        "code": "256000        PERFORM 1000-GET-PREVYR-WI\n THRU 1000-EXIT.\n256100\n256200     IF B-21-DISCHARGE-DATE > 20190930",
        "comments": "PERFORM statement to invoke a specific routine or section."
    },
    {
        "type": "perform_statement",
        "description": "Perform statement example",
        "code": "257500        PERFORM 0850-N-GET-CBSA-INDIAN-WI\n THRU 0850-EXIT.\n257600",
        "comments": "PERFORM statement to invoke a specific routine or section."
    },
    {
        "type": "perform_statement",
        "description": "Perform statement example",
        "code": "259300     PERFORM 0150-GET-CBSA\n THRU 0150-EXIT.\n259400",
        "comments": "PERFORM statement to invoke a specific routine or section."
    },
    {
        "type": "perform_statement",
        "description": "Perform statement example",
        "code": "259900        PERFORM 0750-GET-CBSA-SIZE\n\n260000           THRU 0750-EXIT VARYING MA2",
        "comments": "PERFORM statement to invoke a specific routine or section."
    },
    {
        "type": "perform_statement",
        "description": "Perform statement example",
        "code": "260900        PERFORM 0250-N-GET-CBSA-PR\n THRU 0250-EXIT.\n261000\n261100**----------------------------------------------------------------",
        "comments": "PERFORM statement to invoke a specific routine or section."
    },
    {
        "type": "perform_statement",
        "description": "Perform statement example",
        "code": "261700        PERFORM 2350-2015-FWD-FLOOR-CBSA-PR\n\n261800           THRU 2350-2015-EXIT.\n261900\n262000***  RTC = 52  --  WAGE-INDEX NOT FOUND",
        "comments": "PERFORM statement to invoke a specific routine or section."
    },
    {
        "type": "perform_statement",
        "description": "Perform statement example",
        "code": "272900     PERFORM 0100-GET-MSA\n THRU 0100-EXIT.\n273000\n273100     IF PPS-RTC = 00\n273200        PERFORM 0600-N-GET-WAGE-INDX",
        "comments": "PERFORM statement to invoke a specific routine or section."
    },
    {
        "type": "perform_statement",
        "description": "Perform statement example",
        "code": "273200        PERFORM 0600-N-GET-WAGE-INDX\n\n273300            THRU 0600-N-EXIT VARYING MU2\n273400            FROM MU1 BY 1 UNTIL\n273500            M-MSAX-MSA (MU2) NOT = HOLD-PROV-MSAX.\n273600\n273700 0800-N-EXIT.  EXIT.\n273800",
        "comments": "PERFORM statement to invoke a specific routine or section."
    },
    {
        "type": "perform_statement",
        "description": "Perform statement example",
        "code": "274700     PERFORM 0150-GET-CBSA\n THRU 0150-EXIT.\n274800\n274900     IF PPS-RTC = 00\n275000        PERFORM 0650-N-GET-CBSA-WAGE-INDX\n275100            THRU 0650-N-EXIT VARYING MA2\n275200            FROM MA1 BY 1 UNTIL\n275300            T-CBSA (MA2) NOT = HOLD-PROV-CBSA.",
        "comments": "PERFORM statement to invoke a specific routine or section."
    },
    {
        "type": "perform_statement",
        "description": "Perform statement example",
        "code": "275000        PERFORM 0650-N-GET-CBSA-WAGE-INDX\n\n275100            THRU 0650-N-EXIT VARYING MA2\n275200            FROM MA1 BY 1 UNTIL\n275300            T-CBSA (MA2) NOT = HOLD-PROV-CBSA.",
        "comments": "PERFORM statement to invoke a specific routine or section."
    },
    {
        "type": "perform_statement",
        "description": "Perform statement example",
        "code": "470600     PERFORM 0175-GET-RURAL-CBSA\n THRU 0175-EXIT.\n470700\n470800     IF PPS-RTC = 00\n470900      IF W-RURAL-CBSA-EFF-DATE NOT = WS-9S\n471000       IF B-21-DISCHARGE-DATE > 20200930",
        "comments": "PERFORM statement to invoke a specific routine or section."
    },
    {
        "type": "perform_statement",
        "description": "Perform statement example",
        "code": "471400         PERFORM 0670-GET-RURAL-CBSA-WAGE-INDX\n\n471500          THRU   0670-EXIT VARYING MA2\n471600                 FROM MA1 BY 1 UNTIL\n471700                 T-CBSA (MA2) NOT = HOLD-RURAL-CBSA\n471800         GO TO 0690-BYPASS\n471900        END-IF",
        "comments": "PERFORM statement to invoke a specific routine or section."
    },
    {
        "type": "perform_statement",
        "description": "Perform statement example",
        "code": "473100          PERFORM 0690-GET-RURAL-FLOOR-WAGE-INDX\n THRU 0690-EXIT\n473200          GO TO 0690-BYPASS\n473300        END-IF\n473400       END-IF\n473500      END-IF",
        "comments": "PERFORM statement to invoke a specific routine or section."
    },
    {
        "type": "perform_statement",
        "description": "Perform statement example",
        "code": "474000         PERFORM 0660-GET-RURAL-CBSA-WAGE-INDX\n\n474100          THRU   0660-EXIT VARYING MA2\n474200                 FROM MA1 BY 1 UNTIL\n474300                 T-CBSA (MA2) NOT = HOLD-RURAL-CBSA\n474400       END-IF\n474500     END-IF.\n474600",
        "comments": "PERFORM statement to invoke a specific routine or section."
    },
    {
        "type": "perform_statement",
        "description": "Perform statement example",
        "code": "479500     PERFORM 0260-N-GET-RURAL-CBSA-PR\n THRU 0260-EXIT.\n479600",
        "comments": "PERFORM statement to invoke a specific routine or section."
    },
    {
        "type": "procedure_call",
        "description": "Procedure call example",
        "code": "140400         CALL  PPCAL215\n USING BILL-DATA-2021\n140500                              PPS-DATA\n140600                              PRICER-OPT-VERS-SW\n140700                              PPS-ADDITIONAL-VARIABLES\n140800                              PROV-NEW-HOLD",
        "comments": "Calls an external procedure or subroutine, typically for modular functionality."
    },
    {
        "type": "procedure_call",
        "description": "Procedure call example",
        "code": "144200         CALL  PPCAL204\n USING BILL-NEW-DATA\n144300                              PPS-DATA\n144400                              PRICER-OPT-VERS-SW",
        "comments": "Calls an external procedure or subroutine, typically for modular functionality."
    },
    {
        "type": "procedure_call",
        "description": "Procedure call example",
        "code": "145700         CALL  PPCAL192\n USING BILL-NEW-DATA\n145800                              PPS-DATA\n145900                              PRICER-OPT-VERS-SW\n146000                              PPS-ADDITIONAL-VARIABLES\n146100                              PROV-NEW-HOLD\n146200                              WAGE-NEW-CBSA-INDEX-RECORD",
        "comments": "Calls an external procedure or subroutine, typically for modular functionality."
    },
    {
        "type": "procedure_call",
        "description": "Procedure call example",
        "code": "147200         CALL  PPCAL182\n USING BILL-NEW-DATA\n147300                              PPS-DATA\n147400                              PRICER-OPT-VERS-SW\n147500                              PPS-ADDITIONAL-VARIABLES\n147600                              PROV-NEW-HOLD\n147700                              WAGE-NEW-CBSA-INDEX-RECORD\n147800                              PPHOLDAR-HOLD-AREA",
        "comments": "Calls an external procedure or subroutine, typically for modular functionality."
    },
    {
        "type": "procedure_call",
        "description": "Procedure call example",
        "code": "148700         CALL  PPCAL171\n USING BILL-NEW-DATA\n148800                              PPS-DATA\n148900                              PRICER-OPT-VERS-SW\n149000                              PPS-ADDITIONAL-VARIABLES",
        "comments": "Calls an external procedure or subroutine, typically for modular functionality."
    },
    {
        "type": "procedure_call",
        "description": "Procedure call example",
        "code": "150200         CALL  PPCAL163\n USING BILL-NEW-DATA\n150300                              PPS-DATA\n150400                              PRICER-OPT-VERS-SW\n150500                              PPS-ADDITIONAL-VARIABLES",
        "comments": "Calls an external procedure or subroutine, typically for modular functionality."
    },
    {
        "type": "procedure_call",
        "description": "Procedure call example",
        "code": "151800         CALL  PPCAL156\n USING BILL-NEW-DATA\n151900                              PPS-DATA\n152000                              PRICER-OPT-VERS-SW\n152100                              PPS-ADDITIONAL-VARIABLES\n152200                              PROV-NEW-HOLD\n152300                              WAGE-NEW-CBSA-INDEX-RECORD\n152400                              PPHOLDAR-HOLD-AREA",
        "comments": "Calls an external procedure or subroutine, typically for modular functionality."
    },
    {
        "type": "procedure_call",
        "description": "Procedure call example",
        "code": "153500         CALL  PPCAL14B\n USING BILL-NEW-DATA\n153600                              PPS-DATA\n153700                              PRICER-OPT-VERS-SW",
        "comments": "Calls an external procedure or subroutine, typically for modular functionality."
    },
    {
        "type": "procedure_call",
        "description": "Procedure call example",
        "code": "155300         CALL  PPCAL135\n USING BILL-NEW-DATA\n155400                              PPS-DATA\n155500                              PRICER-OPT-VERS-SW\n155600                              PPS-ADDITIONAL-VARIABLES-1314",
        "comments": "Calls an external procedure or subroutine, typically for modular functionality."
    },
    {
        "type": "procedure_call",
        "description": "Procedure call example",
        "code": "157100         CALL  PPCAL125\n USING BILL-NEW-DATA\n157200                              PPS-DATA",
        "comments": "Calls an external procedure or subroutine, typically for modular functionality."
    },
    {
        "type": "procedure_call",
        "description": "Procedure call example",
        "code": "158800         CALL  PPCAL119\n USING BILL-NEW-DATA\n158900                              PPS-DATA\n159000                              PRICER-OPT-VERS-SW\n159100                              PPS-ADDITIONAL-VARIABLES-PRE13\n159200                              PROV-NEW-HOLD\n159300                              WAGE-NEW-CBSA-INDEX-RECORD\n159400",
        "comments": "Calls an external procedure or subroutine, typically for modular functionality."
    },
    {
        "type": "procedure_call",
        "description": "Procedure call example",
        "code": "160500         CALL  PPCAL10P\n USING BILL-NEW-DATA\n160600                              PPS-DATA\n160700                              PRICER-OPT-VERS-SW\n160800                              PPS-ADDITIONAL-VARIABLES-PRE13\n160900                              PROV-NEW-HOLD\n161000                              WAGE-NEW-CBSA-INDEX-RECORD\n161100",
        "comments": "Calls an external procedure or subroutine, typically for modular functionality."
    },
    {
        "type": "procedure_call",
        "description": "Procedure call example",
        "code": "162100         CALL  PPCAL10O\n USING BILL-NEW-DATA\n162200                              PPS-DATA\n162300                              PRICER-OPT-VERS-SW\n162400                              PPS-ADDITIONAL-VARIABLES-PRE13",
        "comments": "Calls an external procedure or subroutine, typically for modular functionality."
    },
    {
        "type": "procedure_call",
        "description": "Procedure call example",
        "code": "163700         CALL  PPCAL09D\n USING BILL-NEW-DATA\n163800                              PPS-DATA",
        "comments": "Calls an external procedure or subroutine, typically for modular functionality."
    },
    {
        "type": "procedure_call",
        "description": "Procedure call example",
        "code": "165300         CALL  PPCAL08D\n USING BILL-NEW-DATA\n165400                              PPS-DATA",
        "comments": "Calls an external procedure or subroutine, typically for modular functionality."
    },
    {
        "type": "procedure_call",
        "description": "Procedure call example",
        "code": "166900         CALL  PPCAL07B\n USING BILL-NEW-DATA\n167000                              PPS-DATA\n167100                              PRICER-OPT-VERS-SW\n167200                              PPS-ADDITIONAL-VARIABLES-PRE13",
        "comments": "Calls an external procedure or subroutine, typically for modular functionality."
    },
    {
        "type": "procedure_call",
        "description": "Procedure call example",
        "code": "168500         CALL  PPCAL069\n USING BILL-NEW-DATA\n168600                              PPS-DATA\n168700                              PRICER-OPT-VERS-SW\n168800                              PPS-ADDITIONAL-VARIABLES-PRE13\n168900                              PROV-NEW-HOLD",
        "comments": "Calls an external procedure or subroutine, typically for modular functionality."
    },
    {
        "type": "procedure_call",
        "description": "Procedure call example",
        "code": "170300         CALL  PPCAL059\n USING BILL-NEW-DATA\n170400                              PPS-DATA\n170500                              PRICER-OPT-VERS-SW",
        "comments": "Calls an external procedure or subroutine, typically for modular functionality."
    },
    {
        "type": "procedure_call",
        "description": "Procedure call example",
        "code": "172000         CALL  PPCAL04D\n USING BILL-NEW-DATA\n172100                              PPS-DATA\n172200                              PRICER-OPT-VERS-SW\n172300                              PPS-ADDITIONAL-VARIABLES-PRE13\n172400                              PROV-NEW-HOLD",
        "comments": "Calls an external procedure or subroutine, typically for modular functionality."
    },
    {
        "type": "procedure_call",
        "description": "Procedure call example",
        "code": "173700         CALL  PPCAL038\n USING BILL-NEW-DATA\n173800                              PPS-DATA\n173900                              PRICER-OPT-VERS-SW\n174000                              PPS-ADDITIONAL-VARIABLES-PRE13\n174100                              PROV-NEW-HOLD\n174200                              WAGE-NEW-INDEX-RECORD\n174300",
        "comments": "Calls an external procedure or subroutine, typically for modular functionality."
    },
    {
        "type": "procedure_call",
        "description": "Procedure call example",
        "code": "175400         CALL  PPCAL026\n USING BILL-NEW-DATA\n175500                              PPS-DATA\n175600                              PRICER-OPT-VERS-SW\n175700                              PPS-ADDITIONAL-VARIABLES-PRE13",
        "comments": "Calls an external procedure or subroutine, typically for modular functionality."
    },
    {
        "type": "procedure_call",
        "description": "Procedure call example",
        "code": "177100         CALL  PPCAL017\n USING BILL-NEW-DATA\n177200                              PPS-DATA\n177300                              PRICER-OPT-VERS-SW\n177400                              PPS-ADDITIONAL-VARIABLES-PRE13\n177500                              PROV-NEW-HOLD",
        "comments": "Calls an external procedure or subroutine, typically for modular functionality."
    },
    {
        "type": "procedure_call",
        "description": "Procedure call example",
        "code": "178800         CALL  PPCAL006\n USING BILL-NEW-DATA\n178900                              PPS-DATA\n179000                              PRICER-OPT-VERS-SW",
        "comments": "Calls an external procedure or subroutine, typically for modular functionality."
    },
    {
        "type": "procedure_call",
        "description": "Procedure call example",
        "code": "180400         CALL  PPCAL998\n USING BILL-NEW-DATA\n180500                              PPS-DATA\n180600                              PRICER-OPT-VERS-SW\n180700                              PPS-ADDITIONAL-VARIABLES-PRE13\n180800                              PROV-NEW-HOLD\n180900                              WAGE-NEW-INDEX-RECORD",
        "comments": "Calls an external procedure or subroutine, typically for modular functionality."
    },
    {
        "type": "procedure_call",
        "description": "Procedure call example",
        "code": "184600         CALL  PPCAL987\n USING BILL-DATA\n184700                              PPS-DATA",
        "comments": "Calls an external procedure or subroutine, typically for modular functionality."
    },
    {
        "type": "procedure_call",
        "description": "Procedure call example",
        "code": "186200         CALL  PPCAL974\n USING BILL-DATA\n186300                              PPS-DATA\n186400                              PRICER-OPT-VERS-SW\n186500                              PPS-ADDITIONAL-VARIABLES-PRE13\n186600                              PROV-HOLD",
        "comments": "Calls an external procedure or subroutine, typically for modular functionality."
    },
    {
        "type": "procedure_call",
        "description": "Procedure call example",
        "code": "187800         CALL  PPCAL964\n USING BILL-DATA\n187900                              PPS-DATA\n188000                              PRICER-OPT-VERS-SW\n188100                              PPS-ADDITIONAL-VARIABLES-PRE13",
        "comments": "Calls an external procedure or subroutine, typically for modular functionality."
    },
    {
        "type": "procedure_call",
        "description": "Procedure call example",
        "code": "189400         CALL  PPCAL954\n USING BILL-DATA\n189500                              PPS-DATA\n189600                              PRICER-OPT-VERS-SW",
        "comments": "Calls an external procedure or subroutine, typically for modular functionality."
    },
    {
        "type": "procedure_call",
        "description": "Procedure call example",
        "code": "191000         CALL  PPCAL944\n USING BILL-DATA\n191100                              PPS-DATA\n191200                              PRICER-OPT-VERS-SW\n191300                              PPS-ADDITIONAL-VARIABLES-PRE13\n191400                              PROV-HOLD\n191500                              WAGE-INDEX-RECORD",
        "comments": "Calls an external procedure or subroutine, typically for modular functionality."
    },
    {
        "type": "procedure_call",
        "description": "Procedure call example",
        "code": "192600         CALL  PPCAL935\n USING BILL-DATA\n192700                              PPS-DATA\n192800                              PRICER-OPT-VERS-SW\n192900                              PPS-ADDITIONAL-VARIABLES-PRE13\n193000                              PROV-HOLD\n193100                              WAGE-INDEX-RECORD",
        "comments": "Calls an external procedure or subroutine, typically for modular functionality."
    },
    {
        "type": "procedure_call",
        "description": "Procedure call example",
        "code": "194200         CALL  PPCAL926\n USING BILL-DATA\n194300                              PPS-DATA\n194400                              PRICER-OPT-VERS-SW",
        "comments": "Calls an external procedure or subroutine, typically for modular functionality."
    },
    {
        "type": "procedure_call",
        "description": "Procedure call example",
        "code": "195800         CALL  PPCAL915\n USING BILL-DATA\n195900                              PPS-DATA\n196000                              PRICER-OPT-VERS-SW\n196100                              PPS-ADDITIONAL-VARIABLES-PRE13\n196200                              PROV-HOLD\n196300                              WAGE-INDEX-RECORD",
        "comments": "Calls an external procedure or subroutine, typically for modular functionality."
    },
    {
        "type": "procedure_call",
        "description": "Procedure call example",
        "code": "197400         CALL  PPCAL905\n USING BILL-DATA\n197500                              PPS-DATA\n197600                              PRICER-OPT-VERS-SW\n197700                              PPS-ADDITIONAL-VARIABLES-PRE13",
        "comments": "Calls an external procedure or subroutine, typically for modular functionality."
    },
    {
        "type": "procedure_call",
        "description": "Procedure call example",
        "code": "199000         CALL  PPCAL894\n USING BILL-DATA\n199100                              PPS-DATA\n199200                              PRICER-OPT-VERS-SW\n199300                              PPS-ADDITIONAL-VARIABLES-PRE13",
        "comments": "Calls an external procedure or subroutine, typically for modular functionality."
    },
    {
        "type": "procedure_call",
        "description": "Procedure call example",
        "code": "200600         CALL  PPCAL884\n USING BILL-DATA\n200700                              PPS-DATA\n200800                              PRICER-OPT-VERS-SW\n200900                              PPS-ADDITIONAL-VARIABLES-PRE13\n201000                              PROV-HOLD\n201100                              WAGE-INDEX-RECORD\n201200",
        "comments": "Calls an external procedure or subroutine, typically for modular functionality."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "000200 PROGRAM-ID\n.           PPDRV215.\n000300*AUTHOR.   DDS TEAM.\n000400*UPDATE.   FY 2021 PRODUCTION.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "000900 DATE-COMPILED\n.\n001000****************************************************************\n001100*   THE RESPONSIBILITY FOR INSTALLING, MODIFYING, TESTING,     *\n001200*   MAINTAINING, AND VERIFYING THE ACCURACY OF THIS PROGRAM    *",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "003900 SOURCE-COMPUTER\n.            IBM-370.\n004000 OBJECT-COMPUTER.            IBM-370.\n004100 INPUT-OUTPUT SECTION.\n004200 FILE-CONTROL.\n004300 DATA DIVISION.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "004000 OBJECT-COMPUTER\n.            IBM-370.\n004100 INPUT-OUTPUT SECTION.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "004100 INPUT-OUTPUT\n SECTION.\n004200 FILE-CONTROL.\n004300 DATA DIVISION.\n004400 FILE SECTION.\n004500",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "004200 FILE-CONTROL\n.\n004300 DATA DIVISION.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "004600 WORKING-STORAGE\n SECTION.\n004700 77  W-STORAGE-REF                  PIC X(48)  VALUE\n004800     'P P D R I V E R - W O R K I N G   S T O R A G E'.\n004900\n005000 01  DRV-VERSION                    PIC X(05) VALUE 'D21.5'.\n005100 01  PPCAL884                       PIC X(08) VALUE 'PPCAL884'.\n005200 01  PPCAL894                       PIC X(08) VALUE 'PPCAL894'.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "035400             W-P-NEW-STATE-CODE\n          PIC X(02).\n035500         05  FILLER                      PIC X(03).\n035600     02  W-PROV-NEWREC-HOLD2.\n035700         05  W-P-NEW-VARIABLES.\n035800             10  W-P-NEW-FAC-SPEC-RATE     PIC  X(07).",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "041400             W-P-NEW-COUNTY-CODE\n              PIC X(05).\n041500         05  W-P-NEW-SUPPLEMENTAL-WI.\n041600             10  W-P-NEW-SUPP-WI-IND          PIC X.\n041700                 88  W-P-NEW-IND-PRIOR-YEAR   VALUE '1'.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "057100                    P-NEW-CURRENT-CENSUS-DIV\n   PIC 9(01).\n057200             88  P-N-VALID-CENSUS-DIV    VALUE 1 THRU 9.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "057700                             P-NEW-GEO-LOC-MSAX\n  PIC 9(04).\n057800             10  P-NEW-GEO-LOC-MSA-AST REDEFINES\n057900                             P-NEW-GEO-LOC-MSA9.\n058000                 15  P-NEW-GEO-MSA-1ST    PIC X.\n058100                 15  P-NEW-GEO-MSA-2ND    PIC X.\n058200                 15  P-NEW-GEO-MSA-3RD    PIC X.\n058300                 15  P-NEW-GEO-MSA-4TH    PIC X.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "057900                             P-NEW-GEO-LOC-MSA9\n.\n058000                 15  P-NEW-GEO-MSA-1ST    PIC X.\n058100                 15  P-NEW-GEO-MSA-2ND    PIC X.\n058200                 15  P-NEW-GEO-MSA-3RD    PIC X.\n058300                 15  P-NEW-GEO-MSA-4TH    PIC X.\n058400             10  P-NEW-WAGE-INDEX-LOC-MSA   PIC X(04) JUST RIGHT.\n058500             10  P-NEW-STAND-AMT-LOC-MSA    PIC X(04) JUST RIGHT.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "060300             P-NEW-STATE-CODE\n               PIC X(02).\n060400         05  FILLER                         PIC X(03).\n060500     02  PROV-NEWREC-HOLD2.\n060600         05  P-NEW-VARIABLES.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "063800                             P-NEW-CBSA-GEO-LOC\n  PIC 9(05).\n063900             10  P-NEW-CBSA-GEO-LOC-AST REDEFINES\n064000                             P-NEW-CBSA-GEO-LOC9.\n064100                 15  P-NEW-CBSA-GEO-1ST    PIC X.\n064200                 15  P-NEW-CBSA-GEO-2ND    PIC X.\n064300                 15  P-NEW-CBSA-GEO-3RD    PIC X.\n064400                 15  P-NEW-CBSA-GEO-4TH    PIC X.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "064000                             P-NEW-CBSA-GEO-LOC9\n.\n064100                 15  P-NEW-CBSA-GEO-1ST    PIC X.\n064200                 15  P-NEW-CBSA-GEO-2ND    PIC X.\n064300                 15  P-NEW-CBSA-GEO-3RD    PIC X.\n064400                 15  P-NEW-CBSA-GEO-4TH    PIC X.\n064500                 15  P-NEW-CBSA-GEO-5TH    PIC X.\n064600             10  P-NEW-CBSA-RECLASS-LOC    PIC X(05) JUST RIGHT.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "065600                 P-NEW-CBSA-SPEC-WI\n          PIC 9(06).\n065700     02  PROV-NEWREC-HOLD3.\n065800         05  P-NEW-PASS-AMT-DATA.\n065900             10  P-NEW-PASS-AMT-CAPITAL    PIC 9(04)V99.\n066000             10  P-NEW-PASS-AMT-DIR-MED-ED PIC 9(04)V99.\n066100             10  P-NEW-PASS-AMT-ORGAN-ACQ  PIC 9(04)V99.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "068500             P-NEW-COUNTY-CODE\n              PIC X(05).\n068600         05  P-NEW-SUPPLEMENTAL-WI.\n068700             10  P-NEW-SUPP-WI-IND          PIC X.\n068800                 88  P-NEW-IND-PRIOR-YEAR   VALUE '1'.\n068900             10  P-NEW-SUPP-WI              PIC 9(02)V9(04).",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "121200                           PPS-DATA\n\n121300                           PRICER-OPT-VERS-SW\n121400                           PPS-ADDITIONAL-VARIABLES",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "121300                           PRICER-OPT-VERS-SW\n\n121400                           PPS-ADDITIONAL-VARIABLES\n121500                           PROV-RECORD\n121600                           MSAX-WI-TABLE\n121700                           CBSA-WI-TABLE",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "121400                           PPS-ADDITIONAL-VARIABLES\n\n121500                           PROV-RECORD\n121600                           MSAX-WI-TABLE\n121700                           CBSA-WI-TABLE\n121800                           PPHOLDAR-HOLD-AREA.\n121900\n122000*****************************************************************",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "121500                           PROV-RECORD\n\n121600                           MSAX-WI-TABLE\n121700                           CBSA-WI-TABLE\n121800                           PPHOLDAR-HOLD-AREA.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "121600                           MSAX-WI-TABLE\n\n121700                           CBSA-WI-TABLE",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "121700                           CBSA-WI-TABLE\n\n121800                           PPHOLDAR-HOLD-AREA.\n121900\n122000*****************************************************************\n122100*    PROCESSING:\n122200*        A. THIS MODULE WILL CALL THE PPCAL MODULES.\n122300*        B. THE PROV-RECORD AND WAGE-INDEX-RECORD ASSOCIATED WITH",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "121800                           PPHOLDAR-HOLD-AREA\n.\n121900",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "124500                WAGE-NEW-CBSA-INDEX-RECORD\n\n124600                WAGE-RURAL-CBSA-INDEX-RECORD\n124700                WAGE-INDEX-RECORD\n124800                MESWK-PRSPC-WAGEIN-BLEND",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "124600                WAGE-RURAL-CBSA-INDEX-RECORD\n\n124700                WAGE-INDEX-RECORD\n124800                MESWK-PRSPC-WAGEIN-BLEND",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "124700                WAGE-INDEX-RECORD\n\n124800                MESWK-PRSPC-WAGEIN-BLEND",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "124800                MESWK-PRSPC-WAGEIN-BLEND\n\n124900                HOLD-OUTM-DATA.\n125000\n125100     INITIALIZE PPHOLDAR-HOLD-AREA.\n125200\n125300     INITIALIZE W-FY-BEGIN-CC\n125400                W-FY-BEGIN-YY",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "124900                HOLD-OUTM-DATA\n.\n125000\n125100     INITIALIZE PPHOLDAR-HOLD-AREA.\n125200\n125300     INITIALIZE W-FY-BEGIN-CC\n125400                W-FY-BEGIN-YY\n125500                W-FY-END-CC",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "125400                W-FY-BEGIN-YY\n\n125500                W-FY-END-CC\n125600                W-FY-END-YY.\n125700",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "125500                W-FY-END-CC\n\n125600                W-FY-END-YY.\n125700\n125800     MOVE PROV-RECORD TO PROV-NEW-HOLD.\n125900\n126000*----------------------------------------------------------*",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "125600                W-FY-END-YY\n.\n125700\n125800     MOVE PROV-RECORD TO PROV-NEW-HOLD.\n125900\n126000*----------------------------------------------------------*\n126100* SET FY BEGIN AND END DATES USING BILL DISCHARGE DATE     *",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "127000        B-21-DISCHG-MM\n <= 09\n127100        COMPUTE W-FY-BEGIN-YY = B-21-DISCHG-YY - 1",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "128000        END-IF\n.\n128100\n128200*****************************************************************\n128300\n128400***     RTC = 98 >> A BILL OLDER THEN 20021001\n128500***",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "129900 CHECK-EHR-IND\n.\n130000     IF B-21-DISCHARGE-DATE > 20140930 AND\n130100        (P-NEW-EHR-REDUC-INDN NOT = 'Y' AND\n130200         P-NEW-EHR-REDUC-INDN NOT = ' ')\n130300           MOVE 65 TO PPS-RTC\n130400             GOBACK",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "130200         P-NEW-EHR-REDUC-INDN\n NOT = ' ')\n130300           MOVE 65 TO PPS-RTC",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "130500     END-IF\n.\n130600",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "130700 0030-GET-WAGE-INDEX\n.\n130800***  GET THE WAGE-INDEX\n130900\n131000     IF B-21-DISCHARGE-DATE > 19990930 AND\n131100        B-21-DISCHARGE-DATE < 20001001",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "131100        B-21-DISCHARGE-DATE\n < 20001001\n131200      IF (P-NEW-CHG-CODE-INDEX = 'Y' AND\n131300          P-NEW-GEO-LOC-MSAX = P-NEW-WAGE-INDEX-LOC-MSA)\n131400          AND (P-NEW-GEO-LOC-MSAX NOT = '1600' AND NOT = '3285'\n131500                            AND   NOT = '5600' AND NOT = '1520'\n131600                            AND   NOT = '1640' AND NOT = '0240'",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "131300          P-NEW-GEO-LOC-MSAX\n = P-NEW-WAGE-INDEX-LOC-MSA)\n131400          AND (P-NEW-GEO-LOC-MSAX NOT = '1600' AND NOT = '3285'\n131500                            AND   NOT = '5600' AND NOT = '1520'\n131600                            AND   NOT = '1640' AND NOT = '0240'",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "132400                 P-NEW-GEO-MSA-2ND\n OR\n132500                 P-NEW-GEO-MSA-3RD OR\n132600                 P-NEW-GEO-MSA-4TH\n132700         MOVE ALL '0' TO PPS-ADDITIONAL-VARIABLES\n132800         MOVE 52 TO PPS-RTC\n132900         GOBACK.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "132500                 P-NEW-GEO-MSA-3RD\n OR\n132600                 P-NEW-GEO-MSA-4TH\n132700         MOVE ALL '0' TO PPS-ADDITIONAL-VARIABLES\n132800         MOVE 52 TO PPS-RTC\n132900         GOBACK.\n133000",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "132600                 P-NEW-GEO-MSA-4TH\n\n132700         MOVE ALL '0' TO PPS-ADDITIONAL-VARIABLES\n132800         MOVE 52 TO PPS-RTC\n132900         GOBACK.\n133000\n133100     IF P-NEW-EFF-DATE < 20041001 AND\n133200        B-21-DISCHARGE-DATE > 20040930",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "133200        B-21-DISCHARGE-DATE\n > 20040930\n133300        MOVE ALL '0' TO PPS-ADDITIONAL-VARIABLES\n133400        MOVE 52 TO PPS-RTC\n133500        GOBACK.\n133600\n133700     IF P-NEW-EFF-DATE > 20040930\n133800        IF '*' = P-NEW-CBSA-GEO-1ST OR",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "133900                 P-NEW-CBSA-GEO-2ND\n OR\n134000                 P-NEW-CBSA-GEO-3RD OR\n134100                 P-NEW-CBSA-GEO-4TH OR\n134200                 P-NEW-CBSA-GEO-5TH\n134300         MOVE ALL '0' TO PPS-ADDITIONAL-VARIABLES",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "134000                 P-NEW-CBSA-GEO-3RD\n OR\n134100                 P-NEW-CBSA-GEO-4TH OR\n134200                 P-NEW-CBSA-GEO-5TH\n134300         MOVE ALL '0' TO PPS-ADDITIONAL-VARIABLES\n134400         MOVE 52 TO PPS-RTC\n134500         GOBACK.\n134600",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "134100                 P-NEW-CBSA-GEO-4TH\n OR\n134200                 P-NEW-CBSA-GEO-5TH\n134300         MOVE ALL '0' TO PPS-ADDITIONAL-VARIABLES",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "134200                 P-NEW-CBSA-GEO-5TH\n\n134300         MOVE ALL '0' TO PPS-ADDITIONAL-VARIABLES\n134400         MOVE 52 TO PPS-RTC\n134500         GOBACK.\n134600\n134700     IF P-NEW-EFF-DATE < 20041001\n134800        IF (P-NEW-WAGE-INDEX-LOC-MSA = '    ' OR",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "134900            P-NEW-WAGE-INDEX-LOC-MSA\n = '0000')\n135000            MOVE P-NEW-GEO-LOC-MSA9 TO P-NEW-WAGE-INDEX-LOC-MSA.\n135100     IF P-NEW-EFF-DATE < 20041001",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "135300            P-NEW-STAND-AMT-LOC-MSA\n = '0000')\n135400            MOVE P-NEW-GEO-LOC-MSA9 TO P-NEW-STAND-AMT-LOC-MSA.\n135500\n135600****************************\n135700* BEGIN OUTMIGRATION CHECK *\n135800****************************\n135900",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "136100         P-NEW-CBSA-RECLASS-LOC\n = '00000') AND\n136200        (P-NEW-CBSA-STAND-AMT-LOC = '     ' OR",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "136300         P-NEW-CBSA-STAND-AMT-LOC\n = '00000') AND\n136400         P-NEW-CBSA-WI-BLANK\n136500       PERFORM 0900-GET-COUNTY-CODE THRU 0900-EXIT\n136600     END-IF.\n136700\n136800     IF OUTM-IND = 1\n136900       PERFORM 0950-GET-OUTM-ADJ THRU 0950-EXIT",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "136400         P-NEW-CBSA-WI-BLANK\n\n136500       PERFORM 0900-GET-COUNTY-CODE THRU 0900-EXIT\n136600     END-IF.\n136700\n136800     IF OUTM-IND = 1",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "136600     END-IF\n.\n136700",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "137100         OUTM-CNTY\n(OUTM-IDX2) NOT = P-NEW-COUNTY-CODE-X\n137200     END-IF.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "137200     END-IF\n.\n137300\n137400**************************\n137500* END OUTMIGRATION CHECK *\n137600**************************\n137700\n137800     IF P-NEW-EFF-DATE > 20040930",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "138000            P-NEW-CBSA-RECLASS-LOC\n = '00000')\n138100            MOVE P-NEW-CBSA-GEO-LOC9 TO P-NEW-CBSA-RECLASS-LOC.\n138200     IF P-NEW-EFF-DATE > 20040930\n138300        IF (P-NEW-CBSA-STAND-AMT-LOC = '     ' OR\n138400            P-NEW-CBSA-STAND-AMT-LOC = '00000')",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "138400            P-NEW-CBSA-STAND-AMT-LOC\n = '00000')\n138500            MOVE P-NEW-CBSA-GEO-LOC9 TO P-NEW-CBSA-STAND-AMT-LOC.\n138600\n138700     IF P-NEW-EFF-DATE < 20041001",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "140500                              PPS-DATA\n\n140600                              PRICER-OPT-VERS-SW\n140700                              PPS-ADDITIONAL-VARIABLES\n140800                              PROV-NEW-HOLD",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "140600                              PRICER-OPT-VERS-SW\n\n140700                              PPS-ADDITIONAL-VARIABLES\n140800                              PROV-NEW-HOLD\n140900                              WAGE-NEW-CBSA-INDEX-RECORD\n141000                              PPHOLDAR-HOLD-AREA",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "140700                              PPS-ADDITIONAL-VARIABLES\n\n140800                              PROV-NEW-HOLD",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "140800                              PROV-NEW-HOLD\n\n140900                              WAGE-NEW-CBSA-INDEX-RECORD\n141000                              PPHOLDAR-HOLD-AREA",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "140900                              WAGE-NEW-CBSA-INDEX-RECORD\n\n141000                              PPHOLDAR-HOLD-AREA\n141100         GOBACK.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "141000                              PPHOLDAR-HOLD-AREA\n\n141100         GOBACK.\n141200",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "144300                              PPS-DATA\n\n144400                              PRICER-OPT-VERS-SW\n144500                              PPS-ADDITIONAL-VARIABLES\n144600                              PROV-NEW-HOLD\n144700                              WAGE-NEW-CBSA-INDEX-RECORD\n144800                              PPHOLDAR-HOLD-AREA",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "144400                              PRICER-OPT-VERS-SW\n\n144500                              PPS-ADDITIONAL-VARIABLES\n144600                              PROV-NEW-HOLD\n144700                              WAGE-NEW-CBSA-INDEX-RECORD",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "144500                              PPS-ADDITIONAL-VARIABLES\n\n144600                              PROV-NEW-HOLD",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "144600                              PROV-NEW-HOLD\n\n144700                              WAGE-NEW-CBSA-INDEX-RECORD\n144800                              PPHOLDAR-HOLD-AREA\n144900         GOBACK.\n145000*****************************************************************\n145100**            FY 2019 \"            \"                        *****",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "144700                              WAGE-NEW-CBSA-INDEX-RECORD\n\n144800                              PPHOLDAR-HOLD-AREA\n144900         GOBACK.\n145000*****************************************************************\n145100**            FY 2019 \"            \"                        *****\n145200**          THIS NEXT CALL WILL PROCESS 2019 BILLS  WITH\n145300**              A DISCHARGE DATE ON OR AFTER 20181001",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "144800                              PPHOLDAR-HOLD-AREA\n\n144900         GOBACK.\n145000*****************************************************************\n145100**            FY 2019 \"            \"                        *****",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "145800                              PPS-DATA\n\n145900                              PRICER-OPT-VERS-SW\n146000                              PPS-ADDITIONAL-VARIABLES\n146100                              PROV-NEW-HOLD\n146200                              WAGE-NEW-CBSA-INDEX-RECORD",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "145900                              PRICER-OPT-VERS-SW\n\n146000                              PPS-ADDITIONAL-VARIABLES\n146100                              PROV-NEW-HOLD\n146200                              WAGE-NEW-CBSA-INDEX-RECORD\n146300                              PPHOLDAR-HOLD-AREA",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "146000                              PPS-ADDITIONAL-VARIABLES\n\n146100                              PROV-NEW-HOLD\n146200                              WAGE-NEW-CBSA-INDEX-RECORD\n146300                              PPHOLDAR-HOLD-AREA\n146400         GOBACK.\n146500*****************************************************************",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "146100                              PROV-NEW-HOLD\n\n146200                              WAGE-NEW-CBSA-INDEX-RECORD\n146300                              PPHOLDAR-HOLD-AREA\n146400         GOBACK.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "146200                              WAGE-NEW-CBSA-INDEX-RECORD\n\n146300                              PPHOLDAR-HOLD-AREA\n146400         GOBACK.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "146300                              PPHOLDAR-HOLD-AREA\n\n146400         GOBACK.\n146500*****************************************************************\n146600**            FY 2018 \"            \"                        *****\n146700**          THIS NEXT CALL WILL PROCESS 2018 BILLS  WITH\n146800**              A DISCHARGE DATE ON OR AFTER 20171001\n146900*****************************************************************",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "147300                              PPS-DATA\n\n147400                              PRICER-OPT-VERS-SW\n147500                              PPS-ADDITIONAL-VARIABLES\n147600                              PROV-NEW-HOLD\n147700                              WAGE-NEW-CBSA-INDEX-RECORD\n147800                              PPHOLDAR-HOLD-AREA\n147900         GOBACK.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "147400                              PRICER-OPT-VERS-SW\n\n147500                              PPS-ADDITIONAL-VARIABLES",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "147500                              PPS-ADDITIONAL-VARIABLES\n\n147600                              PROV-NEW-HOLD\n147700                              WAGE-NEW-CBSA-INDEX-RECORD",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "147600                              PROV-NEW-HOLD\n\n147700                              WAGE-NEW-CBSA-INDEX-RECORD\n147800                              PPHOLDAR-HOLD-AREA",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "147700                              WAGE-NEW-CBSA-INDEX-RECORD\n\n147800                              PPHOLDAR-HOLD-AREA",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "147800                              PPHOLDAR-HOLD-AREA\n\n147900         GOBACK.\n148000*****************************************************************\n148100**            FY 2017 \"            \"                        *****",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "148800                              PPS-DATA\n\n148900                              PRICER-OPT-VERS-SW\n149000                              PPS-ADDITIONAL-VARIABLES\n149100                              PROV-NEW-HOLD\n149200                              WAGE-NEW-CBSA-INDEX-RECORD\n149300                              PPHOLDAR-HOLD-AREA",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "148900                              PRICER-OPT-VERS-SW\n\n149000                              PPS-ADDITIONAL-VARIABLES\n149100                              PROV-NEW-HOLD\n149200                              WAGE-NEW-CBSA-INDEX-RECORD\n149300                              PPHOLDAR-HOLD-AREA\n149400         GOBACK.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "149000                              PPS-ADDITIONAL-VARIABLES\n\n149100                              PROV-NEW-HOLD\n149200                              WAGE-NEW-CBSA-INDEX-RECORD",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "149100                              PROV-NEW-HOLD\n\n149200                              WAGE-NEW-CBSA-INDEX-RECORD",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "149200                              WAGE-NEW-CBSA-INDEX-RECORD\n\n149300                              PPHOLDAR-HOLD-AREA\n149400         GOBACK.\n149500*****************************************************************\n149600**            FY 2016 \"ICD10 REFORM\"                        *****\n149700**          THIS NEXT CALL WILL PROCESS 2016 BILLS  WITH",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "149300                              PPHOLDAR-HOLD-AREA\n\n149400         GOBACK.\n149500*****************************************************************\n149600**            FY 2016 \"ICD10 REFORM\"                        *****\n149700**          THIS NEXT CALL WILL PROCESS 2016 BILLS  WITH\n149800**              A DISCHARGE DATE ON OR AFTER 20151001\n149900*****************************************************************",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "150300                              PPS-DATA\n\n150400                              PRICER-OPT-VERS-SW\n150500                              PPS-ADDITIONAL-VARIABLES\n150600                              PROV-NEW-HOLD",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "150400                              PRICER-OPT-VERS-SW\n\n150500                              PPS-ADDITIONAL-VARIABLES\n150600                              PROV-NEW-HOLD",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "150500                              PPS-ADDITIONAL-VARIABLES\n\n150600                              PROV-NEW-HOLD\n150700                              WAGE-NEW-CBSA-INDEX-RECORD\n150800                              PPHOLDAR-HOLD-AREA\n150900           MOVE 0 TO PPS-ISLET-ISOL-PAY-ADD-ON\n151000         GOBACK.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "150600                              PROV-NEW-HOLD\n\n150700                              WAGE-NEW-CBSA-INDEX-RECORD\n150800                              PPHOLDAR-HOLD-AREA",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "150700                              WAGE-NEW-CBSA-INDEX-RECORD\n\n150800                              PPHOLDAR-HOLD-AREA\n150900           MOVE 0 TO PPS-ISLET-ISOL-PAY-ADD-ON\n151000         GOBACK.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "150800                              PPHOLDAR-HOLD-AREA\n\n150900           MOVE 0 TO PPS-ISLET-ISOL-PAY-ADD-ON",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "151900                              PPS-DATA\n\n152000                              PRICER-OPT-VERS-SW\n152100                              PPS-ADDITIONAL-VARIABLES\n152200                              PROV-NEW-HOLD\n152300                              WAGE-NEW-CBSA-INDEX-RECORD\n152400                              PPHOLDAR-HOLD-AREA\n152500           MOVE 0 TO PPS-ISLET-ISOL-PAY-ADD-ON",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "152000                              PRICER-OPT-VERS-SW\n\n152100                              PPS-ADDITIONAL-VARIABLES\n152200                              PROV-NEW-HOLD\n152300                              WAGE-NEW-CBSA-INDEX-RECORD\n152400                              PPHOLDAR-HOLD-AREA\n152500           MOVE 0 TO PPS-ISLET-ISOL-PAY-ADD-ON\n152600         GOBACK.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "152100                              PPS-ADDITIONAL-VARIABLES\n\n152200                              PROV-NEW-HOLD\n152300                              WAGE-NEW-CBSA-INDEX-RECORD\n152400                              PPHOLDAR-HOLD-AREA\n152500           MOVE 0 TO PPS-ISLET-ISOL-PAY-ADD-ON\n152600         GOBACK.\n152700*****************************************************************",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "152200                              PROV-NEW-HOLD\n\n152300                              WAGE-NEW-CBSA-INDEX-RECORD\n152400                              PPHOLDAR-HOLD-AREA\n152500           MOVE 0 TO PPS-ISLET-ISOL-PAY-ADD-ON",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "152300                              WAGE-NEW-CBSA-INDEX-RECORD\n\n152400                              PPHOLDAR-HOLD-AREA\n152500           MOVE 0 TO PPS-ISLET-ISOL-PAY-ADD-ON\n152600         GOBACK.\n152700*****************************************************************\n152800*****************************************************************\n152900**            FY 2014 \"HEALTH REFORM\"                       *****",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "152400                              PPHOLDAR-HOLD-AREA\n\n152500           MOVE 0 TO PPS-ISLET-ISOL-PAY-ADD-ON\n152600         GOBACK.\n152700*****************************************************************",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "153600                              PPS-DATA\n\n153700                              PRICER-OPT-VERS-SW",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "153700                              PRICER-OPT-VERS-SW\n\n153800                              PPS-ADDITIONAL-VARIABLES-1314\n153900                              PROV-NEW-HOLD\n154000                              WAGE-NEW-CBSA-INDEX-RECORD\n154100",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "153800                              PPS-ADDITIONAL-VARIABLES-1314\n\n153900                              PROV-NEW-HOLD\n154000                              WAGE-NEW-CBSA-INDEX-RECORD",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "153900                              PROV-NEW-HOLD\n\n154000                              WAGE-NEW-CBSA-INDEX-RECORD",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "154000                              WAGE-NEW-CBSA-INDEX-RECORD\n\n154100",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "155400                              PPS-DATA\n\n155500                              PRICER-OPT-VERS-SW\n155600                              PPS-ADDITIONAL-VARIABLES-1314\n155700                              PROV-NEW-HOLD\n155800                              WAGE-NEW-CBSA-INDEX-RECORD",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "155500                              PRICER-OPT-VERS-SW\n\n155600                              PPS-ADDITIONAL-VARIABLES-1314\n155700                              PROV-NEW-HOLD",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "155600                              PPS-ADDITIONAL-VARIABLES-1314\n\n155700                              PROV-NEW-HOLD\n155800                              WAGE-NEW-CBSA-INDEX-RECORD",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "155700                              PROV-NEW-HOLD\n\n155800                              WAGE-NEW-CBSA-INDEX-RECORD\n155900\n156000         PERFORM 2900-MOVE-PPS-ADDITIONAL-VARS THRU 2900-EXIT",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "155800                              WAGE-NEW-CBSA-INDEX-RECORD\n\n155900",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "157200                              PPS-DATA\n\n157300                              PRICER-OPT-VERS-SW\n157400                              PPS-ADDITIONAL-VARIABLES-PRE13\n157500                              PROV-NEW-HOLD\n157600                              WAGE-NEW-CBSA-INDEX-RECORD\n157700\n157800         PERFORM 2900-MOVE-PPS-ADDITIONAL-VARS THRU 2900-EXIT",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "157300                              PRICER-OPT-VERS-SW\n\n157400                              PPS-ADDITIONAL-VARIABLES-PRE13",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "157400                              PPS-ADDITIONAL-VARIABLES-PRE13\n\n157500                              PROV-NEW-HOLD\n157600                              WAGE-NEW-CBSA-INDEX-RECORD\n157700",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "157500                              PROV-NEW-HOLD\n\n157600                              WAGE-NEW-CBSA-INDEX-RECORD\n157700\n157800         PERFORM 2900-MOVE-PPS-ADDITIONAL-VARS THRU 2900-EXIT\n157900         GOBACK.\n158000*****************************************************************\n158100*****************************************************************",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "157600                              WAGE-NEW-CBSA-INDEX-RECORD\n\n157700\n157800         PERFORM 2900-MOVE-PPS-ADDITIONAL-VARS THRU 2900-EXIT\n157900         GOBACK.\n158000*****************************************************************",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "158900                              PPS-DATA\n\n159000                              PRICER-OPT-VERS-SW\n159100                              PPS-ADDITIONAL-VARIABLES-PRE13\n159200                              PROV-NEW-HOLD",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "159000                              PRICER-OPT-VERS-SW\n\n159100                              PPS-ADDITIONAL-VARIABLES-PRE13",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "159100                              PPS-ADDITIONAL-VARIABLES-PRE13\n\n159200                              PROV-NEW-HOLD\n159300                              WAGE-NEW-CBSA-INDEX-RECORD\n159400\n159500         PERFORM 2900-MOVE-PPS-ADDITIONAL-VARS THRU 2900-EXIT",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "159200                              PROV-NEW-HOLD\n\n159300                              WAGE-NEW-CBSA-INDEX-RECORD\n159400\n159500         PERFORM 2900-MOVE-PPS-ADDITIONAL-VARS THRU 2900-EXIT\n159600         GOBACK.\n159700*****************************************************************",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "159300                              WAGE-NEW-CBSA-INDEX-RECORD\n\n159400\n159500         PERFORM 2900-MOVE-PPS-ADDITIONAL-VARS THRU 2900-EXIT",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "160600                              PPS-DATA\n\n160700                              PRICER-OPT-VERS-SW",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "160700                              PRICER-OPT-VERS-SW\n\n160800                              PPS-ADDITIONAL-VARIABLES-PRE13\n160900                              PROV-NEW-HOLD\n161000                              WAGE-NEW-CBSA-INDEX-RECORD\n161100",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "160800                              PPS-ADDITIONAL-VARIABLES-PRE13\n\n160900                              PROV-NEW-HOLD\n161000                              WAGE-NEW-CBSA-INDEX-RECORD",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "160900                              PROV-NEW-HOLD\n\n161000                              WAGE-NEW-CBSA-INDEX-RECORD\n161100\n161200         PERFORM 2900-MOVE-PPS-ADDITIONAL-VARS THRU 2900-EXIT\n161300         GOBACK.\n161400*****************************************************************",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "161000                              WAGE-NEW-CBSA-INDEX-RECORD\n\n161100\n161200         PERFORM 2900-MOVE-PPS-ADDITIONAL-VARS THRU 2900-EXIT\n161300         GOBACK.\n161400*****************************************************************\n161500*****************************************************************\n161600**          THIS NEXT CALL WILL PROCESS 2010 BILLS  WITH",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "162200                              PPS-DATA\n\n162300                              PRICER-OPT-VERS-SW\n162400                              PPS-ADDITIONAL-VARIABLES-PRE13",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "162300                              PRICER-OPT-VERS-SW\n\n162400                              PPS-ADDITIONAL-VARIABLES-PRE13",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "162400                              PPS-ADDITIONAL-VARIABLES-PRE13\n\n162500                              PROV-NEW-HOLD\n162600                              WAGE-NEW-CBSA-INDEX-RECORD",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "162500                              PROV-NEW-HOLD\n\n162600                              WAGE-NEW-CBSA-INDEX-RECORD",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "162600                              WAGE-NEW-CBSA-INDEX-RECORD\n\n162700",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "163800                              PPS-DATA\n\n163900                              PRICER-OPT-VERS-SW\n164000                              PPS-ADDITIONAL-VARIABLES-PRE13",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "163900                              PRICER-OPT-VERS-SW\n\n164000                              PPS-ADDITIONAL-VARIABLES-PRE13",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "164000                              PPS-ADDITIONAL-VARIABLES-PRE13\n\n164100                              PROV-NEW-HOLD\n164200                              WAGE-NEW-CBSA-INDEX-RECORD\n164300\n164400         PERFORM 2900-MOVE-PPS-ADDITIONAL-VARS THRU 2900-EXIT\n164500         GOBACK.\n164600*****************************************************************",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "164100                              PROV-NEW-HOLD\n\n164200                              WAGE-NEW-CBSA-INDEX-RECORD",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "164200                              WAGE-NEW-CBSA-INDEX-RECORD\n\n164300\n164400         PERFORM 2900-MOVE-PPS-ADDITIONAL-VARS THRU 2900-EXIT\n164500         GOBACK.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "165400                              PPS-DATA\n\n165500                              PRICER-OPT-VERS-SW\n165600                              PPS-ADDITIONAL-VARIABLES-PRE13",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "165500                              PRICER-OPT-VERS-SW\n\n165600                              PPS-ADDITIONAL-VARIABLES-PRE13",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "165600                              PPS-ADDITIONAL-VARIABLES-PRE13\n\n165700                              PROV-NEW-HOLD",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "165700                              PROV-NEW-HOLD\n\n165800                              WAGE-NEW-CBSA-INDEX-RECORD\n165900\n166000         PERFORM 2900-MOVE-PPS-ADDITIONAL-VARS THRU 2900-EXIT\n166100         GOBACK.\n166200*****************************************************************",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "165800                              WAGE-NEW-CBSA-INDEX-RECORD\n\n165900",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "167000                              PPS-DATA\n\n167100                              PRICER-OPT-VERS-SW\n167200                              PPS-ADDITIONAL-VARIABLES-PRE13",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "167100                              PRICER-OPT-VERS-SW\n\n167200                              PPS-ADDITIONAL-VARIABLES-PRE13\n167300                              PROV-NEW-HOLD\n167400                              WAGE-NEW-CBSA-INDEX-RECORD\n167500",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "167200                              PPS-ADDITIONAL-VARIABLES-PRE13\n\n167300                              PROV-NEW-HOLD\n167400                              WAGE-NEW-CBSA-INDEX-RECORD\n167500",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "167300                              PROV-NEW-HOLD\n\n167400                              WAGE-NEW-CBSA-INDEX-RECORD\n167500\n167600         PERFORM 2900-MOVE-PPS-ADDITIONAL-VARS THRU 2900-EXIT\n167700         GOBACK.\n167800*****************************************************************\n167900*****************************************************************",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "167400                              WAGE-NEW-CBSA-INDEX-RECORD\n\n167500\n167600         PERFORM 2900-MOVE-PPS-ADDITIONAL-VARS THRU 2900-EXIT",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "168600                              PPS-DATA\n\n168700                              PRICER-OPT-VERS-SW\n168800                              PPS-ADDITIONAL-VARIABLES-PRE13",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "168700                              PRICER-OPT-VERS-SW\n\n168800                              PPS-ADDITIONAL-VARIABLES-PRE13\n168900                              PROV-NEW-HOLD\n169000                              WAGE-NEW-CBSA-INDEX-RECORD\n169100",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "168800                              PPS-ADDITIONAL-VARIABLES-PRE13\n\n168900                              PROV-NEW-HOLD\n169000                              WAGE-NEW-CBSA-INDEX-RECORD\n169100\n169200         PERFORM 2900-MOVE-PPS-ADDITIONAL-VARS THRU 2900-EXIT\n169300         GOBACK.\n169400*****************************************************************",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "168900                              PROV-NEW-HOLD\n\n169000                              WAGE-NEW-CBSA-INDEX-RECORD\n169100\n169200         PERFORM 2900-MOVE-PPS-ADDITIONAL-VARS THRU 2900-EXIT\n169300         GOBACK.\n169400*****************************************************************\n169500*****************************************************************",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "169000                              WAGE-NEW-CBSA-INDEX-RECORD\n\n169100\n169200         PERFORM 2900-MOVE-PPS-ADDITIONAL-VARS THRU 2900-EXIT\n169300         GOBACK.\n169400*****************************************************************\n169500*****************************************************************",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "170400                              PPS-DATA\n\n170500                              PRICER-OPT-VERS-SW\n170600                              PPS-ADDITIONAL-VARIABLES-PRE13",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "170500                              PRICER-OPT-VERS-SW\n\n170600                              PPS-ADDITIONAL-VARIABLES-PRE13\n170700                              PROV-NEW-HOLD\n170800                              WAGE-NEW-CBSA-INDEX-RECORD\n170900\n171000         PERFORM 2900-MOVE-PPS-ADDITIONAL-VARS THRU 2900-EXIT",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "170600                              PPS-ADDITIONAL-VARIABLES-PRE13\n\n170700                              PROV-NEW-HOLD\n170800                              WAGE-NEW-CBSA-INDEX-RECORD\n170900\n171000         PERFORM 2900-MOVE-PPS-ADDITIONAL-VARS THRU 2900-EXIT",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "170700                              PROV-NEW-HOLD\n\n170800                              WAGE-NEW-CBSA-INDEX-RECORD\n170900",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "170800                              WAGE-NEW-CBSA-INDEX-RECORD\n\n170900\n171000         PERFORM 2900-MOVE-PPS-ADDITIONAL-VARS THRU 2900-EXIT\n171100         GOBACK.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "172100                              PPS-DATA\n\n172200                              PRICER-OPT-VERS-SW",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "172200                              PRICER-OPT-VERS-SW\n\n172300                              PPS-ADDITIONAL-VARIABLES-PRE13\n172400                              PROV-NEW-HOLD\n172500                              WAGE-NEW-INDEX-RECORD\n172600",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "172300                              PPS-ADDITIONAL-VARIABLES-PRE13\n\n172400                              PROV-NEW-HOLD\n172500                              WAGE-NEW-INDEX-RECORD\n172600\n172700         PERFORM 2900-MOVE-PPS-ADDITIONAL-VARS THRU 2900-EXIT\n172800         GOBACK.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "172400                              PROV-NEW-HOLD\n\n172500                              WAGE-NEW-INDEX-RECORD\n172600",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "172500                              WAGE-NEW-INDEX-RECORD\n\n172600",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "173800                              PPS-DATA\n\n173900                              PRICER-OPT-VERS-SW",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "173900                              PRICER-OPT-VERS-SW\n\n174000                              PPS-ADDITIONAL-VARIABLES-PRE13\n174100                              PROV-NEW-HOLD\n174200                              WAGE-NEW-INDEX-RECORD",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "174000                              PPS-ADDITIONAL-VARIABLES-PRE13\n\n174100                              PROV-NEW-HOLD\n174200                              WAGE-NEW-INDEX-RECORD\n174300\n174400         PERFORM 2900-MOVE-PPS-ADDITIONAL-VARS THRU 2900-EXIT\n174500         GOBACK.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "174100                              PROV-NEW-HOLD\n\n174200                              WAGE-NEW-INDEX-RECORD\n174300\n174400         PERFORM 2900-MOVE-PPS-ADDITIONAL-VARS THRU 2900-EXIT\n174500         GOBACK.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "174200                              WAGE-NEW-INDEX-RECORD\n\n174300",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "175500                              PPS-DATA\n\n175600                              PRICER-OPT-VERS-SW",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "175600                              PRICER-OPT-VERS-SW\n\n175700                              PPS-ADDITIONAL-VARIABLES-PRE13\n175800                              PROV-NEW-HOLD\n175900                              WAGE-NEW-INDEX-RECORD\n176000",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "175700                              PPS-ADDITIONAL-VARIABLES-PRE13\n\n175800                              PROV-NEW-HOLD\n175900                              WAGE-NEW-INDEX-RECORD\n176000",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "175800                              PROV-NEW-HOLD\n\n175900                              WAGE-NEW-INDEX-RECORD\n176000",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "175900                              WAGE-NEW-INDEX-RECORD\n\n176000\n176100         PERFORM 2900-MOVE-PPS-ADDITIONAL-VARS THRU 2900-EXIT\n176200         GOBACK.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "177200                              PPS-DATA\n\n177300                              PRICER-OPT-VERS-SW\n177400                              PPS-ADDITIONAL-VARIABLES-PRE13\n177500                              PROV-NEW-HOLD\n177600                              WAGE-NEW-INDEX-RECORD",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "177300                              PRICER-OPT-VERS-SW\n\n177400                              PPS-ADDITIONAL-VARIABLES-PRE13\n177500                              PROV-NEW-HOLD",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "177400                              PPS-ADDITIONAL-VARIABLES-PRE13\n\n177500                              PROV-NEW-HOLD\n177600                              WAGE-NEW-INDEX-RECORD",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "177500                              PROV-NEW-HOLD\n\n177600                              WAGE-NEW-INDEX-RECORD\n177700",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "177600                              WAGE-NEW-INDEX-RECORD\n\n177700\n177800         PERFORM 2900-MOVE-PPS-ADDITIONAL-VARS THRU 2900-EXIT\n177900         GOBACK.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "178900                              PPS-DATA\n\n179000                              PRICER-OPT-VERS-SW\n179100                              PPS-ADDITIONAL-VARIABLES-PRE13\n179200                              PROV-NEW-HOLD",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "179000                              PRICER-OPT-VERS-SW\n\n179100                              PPS-ADDITIONAL-VARIABLES-PRE13",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "179100                              PPS-ADDITIONAL-VARIABLES-PRE13\n\n179200                              PROV-NEW-HOLD\n179300                              WAGE-NEW-INDEX-RECORD\n179400\n179500         PERFORM 2900-MOVE-PPS-ADDITIONAL-VARS THRU 2900-EXIT\n179600         GOBACK.\n179700*****************************************************************",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "179200                              PROV-NEW-HOLD\n\n179300                              WAGE-NEW-INDEX-RECORD\n179400\n179500         PERFORM 2900-MOVE-PPS-ADDITIONAL-VARS THRU 2900-EXIT\n179600         GOBACK.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "179300                              WAGE-NEW-INDEX-RECORD\n\n179400\n179500         PERFORM 2900-MOVE-PPS-ADDITIONAL-VARS THRU 2900-EXIT\n179600         GOBACK.\n179700*****************************************************************\n179800*****************************************************************\n179900**          THIS NEXT CALL WILL PROCESS 1999 BILLS  WITH",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "180500                              PPS-DATA\n\n180600                              PRICER-OPT-VERS-SW\n180700                              PPS-ADDITIONAL-VARIABLES-PRE13\n180800                              PROV-NEW-HOLD\n180900                              WAGE-NEW-INDEX-RECORD",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "180600                              PRICER-OPT-VERS-SW\n\n180700                              PPS-ADDITIONAL-VARIABLES-PRE13\n180800                              PROV-NEW-HOLD\n180900                              WAGE-NEW-INDEX-RECORD",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "180700                              PPS-ADDITIONAL-VARIABLES-PRE13\n\n180800                              PROV-NEW-HOLD\n180900                              WAGE-NEW-INDEX-RECORD\n181000\n181100         PERFORM 2900-MOVE-PPS-ADDITIONAL-VARS THRU 2900-EXIT",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "180800                              PROV-NEW-HOLD\n\n180900                              WAGE-NEW-INDEX-RECORD\n181000\n181100         PERFORM 2900-MOVE-PPS-ADDITIONAL-VARS THRU 2900-EXIT\n181200         GOBACK.\n181300*****************************************************************",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "180900                              WAGE-NEW-INDEX-RECORD\n\n181000\n181100         PERFORM 2900-MOVE-PPS-ADDITIONAL-VARS THRU 2900-EXIT",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "184700                              PPS-DATA\n\n184800                              PRICER-OPT-VERS-SW\n184900                              PPS-ADDITIONAL-VARIABLES-PRE13",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "184800                              PRICER-OPT-VERS-SW\n\n184900                              PPS-ADDITIONAL-VARIABLES-PRE13\n185000                              PROV-HOLD\n185100                              WAGE-INDEX-RECORD",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "184900                              PPS-ADDITIONAL-VARIABLES-PRE13\n\n185000                              PROV-HOLD\n185100                              WAGE-INDEX-RECORD\n185200\n185300         PERFORM 2900-MOVE-PPS-ADDITIONAL-VARS THRU 2900-EXIT\n185400         GOBACK.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "185000                              PROV-HOLD\n\n185100                              WAGE-INDEX-RECORD\n185200\n185300         PERFORM 2900-MOVE-PPS-ADDITIONAL-VARS THRU 2900-EXIT",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "185100                              WAGE-INDEX-RECORD\n\n185200\n185300         PERFORM 2900-MOVE-PPS-ADDITIONAL-VARS THRU 2900-EXIT",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "186300                              PPS-DATA\n\n186400                              PRICER-OPT-VERS-SW",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "186400                              PRICER-OPT-VERS-SW\n\n186500                              PPS-ADDITIONAL-VARIABLES-PRE13\n186600                              PROV-HOLD\n186700                              WAGE-INDEX-RECORD\n186800",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "186500                              PPS-ADDITIONAL-VARIABLES-PRE13\n\n186600                              PROV-HOLD\n186700                              WAGE-INDEX-RECORD\n186800\n186900         PERFORM 2900-MOVE-PPS-ADDITIONAL-VARS THRU 2900-EXIT\n187000         GOBACK.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "186600                              PROV-HOLD\n\n186700                              WAGE-INDEX-RECORD",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "186700                              WAGE-INDEX-RECORD\n\n186800",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "187900                              PPS-DATA\n\n188000                              PRICER-OPT-VERS-SW\n188100                              PPS-ADDITIONAL-VARIABLES-PRE13",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "188000                              PRICER-OPT-VERS-SW\n\n188100                              PPS-ADDITIONAL-VARIABLES-PRE13\n188200                              PROV-HOLD\n188300                              WAGE-INDEX-RECORD\n188400\n188500         PERFORM 2900-MOVE-PPS-ADDITIONAL-VARS THRU 2900-EXIT",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "188100                              PPS-ADDITIONAL-VARIABLES-PRE13\n\n188200                              PROV-HOLD",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "188200                              PROV-HOLD\n\n188300                              WAGE-INDEX-RECORD\n188400",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "188300                              WAGE-INDEX-RECORD\n\n188400\n188500         PERFORM 2900-MOVE-PPS-ADDITIONAL-VARS THRU 2900-EXIT\n188600         GOBACK.\n188700*****************************************************************\n188800*****************************************************************\n188900**          THIS NEXT CALL WILL PROCESS 1995 BILLS  WITH",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "189500                              PPS-DATA\n\n189600                              PRICER-OPT-VERS-SW\n189700                              PPS-ADDITIONAL-VARIABLES-PRE13\n189800                              PROV-HOLD\n189900                              WAGE-INDEX-RECORD\n190000",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "189600                              PRICER-OPT-VERS-SW\n\n189700                              PPS-ADDITIONAL-VARIABLES-PRE13\n189800                              PROV-HOLD\n189900                              WAGE-INDEX-RECORD\n190000\n190100         PERFORM 2900-MOVE-PPS-ADDITIONAL-VARS THRU 2900-EXIT",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "189700                              PPS-ADDITIONAL-VARIABLES-PRE13\n\n189800                              PROV-HOLD\n189900                              WAGE-INDEX-RECORD\n190000\n190100         PERFORM 2900-MOVE-PPS-ADDITIONAL-VARS THRU 2900-EXIT",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "189800                              PROV-HOLD\n\n189900                              WAGE-INDEX-RECORD\n190000\n190100         PERFORM 2900-MOVE-PPS-ADDITIONAL-VARS THRU 2900-EXIT\n190200         GOBACK.\n190300*****************************************************************",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "189900                              WAGE-INDEX-RECORD\n\n190000\n190100         PERFORM 2900-MOVE-PPS-ADDITIONAL-VARS THRU 2900-EXIT\n190200         GOBACK.\n190300*****************************************************************\n190400*****************************************************************\n190500**          THIS NEXT CALL WILL PROCESS 1994 BILLS  WITH",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "191100                              PPS-DATA\n\n191200                              PRICER-OPT-VERS-SW\n191300                              PPS-ADDITIONAL-VARIABLES-PRE13\n191400                              PROV-HOLD",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "191200                              PRICER-OPT-VERS-SW\n\n191300                              PPS-ADDITIONAL-VARIABLES-PRE13\n191400                              PROV-HOLD\n191500                              WAGE-INDEX-RECORD\n191600",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "191300                              PPS-ADDITIONAL-VARIABLES-PRE13\n\n191400                              PROV-HOLD\n191500                              WAGE-INDEX-RECORD",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "191400                              PROV-HOLD\n\n191500                              WAGE-INDEX-RECORD\n191600",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "191500                              WAGE-INDEX-RECORD\n\n191600\n191700         PERFORM 2900-MOVE-PPS-ADDITIONAL-VARS THRU 2900-EXIT\n191800         GOBACK.\n191900*****************************************************************\n192000*****************************************************************\n192100**          THIS NEXT CALL WILL PROCESS 1993 BILLS  WITH",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "192700                              PPS-DATA\n\n192800                              PRICER-OPT-VERS-SW\n192900                              PPS-ADDITIONAL-VARIABLES-PRE13\n193000                              PROV-HOLD\n193100                              WAGE-INDEX-RECORD\n193200\n193300         PERFORM 2900-MOVE-PPS-ADDITIONAL-VARS THRU 2900-EXIT",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "192800                              PRICER-OPT-VERS-SW\n\n192900                              PPS-ADDITIONAL-VARIABLES-PRE13\n193000                              PROV-HOLD\n193100                              WAGE-INDEX-RECORD",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "192900                              PPS-ADDITIONAL-VARIABLES-PRE13\n\n193000                              PROV-HOLD\n193100                              WAGE-INDEX-RECORD\n193200\n193300         PERFORM 2900-MOVE-PPS-ADDITIONAL-VARS THRU 2900-EXIT\n193400         GOBACK.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "193000                              PROV-HOLD\n\n193100                              WAGE-INDEX-RECORD\n193200\n193300         PERFORM 2900-MOVE-PPS-ADDITIONAL-VARS THRU 2900-EXIT\n193400         GOBACK.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "193100                              WAGE-INDEX-RECORD\n\n193200\n193300         PERFORM 2900-MOVE-PPS-ADDITIONAL-VARS THRU 2900-EXIT",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "194300                              PPS-DATA\n\n194400                              PRICER-OPT-VERS-SW\n194500                              PPS-ADDITIONAL-VARIABLES-PRE13",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "194400                              PRICER-OPT-VERS-SW\n\n194500                              PPS-ADDITIONAL-VARIABLES-PRE13\n194600                              PROV-HOLD\n194700                              WAGE-INDEX-RECORD\n194800\n194900         PERFORM 2900-MOVE-PPS-ADDITIONAL-VARS THRU 2900-EXIT\n195000         GOBACK.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "194500                              PPS-ADDITIONAL-VARIABLES-PRE13\n\n194600                              PROV-HOLD",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "194600                              PROV-HOLD\n\n194700                              WAGE-INDEX-RECORD\n194800\n194900         PERFORM 2900-MOVE-PPS-ADDITIONAL-VARS THRU 2900-EXIT\n195000         GOBACK.\n195100*****************************************************************\n195200*****************************************************************",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "194700                              WAGE-INDEX-RECORD\n\n194800\n194900         PERFORM 2900-MOVE-PPS-ADDITIONAL-VARS THRU 2900-EXIT\n195000         GOBACK.\n195100*****************************************************************",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "195900                              PPS-DATA\n\n196000                              PRICER-OPT-VERS-SW\n196100                              PPS-ADDITIONAL-VARIABLES-PRE13\n196200                              PROV-HOLD\n196300                              WAGE-INDEX-RECORD\n196400",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "196000                              PRICER-OPT-VERS-SW\n\n196100                              PPS-ADDITIONAL-VARIABLES-PRE13\n196200                              PROV-HOLD\n196300                              WAGE-INDEX-RECORD\n196400\n196500         PERFORM 2900-MOVE-PPS-ADDITIONAL-VARS THRU 2900-EXIT\n196600         GOBACK.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "196100                              PPS-ADDITIONAL-VARIABLES-PRE13\n\n196200                              PROV-HOLD\n196300                              WAGE-INDEX-RECORD\n196400\n196500         PERFORM 2900-MOVE-PPS-ADDITIONAL-VARS THRU 2900-EXIT",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "196200                              PROV-HOLD\n\n196300                              WAGE-INDEX-RECORD\n196400\n196500         PERFORM 2900-MOVE-PPS-ADDITIONAL-VARS THRU 2900-EXIT\n196600         GOBACK.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "196300                              WAGE-INDEX-RECORD\n\n196400\n196500         PERFORM 2900-MOVE-PPS-ADDITIONAL-VARS THRU 2900-EXIT\n196600         GOBACK.\n196700*****************************************************************\n196800*****************************************************************",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "197500                              PPS-DATA\n\n197600                              PRICER-OPT-VERS-SW\n197700                              PPS-ADDITIONAL-VARIABLES-PRE13\n197800                              PROV-HOLD",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "197600                              PRICER-OPT-VERS-SW\n\n197700                              PPS-ADDITIONAL-VARIABLES-PRE13\n197800                              PROV-HOLD\n197900                              WAGE-INDEX-RECORD\n198000",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "197700                              PPS-ADDITIONAL-VARIABLES-PRE13\n\n197800                              PROV-HOLD\n197900                              WAGE-INDEX-RECORD\n198000\n198100         PERFORM 2900-MOVE-PPS-ADDITIONAL-VARS THRU 2900-EXIT\n198200         GOBACK.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "197800                              PROV-HOLD\n\n197900                              WAGE-INDEX-RECORD",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "197900                              WAGE-INDEX-RECORD\n\n198000\n198100         PERFORM 2900-MOVE-PPS-ADDITIONAL-VARS THRU 2900-EXIT\n198200         GOBACK.\n198300*****************************************************************\n198400*****************************************************************\n198500**          THIS NEXT CALL WILL PROCESS 1989 BILLS  WITH",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "199100                              PPS-DATA\n\n199200                              PRICER-OPT-VERS-SW",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "199200                              PRICER-OPT-VERS-SW\n\n199300                              PPS-ADDITIONAL-VARIABLES-PRE13\n199400                              PROV-HOLD",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "199300                              PPS-ADDITIONAL-VARIABLES-PRE13\n\n199400                              PROV-HOLD\n199500                              WAGE-INDEX-RECORD\n199600",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "199400                              PROV-HOLD\n\n199500                              WAGE-INDEX-RECORD\n199600",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "199500                              WAGE-INDEX-RECORD\n\n199600\n199700         PERFORM 2900-MOVE-PPS-ADDITIONAL-VARS THRU 2900-EXIT\n199800         GOBACK.\n199900*****************************************************************\n200000*****************************************************************\n200100**          THIS NEXT CALL WILL PROCESS 1988 BILLS  WITH",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "200700                              PPS-DATA\n\n200800                              PRICER-OPT-VERS-SW\n200900                              PPS-ADDITIONAL-VARIABLES-PRE13\n201000                              PROV-HOLD\n201100                              WAGE-INDEX-RECORD\n201200",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "200800                              PRICER-OPT-VERS-SW\n\n200900                              PPS-ADDITIONAL-VARIABLES-PRE13\n201000                              PROV-HOLD",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "200900                              PPS-ADDITIONAL-VARIABLES-PRE13\n\n201000                              PROV-HOLD\n201100                              WAGE-INDEX-RECORD\n201200\n201300         PERFORM 2900-MOVE-PPS-ADDITIONAL-VARS THRU 2900-EXIT\n201400         GOBACK.\n201500*****************************************************************",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "201000                              PROV-HOLD\n\n201100                              WAGE-INDEX-RECORD\n201200",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "201100                              WAGE-INDEX-RECORD\n\n201200\n201300         PERFORM 2900-MOVE-PPS-ADDITIONAL-VARS THRU 2900-EXIT",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "202000 0100-GET-MSA\n.\n202100     SET MU1 TO 1.\n202200\n202300     SEARCH M-MSAX-DATA VARYING MU1\n202400     AT END\n202500          MOVE 999999 TO P-PROVIDER-NO",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "203100 0100-EXIT\n.  EXIT.\n203200",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "203300 0150-GET-CBSA\n.\n203400     SET MA1 TO 1.\n203500\n203600     SEARCH T-CBSA-DATA VARYING MA1\n203700     AT END\n203800          MOVE 999999 TO P-PROVIDER-NO",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "204400 0150-EXIT\n.  EXIT.\n204500\n204600 0175-GET-RURAL-CBSA.\n204700\n204800     IF B-21-DISCHARGE-DATE > 20190930 AND",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "204600 0175-GET-RURAL-CBSA\n.\n204700\n204800     IF B-21-DISCHARGE-DATE > 20190930 AND\n204900        B-21-DISCHARGE-DATE < 20201001\n205000       IF H-CBSA-PROV-BLANK = '   '",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "204900        B-21-DISCHARGE-DATE\n < 20201001\n205000       IF H-CBSA-PROV-BLANK = '   '\n205100         GO TO 0175-EXIT\n205200       ELSE\n205300         PERFORM 0190-GET-RURAL-FLOOR-2020 THRU 0190-EXIT\n205400         GO TO 0175-EXIT",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "205500       END-IF\n\n205600     END-IF.\n205700",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "205600     END-IF\n.\n205700",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "206900 0175-EXIT\n.  EXIT.\n207000\n207100 0190-GET-RURAL-FLOOR-2020.\n207200\n207300     SET RUFL-IDX TO 1.\n207400\n207500     SEARCH RUFL-TAB VARYING RUFL-IDX",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "207100 0190-GET-RURAL-FLOOR-2020\n.\n207200\n207300     SET RUFL-IDX TO 1.\n207400",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "208400 0190-EXIT\n.  EXIT.\n208500\n208600 0200-N-GET-MSAPR.\n208700\n208800     IF P-NEW-CHG-CODE-INDEX = 'Y'",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "208600 0200-N-GET-MSAPR\n.\n208700\n208800     IF P-NEW-CHG-CODE-INDEX = 'Y'",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "210000           M-MSAX-MSA\n (MU2) NOT = HOLD-PROV-MSAX.\n210100\n210200 0200-N-EXIT.  EXIT.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "210200 0200-N-EXIT\n.  EXIT.\n210300",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "210400 0250-N-GET-CBSA-PR\n.\n210500\n210600     MOVE ZERO TO MESWK-PRSPC-WAGEIN-BLEND.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "210900        B-21-DISCHARGE-DATE\n < 20151001\n211000        PERFORM 0370-PRSPC-CODE-RTN THRU 0370-EXIT\n211100",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "212900           T-CBSA\n (MA2) NOT = HOLD-PROV-CBSA.\n213000\n213100 0250-EXIT.  EXIT.\n213200\n213300 0260-N-GET-RURAL-CBSA-PR.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "213100 0250-EXIT\n.  EXIT.\n213200\n213300 0260-N-GET-RURAL-CBSA-PR.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "213300 0260-N-GET-RURAL-CBSA-PR\n.\n213400\n213500     MOVE '*' TO H-CBSA-RURAL-LAST-POS.\n213600     PERFORM 0175-GET-RURAL-CBSA THRU 0175-EXIT.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "214200           T-CBSA\n (MA2) NOT = HOLD-RURAL-CBSA.\n214300",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "214400 0260-EXIT\n.  EXIT.\n214500\n214600 0300-N-GET-PR-WAGE-INDX.\n214700",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "214600 0300-N-GET-PR-WAGE-INDX\n.\n214700\n214800     IF  B-21-DISCHARGE-DATE NOT < M-MSAX-EFF-DATE (MU2)\n214900         MOVE M-MSAX-WAGE-INDX1 (MU2) TO W-NEW-PR-INDEX-RECORD\n215000         IF P-NEW-CHG-CODE-INDEX  = 'Y'\n215100            MOVE M-MSAX-WAGE-INDX2 (MU2)\n215200                                     TO W-NEW-PR-INDEX-RECORD.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "215400 0300-N-EXIT\n.  EXIT.\n215500\n215600 0350-N-GET-PR-WAGE-INDX.\n215700\n215800     IF  B-21-DISCHARGE-DATE NOT < T-CBSA-EFF-DATE (MA2) AND\n215900         (T-CBSA-EFF-DATE (MA2) >= W-FY-BEGIN-DATE AND",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "215600 0350-N-GET-PR-WAGE-INDX\n.\n215700\n215800     IF  B-21-DISCHARGE-DATE NOT < T-CBSA-EFF-DATE (MA2) AND\n215900         (T-CBSA-EFF-DATE (MA2) >= W-FY-BEGIN-DATE AND\n216000          T-CBSA-EFF-DATE (MA2) <= W-FY-END-DATE)",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "216000          T-CBSA-EFF-DATE\n (MA2) <= W-FY-END-DATE)\n216100         MOVE T-CBSA-WAGE-INDX1 (MA2)\n216200                              TO W-NEW-CBSA-PR-WI",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "216700 0350-EXIT\n.  EXIT.\n216800\n216900 0360-N-GET-PR-RURAL-WAGE-INDX.\n217000\n217100     IF  B-21-DISCHARGE-DATE NOT < T-CBSA-EFF-DATE (MA2) AND\n217200         (T-CBSA-EFF-DATE (MA2) >= W-FY-BEGIN-DATE AND\n217300          T-CBSA-EFF-DATE (MA2) <= W-FY-END-DATE)",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "216900 0360-N-GET-PR-RURAL-WAGE-INDX\n.\n217000\n217100     IF  B-21-DISCHARGE-DATE NOT < T-CBSA-EFF-DATE (MA2) AND",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "217300          T-CBSA-EFF-DATE\n (MA2) <= W-FY-END-DATE)\n217400         MOVE T-CBSA-WAGE-INDX1 (MA2)\n217500                              TO W-RURAL-CBSA-PR-WI\n217600         IF P-NEW-CBSA-SPEC-PAY-IND = 'Y'",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "218000 0360-EXIT\n.  EXIT.\n218100\n218200*\n218300***************************************************************\n218400* USE IPPS COMPARABLE BLENDED WAGE INDEX FROM TABLE IF        *",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "218800 0370-PRSPC-CODE-RTN\n.\n218900*\n219000     SET PRSPC-IDX TO 1.\n219100     SEARCH PRSPC-TAB VARYING PRSPC-IDX",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "219900 0370-EXIT\n.   EXIT.\n220000",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "220200 0500-GET-MSA\n.\n220300        IF P-NEW-CHG-CODE-INDEX = 'Y'",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "221000        B-21-DISCHARGE-DATE\n < 19981001\n221100        PERFORM 2300-1998-FLOOR-MSA THRU 2300-1998-EXIT.\n221200",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "221500        B-21-DISCHARGE-DATE\n < 19991001\n221600        PERFORM 2300-1999-FLOOR-MSA THRU 2300-1999-EXIT.\n221700",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "222000        B-21-DISCHARGE-DATE\n < 20001001\n222100        PERFORM 2300-2000-FLOOR-MSA THRU 2300-2000-EXIT.\n222200\n222300**2001***********************************************************\n222400     IF B-21-DISCHARGE-DATE > 20000930 AND\n222500        B-21-DISCHARGE-DATE < 20011001",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "222500        B-21-DISCHARGE-DATE\n < 20011001\n222600        PERFORM 2300-2001-FLOOR-MSA THRU 2300-2001-EXIT.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "223000        B-21-DISCHARGE-DATE\n < 20021001\n223100        PERFORM 2300-2002-FLOOR-MSA THRU 2300-2002-EXIT.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "223400        B-21-DISCHARGE-DATE\n < 20021001\n223500          PERFORM 2700-2002-WI-401-HOSPITAL THRU 2700-2002-EXIT.\n223600\n223700**2003***********************************************************",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "223900        B-21-DISCHARGE-DATE\n < 20031001\n224000          PERFORM 2700-2003-WI-401-HOSPITAL THRU 2700-2003-EXIT.\n224100\n224200     IF B-21-DISCHARGE-DATE > 20020930 AND\n224300        B-21-DISCHARGE-DATE < 20031001\n224400        PERFORM 2300-2003-FLOOR-MSA THRU 2300-2003-EXIT.\n224500",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "224300        B-21-DISCHARGE-DATE\n < 20031001\n224400        PERFORM 2300-2003-FLOOR-MSA THRU 2300-2003-EXIT.\n224500\n224600**2004***********************************************************\n224700     IF B-21-DISCHARGE-DATE > 20030930 AND\n224800        B-21-DISCHARGE-DATE < 20041001\n224900          PERFORM 2700-2004-WI-401-HOSPITAL THRU 2700-2004-EXIT.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "224800        B-21-DISCHARGE-DATE\n < 20041001\n224900          PERFORM 2700-2004-WI-401-HOSPITAL THRU 2700-2004-EXIT.\n225000\n225100     IF B-21-DISCHARGE-DATE > 20030930 AND\n225200        B-21-DISCHARGE-DATE < 20041001",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "225200        B-21-DISCHARGE-DATE\n < 20041001\n225300        PERFORM 2300-2004-FLOOR-MSA THRU 2300-2004-EXIT.\n225400\n225500*****************************************************************\n225600     PERFORM 0100-GET-MSA THRU 0100-EXIT.\n225700",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "226500           M-MSAX-MSA\n (MU2) NOT = HOLD-PROV-MSAX.\n226600\n226700     IF P-N-INDIAN-HEALTH-SERVICE\n226800             MOVE 00 TO PPS-RTC\n226900             PERFORM 0800-N-GET-INDIAN-WI THRU 0800-N-EXIT.\n227000\n227100***     RTC = 52  --  WAGE-INDEX NOT FOUND",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "227600        B-21-DISCHARGE-DATE\n < 20001001\n227700          PERFORM 2500-2000-WI-LUGAR THRU 2500-2000-EXIT.\n227800",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "228100        B-21-DISCHARGE-DATE\n < 20011001\n228200          PERFORM 2500-2001-WI-LUGAR THRU 2500-2001-EXIT.\n228300",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "228600        B-21-DISCHARGE-DATE\n < 20031001\n228700          PERFORM 2500-2003-WI-LUGAR THRU 2500-2003-EXIT.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "229100        B-21-DISCHARGE-DATE\n < 20041001\n229200        PERFORM 2300-2004-RECLASS152 THRU 2300-2004-RECLASS-EXIT.\n229300\n229400*****************************************************************\n229500     IF W-NEW-INDEX-RECORD = 00.0000\n229600        MOVE ALL '0' TO PPS-ADDITIONAL-VARIABLES",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "230900           M-MSAX-MSA\n (MU2) NOT = HOLD-PROV-MSAX.\n231000\n231100     IF P-PR-NEW-STATE",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "232000 0500-EXIT\n.  EXIT.\n232100\n232200 0550-GET-CBSA.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "232200 0550-GET-CBSA\n.\n232300**2005*  OCT 1, 2004 CBSA REPLACED MSA\n232400\n232500**----------------------------------------------------------------\n232600** CBSA DOESN'T APPLY TO CLAIMS DISCHARGED BEFORE 10/01/2004",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "235200         P-NEW-CBSA-SPEC-WI-N\n NOT NUMERIC)\n235300        MOVE ALL '0' TO PPS-ADDITIONAL-VARIABLES\n235400        MOVE 52 TO PPS-RTC\n235500        GOBACK.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "235800         P-NEW-CBSA-SPEC-WI-N\n = ZEROES)\n235900        MOVE ALL '0' TO PPS-ADDITIONAL-VARIABLES\n236000        MOVE 52 TO PPS-RTC\n236100        GOBACK.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "236500         P-NEW-EFF-DATE\n > W-FY-END-DATE))\n236600        MOVE ALL '0' TO PPS-ADDITIONAL-VARIABLES\n236700        MOVE 52 TO PPS-RTC\n236800        GOBACK.\n236900\n237000     IF P-NEW-CBSA-WI-SPECIAL\n237100        MOVE 'SPEC*'            TO W-NEW-CBSA-X",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "238300        B-21-DISCHARGE-DATE\n < 20050401\n238400          PERFORM 2700-2005-WI-401-HOSPITAL THRU 2700-2005-EXIT.\n238500\n238600     IF B-21-DISCHARGE-DATE > 20050331 AND\n238700        B-21-DISCHARGE-DATE < 20051001",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "238700        B-21-DISCHARGE-DATE\n < 20051001\n238800          PERFORM 2750-2005-WI-401-HOSPITAL THRU 2750-2005-EXIT.\n238900\n239000     IF B-21-DISCHARGE-DATE > 20040930 AND\n239100        B-21-DISCHARGE-DATE < 20051001\n239200        PERFORM 2300-2005-FLOOR-CBSA THRU 2300-2005-EXIT.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "239100        B-21-DISCHARGE-DATE\n < 20051001\n239200        PERFORM 2300-2005-FLOOR-CBSA THRU 2300-2005-EXIT.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "239700        B-21-DISCHARGE-DATE\n < 20061001\n239800          PERFORM 2800-2006-WI-401-HOSPITAL THRU 2800-2006-EXIT.\n239900\n240000     IF B-21-DISCHARGE-DATE > 20050930 AND\n240100        B-21-DISCHARGE-DATE < 20061001\n240200        PERFORM 2300-2006-FLOOR-CBSA THRU 2300-2006-EXIT.\n240300",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "240100        B-21-DISCHARGE-DATE\n < 20061001\n240200        PERFORM 2300-2006-FLOOR-CBSA THRU 2300-2006-EXIT.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "240700        B-21-DISCHARGE-DATE\n < 20071001\n240800          PERFORM 2800-2007-WI-401-HOSPITAL THRU 2800-2007-EXIT.\n240900",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "241100        B-21-DISCHARGE-DATE\n < 20071001\n241200        PERFORM 2300-2007-FLOOR-CBSA THRU 2300-2007-EXIT.\n241300\n241400*****************************************************************\n241500**2008***********************************************************\n241600",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "241800        B-21-DISCHARGE-DATE\n < 20081001\n241900          PERFORM 2800-2008-WI-401-HOSPITAL THRU 2800-2008-EXIT.\n242000",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "242200        B-21-DISCHARGE-DATE\n < 20081001\n242300        PERFORM 2300-2008-FLOOR-CBSA THRU 2300-2008-EXIT.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "242900        B-21-DISCHARGE-DATE\n < 20091001\n243000          PERFORM 2800-2009-WI-401-HOSPITAL THRU 2800-2009-EXIT.\n243100\n243200     IF B-21-DISCHARGE-DATE > 20080930 AND",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "243300        B-21-DISCHARGE-DATE\n < 20091001\n243400        PERFORM 2300-2009-FLOOR-CBSA THRU 2300-2009-EXIT.\n243500\n243600*****************************************************************\n243700**2010***********************************************************\n243800",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "244000        B-21-DISCHARGE-DATE\n < 20101001\n244100          PERFORM 2800-2010-WI-401-HOSPITAL THRU 2800-2010-EXIT.\n244200\n244300     IF B-21-DISCHARGE-DATE > 20090930 AND\n244400        B-21-DISCHARGE-DATE < 20101001\n244500        PERFORM 2300-2010-FLOOR-CBSA THRU 2300-2010-EXIT.\n244600",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "244400        B-21-DISCHARGE-DATE\n < 20101001\n244500        PERFORM 2300-2010-FLOOR-CBSA THRU 2300-2010-EXIT.\n244600\n244700*****************************************************************\n244800**2011***********************************************************\n244900",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "245100        B-21-DISCHARGE-DATE\n < 20111001\n245200          PERFORM 2800-2011-WI-401-HOSPITAL THRU 2800-2011-EXIT.\n245300\n245400     IF B-21-DISCHARGE-DATE > 20100930 AND\n245500        B-21-DISCHARGE-DATE < 20111001\n245600        PERFORM 2300-2011-FLOOR-CBSA THRU 2300-2011-EXIT.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "245500        B-21-DISCHARGE-DATE\n < 20111001\n245600        PERFORM 2300-2011-FLOOR-CBSA THRU 2300-2011-EXIT.\n245700\n245800**2012***********************************************************\n245900\n246000     IF B-21-DISCHARGE-DATE > 20110930 AND",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "246100        B-21-DISCHARGE-DATE\n < 20121001\n246200          PERFORM 2800-2012-WI-401-HOSPITAL THRU 2800-2012-EXIT.\n246300\n246400     IF B-21-DISCHARGE-DATE > 20110930 AND\n246500        B-21-DISCHARGE-DATE < 20121001",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "246500        B-21-DISCHARGE-DATE\n < 20121001\n246600        PERFORM 2300-2012-FLOOR-CBSA THRU 2300-2012-EXIT.\n246700\n246800*****************************************************************\n246900**2013***********************************************************",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "247200        B-21-DISCHARGE-DATE\n < 20131001\n247300          PERFORM 2800-2013-WI-401-HOSPITAL THRU 2800-2013-EXIT.\n247400\n247500     IF B-21-DISCHARGE-DATE > 20120930 AND",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "247600        B-21-DISCHARGE-DATE\n < 20131001\n247700        PERFORM 2300-2013-FLOOR-CBSA THRU 2300-2013-EXIT.\n247800",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "248200        B-21-DISCHARGE-DATE\n < 20141001\n248300          PERFORM 2800-2014-WI-401-HOSPITAL THRU 2800-2014-EXIT.\n248400",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "248600        B-21-DISCHARGE-DATE\n < 20141001\n248700        PERFORM 2300-2014-FLOOR-CBSA THRU 2300-2014-EXIT.\n248800\n248900**2015***********************************************************",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "251400                T-CBSA\n (MA2) NOT = HOLD-PROV-CBSA.\n251500\n251600**----------------------------------------------------------------\n251700** FOR FYS 2015 AND AFTER, APPLY THE RURAL FLOOR POLICY\n251800**----------------------------------------------------------------\n251900     IF B-21-DISCHARGE-DATE > 20140930\n252000          PERFORM 2300-2015-FWD-FLOOR-CBSA",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "254100        B-21-DISCHARGE-DATE\n < 20201001\n254200        IF W-NEW-CBSA-WI < WI_QUARTILE_FY2020\n254300           COMPUTE W-NEW-CBSA-WI ROUNDED =\n254400             ((WI_QUARTILE_FY2020 - W-NEW-CBSA-WI) / 2)\n254500             + W-NEW-CBSA-WI.\n254600",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "255900        B-21-DISCHARGE-DATE\n < 20201001\n256000        PERFORM 1000-GET-PREVYR-WI THRU 1000-EXIT.\n256100",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "256600              HLD-PREV-WI\n * WI_PCT_ADJ_FY2020.\n256700\n256800 0550-BYPASS.\n256900",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "256800 0550-BYPASS\n.\n256900",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "260200           T-CBSA\n (MA2) NOT = HOLD-PROV-CBSA.\n260300\n260400**----------------------------------------------------------------\n260500** FOR PUERTO RICO PROVIDERS, GET THE PUERTO RICO SPECIFIC\n260600** WAGE INDEX",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "262700        W-NEW-CBSA-PR-WI\n NOT NUMERIC\n262800        MOVE 0 TO W-NEW-CBSA-PR-WI.\n262900\n263000     IF P-PR-NEW-STATE AND\n263100        W-NEW-CBSA-PR-WI = 00.0000\n263200        MOVE ALL '0' TO PPS-ADDITIONAL-VARIABLES",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "263100        W-NEW-CBSA-PR-WI\n = 00.0000\n263200        MOVE ALL '0' TO PPS-ADDITIONAL-VARIABLES\n263300        MOVE 52 TO PPS-RTC\n263400        GOBACK.\n263500\n263600 0550-EXIT.  EXIT.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "263600 0550-EXIT\n.  EXIT.\n263700\n263800 0600-N-GET-WAGE-INDX.\n263900\n264000     IF  B-21-DISCHARGE-DATE NOT < M-MSAX-EFF-DATE (MU2)\n264100         MOVE M-MSAX-MSA        (MU2) TO W-NEW-MSA\n264200         MOVE M-MSAX-EFF-DATE   (MU2) TO W-NEW-EFF-DATE",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "263800 0600-N-GET-WAGE-INDX\n.\n263900\n264000     IF  B-21-DISCHARGE-DATE NOT < M-MSAX-EFF-DATE (MU2)",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "264700 0600-N-EXIT\n.  EXIT.\n264800\n264900 0650-N-GET-CBSA-WAGE-INDX.\n265000\n265100     IF  B-21-DISCHARGE-DATE NOT < T-CBSA-EFF-DATE (MA2)\n265200       IF (HOLD-PROV-CBSA = '   98'  OR\n265300           HOLD-PROV-CBSA = '   99') OR",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "264900 0650-N-GET-CBSA-WAGE-INDX\n.\n265000\n265100     IF  B-21-DISCHARGE-DATE NOT < T-CBSA-EFF-DATE (MA2)",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "265300           HOLD-PROV-CBSA\n = '   99') OR\n265400          (T-CBSA-EFF-DATE (MA2) >= W-FY-BEGIN-DATE AND\n265500           T-CBSA-EFF-DATE (MA2) <= W-FY-END-DATE)\n265600         MOVE T-CBSA            (MA2) TO W-NEW-CBSA-X",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "265500           T-CBSA-EFF-DATE\n (MA2) <= W-FY-END-DATE)\n265600         MOVE T-CBSA            (MA2) TO W-NEW-CBSA-X\n265700         MOVE T-CBSA-EFF-DATE   (MA2) TO W-NEW-CBSA-EFF-DATE\n265800         MOVE T-CBSA-WAGE-INDX1 (MA2) TO W-NEW-CBSA-WI\n265900         IF P-NEW-CBSA-WI-RECLASS\n266000            MOVE T-CBSA-WAGE-INDX2 (MA2) TO W-NEW-CBSA-WI.\n266100",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "266200 0650-N-EXIT\n.  EXIT.\n266300\n266400 0660-GET-RURAL-CBSA-WAGE-INDX.\n266500\n266600     IF B-21-DISCHARGE-DATE NOT < T-CBSA-EFF-DATE (MA2) AND\n266700        T-CBSA-EFF-DATE (MA2) >= W-FY-BEGIN-DATE AND\n266800        T-CBSA-EFF-DATE (MA2) <= W-FY-END-DATE",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "266400 0660-GET-RURAL-CBSA-WAGE-INDX\n.\n266500\n266600     IF B-21-DISCHARGE-DATE NOT < T-CBSA-EFF-DATE (MA2) AND",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "266700        T-CBSA-EFF-DATE\n (MA2) >= W-FY-BEGIN-DATE AND\n266800        T-CBSA-EFF-DATE (MA2) <= W-FY-END-DATE\n266900        MOVE T-CBSA            (MA2) TO W-RURAL-CBSA-X\n267000        MOVE T-CBSA-EFF-DATE   (MA2) TO W-RURAL-CBSA-EFF-DATE\n267100        MOVE T-CBSA-WAGE-INDX1 (MA2) TO W-RURAL-CBSA-WI.\n267200",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "266800        T-CBSA-EFF-DATE\n (MA2) <= W-FY-END-DATE\n266900        MOVE T-CBSA            (MA2) TO W-RURAL-CBSA-X",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "267300 0660-EXIT\n.  EXIT.\n267400\n267500 0670-GET-RURAL-CBSA-WAGE-INDX.\n267600\n267700     IF B-21-DISCHARGE-DATE NOT < T-CBSA-EFF-DATE (MA2) AND\n267800        T-CBSA-EFF-DATE (MA2) >= W-FY-BEGIN-DATE AND\n267900        T-CBSA-EFF-DATE (MA2) <= W-FY-END-DATE",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "267500 0670-GET-RURAL-CBSA-WAGE-INDX\n.\n267600\n267700     IF B-21-DISCHARGE-DATE NOT < T-CBSA-EFF-DATE (MA2) AND\n267800        T-CBSA-EFF-DATE (MA2) >= W-FY-BEGIN-DATE AND\n267900        T-CBSA-EFF-DATE (MA2) <= W-FY-END-DATE\n268000        MOVE T-CBSA            (MA2) TO W-RURAL-CBSA-X",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "267800        T-CBSA-EFF-DATE\n (MA2) >= W-FY-BEGIN-DATE AND\n267900        T-CBSA-EFF-DATE (MA2) <= W-FY-END-DATE",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "267900        T-CBSA-EFF-DATE\n (MA2) <= W-FY-END-DATE\n268000        MOVE T-CBSA            (MA2) TO W-RURAL-CBSA-X\n268100        MOVE T-CBSA-EFF-DATE   (MA2) TO W-RURAL-CBSA-EFF-DATE",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "268400 0670-EXIT\n.  EXIT.\n268500\n268600 0690-GET-RURAL-FLOOR-WAGE-INDX.\n268700\n268800     IF  B-21-DISCHARGE-DATE NOT < RUFL-EFF-DATE (RUFL-IDX2) AND\n268900         RUFL-EFF-DATE (RUFL-IDX2) >= W-FY-BEGIN-DATE AND",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "268600 0690-GET-RURAL-FLOOR-WAGE-INDX\n.\n268700\n268800     IF  B-21-DISCHARGE-DATE NOT < RUFL-EFF-DATE (RUFL-IDX2) AND\n268900         RUFL-EFF-DATE (RUFL-IDX2) >= W-FY-BEGIN-DATE AND\n269000         RUFL-EFF-DATE (RUFL-IDX2) <= W-FY-END-DATE",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "268900         RUFL-EFF-DATE\n (RUFL-IDX2) >= W-FY-BEGIN-DATE AND\n269000         RUFL-EFF-DATE (RUFL-IDX2) <= W-FY-END-DATE\n269100         MOVE RUFL-CBSA      (RUFL-IDX2)  TO W-RURAL-CBSA-X",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "269000         RUFL-EFF-DATE\n (RUFL-IDX2) <= W-FY-END-DATE\n269100         MOVE RUFL-CBSA      (RUFL-IDX2)  TO W-RURAL-CBSA-X",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "269500 0690-EXIT\n.  EXIT.\n269600\n269700 0700-N-GET-WAGE-SIZE.\n269800\n269900     IF  B-21-DISCHARGE-DATE NOT < M-MSAX-EFF-DATE (MU2)\n270000         IF  P-NEW-STD-RURAL-CHECK",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "269700 0700-N-GET-WAGE-SIZE\n.\n269800\n269900     IF  B-21-DISCHARGE-DATE NOT < M-MSAX-EFF-DATE (MU2)\n270000         IF  P-NEW-STD-RURAL-CHECK",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "270700 0700-N-EXIT\n.  EXIT.\n270800\n270900 0750-GET-CBSA-SIZE.\n271000\n271100     IF  B-21-DISCHARGE-DATE NOT < T-CBSA-EFF-DATE (MA2)",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "270900 0750-GET-CBSA-SIZE\n.\n271000\n271100     IF  B-21-DISCHARGE-DATE NOT < T-CBSA-EFF-DATE (MA2)\n271200         IF  P-NEW-CBSA-STD-RURAL-CHECK\n271300             MOVE 'R' TO W-NEW-CBSA-SIZE\n271400         ELSE\n271500         IF  T-CBSA-SIZE (MA2) = 'L'",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "271900 0750-EXIT\n.  EXIT.\n272000\n272100 0800-N-GET-INDIAN-WI.\n272200     IF  P-NEW-STATE = 02\n272300             MOVE 98 TO H-MSAX-PROV-STATE",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "272100 0800-N-GET-INDIAN-WI\n.\n272200     IF  P-NEW-STATE = 02\n272300             MOVE 98 TO H-MSAX-PROV-STATE",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "273500            M-MSAX-MSA\n (MU2) NOT = HOLD-PROV-MSAX.\n273600\n273700 0800-N-EXIT.  EXIT.\n273800\n273900 0850-N-GET-CBSA-INDIAN-WI.\n274000     IF  P-NEW-STATE-CODE-X = 02\n274100             MOVE 98 TO H-CBSA-PROV-STATE",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "273700 0800-N-EXIT\n.  EXIT.\n273800\n273900 0850-N-GET-CBSA-INDIAN-WI.\n274000     IF  P-NEW-STATE-CODE-X = 02\n274100             MOVE 98 TO H-CBSA-PROV-STATE\n274200     ELSE\n274300             MOVE 99 TO H-CBSA-PROV-STATE.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "273900 0850-N-GET-CBSA-INDIAN-WI\n.\n274000     IF  P-NEW-STATE-CODE-X = 02\n274100             MOVE 98 TO H-CBSA-PROV-STATE\n274200     ELSE\n274300             MOVE 99 TO H-CBSA-PROV-STATE.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "275300            T-CBSA\n (MA2) NOT = HOLD-PROV-CBSA.\n275400 0850-EXIT.  EXIT.\n275500\n275600 0900-GET-COUNTY-CODE.\n275700\n275800     SET OUTM-IDX TO 1.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "275400 0850-EXIT\n.  EXIT.\n275500\n275600 0900-GET-COUNTY-CODE.\n275700\n275800     SET OUTM-IDX TO 1.\n275900",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "275600 0900-GET-COUNTY-CODE\n.\n275700\n275800     SET OUTM-IDX TO 1.\n275900\n276000     SEARCH OUTM-TAB VARYING OUTM-IDX",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "276700 0900-EXIT\n.  EXIT.\n276800\n276900 0950-GET-OUTM-ADJ.\n277000\n277100     IF OUTM-EFF-DATE(OUTM-IDX2) <= B-21-DISCHARGE-DATE AND\n277200        OUTM-EFF-DATE(OUTM-IDX2) >= W-FY-BEGIN-DATE AND\n277300        OUTM-EFF-DATE(OUTM-IDX2) <= W-FY-END-DATE",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "276900 0950-GET-OUTM-ADJ\n.\n277000\n277100     IF OUTM-EFF-DATE(OUTM-IDX2) <= B-21-DISCHARGE-DATE AND\n277200        OUTM-EFF-DATE(OUTM-IDX2) >= W-FY-BEGIN-DATE AND\n277300        OUTM-EFF-DATE(OUTM-IDX2) <= W-FY-END-DATE\n277400          MOVE OUTM-ADJ-FACT(OUTM-IDX2) TO HLD-OUTM-ADJ.\n277500",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "277200        OUTM-EFF-DATE\n(OUTM-IDX2) >= W-FY-BEGIN-DATE AND\n277300        OUTM-EFF-DATE(OUTM-IDX2) <= W-FY-END-DATE\n277400          MOVE OUTM-ADJ-FACT(OUTM-IDX2) TO HLD-OUTM-ADJ.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "277300        OUTM-EFF-DATE\n(OUTM-IDX2) <= W-FY-END-DATE\n277400          MOVE OUTM-ADJ-FACT(OUTM-IDX2) TO HLD-OUTM-ADJ.\n277500\n277600 0950-EXIT.  EXIT.\n277700",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "277600 0950-EXIT\n.  EXIT.\n277700",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "277800 1000-GET-PREVYR-WI\n.\n277900\n278000     SET PREV-IDX TO 1.\n278100",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "278900 1000-EXIT\n.  EXIT.\n279000\n279100*-----------------------------------------------------------------\n279200\n279300 2300-1998-FLOOR-MSA.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "279300 2300-1998-FLOOR-MSA\n.\n279400\n279500        IF HOLD-PROV-MSAX = '6020'\n279600           AND P-NEW-STATE = 36\n279700               MOVE '  36' TO HOLD-PROV-MSAX.\n279800",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "280300 2300-1998-EXIT\n.  EXIT.\n280400",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "280500 2300-1999-FLOOR-MSA\n.\n280600\n280700        IF HOLD-PROV-MSAX = '6020'\n280800           AND P-NEW-STATE = 36\n280900               MOVE '  36' TO HOLD-PROV-MSAX.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "282800 2300-1999-EXIT\n. EXIT.\n282900\n283000 2300-2000-FLOOR-MSA.\n283100\n283200        IF HOLD-PROV-MSAX = '6020'",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "283000 2300-2000-FLOOR-MSA\n.\n283100\n283200        IF HOLD-PROV-MSAX = '6020'\n283300           AND P-NEW-STATE = 36\n283400               MOVE '  36' TO HOLD-PROV-MSAX.\n283500\n283600        IF HOLD-PROV-MSAX = '9000'",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "285700 2300-2000-EXIT\n. EXIT.\n285800\n285900 2300-2001-FLOOR-MSA.\n286000\n286100        IF HOLD-PROV-MSAX = '1900'\n286200           AND P-NEW-STATE = 21",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "285900 2300-2001-FLOOR-MSA\n.\n286000\n286100        IF HOLD-PROV-MSAX = '1900'",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "288900 2300-2001-EXIT\n. EXIT.\n289000\n289100 2300-2002-FLOOR-MSA.\n289200\n289300        IF HOLD-PROV-MSAX = '1123'\n289400           AND P-NEW-STATE = 22",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "289100 2300-2002-FLOOR-MSA\n.\n289200\n289300        IF HOLD-PROV-MSAX = '1123'\n289400           AND P-NEW-STATE = 22\n289500               MOVE '  22' TO HOLD-PROV-MSAX.\n289600\n289700        IF HOLD-PROV-MSAX = '1900'",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "292900 2300-2002-EXIT\n. EXIT.\n293000",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "293100 2300-2003-FLOOR-MSA\n.\n293200\n293300        IF HOLD-PROV-MSAX = '  14'\n293400           AND P-NEW-CHG-CODE-INDEX = 'Y'",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "298100 2300-2003-EXIT\n. EXIT.\n298200",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "298300 2300-2004-FLOOR-MSA\n.\n298400\n298500        IF HOLD-PROV-MSAX = '  14'\n298600           AND P-NEW-CHG-CODE-INDEX = 'Y'\n298700           AND P-NEW-STATE = 16\n298800               MOVE 'N' TO P-NEW-CHG-CODE-INDEX",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "305500 2300-2004-EXIT\n. EXIT.\n305600 2300-2004-RECLASS152.\n305700",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "305600 2300-2004-RECLASS152\n.\n305700\n305800       IF (P-NEW-PROVIDER-NO = '330001' OR '330126' OR\n305900                               '330135' OR '330205' OR",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "307000 2300-2004-RECLASS-EXIT\n. EXIT.\n307100\n307200 2300-2005-FLOOR-CBSA.\n307300",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "307200 2300-2005-FLOOR-CBSA\n.\n307300\n307400        IF HOLD-PROV-CBSA = '10900'\n307500           AND P-NEW-STATE = 31\n307600               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n307700               MOVE '   31' TO HOLD-PROV-CBSA.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "316700 2300-2005-EXIT\n. EXIT.\n316800",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "317000 2300-2006-FLOOR-CBSA\n.\n317100\n317200        IF HOLD-PROV-CBSA = '   10'\n317300           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n317400           AND P-NEW-STATE = 10",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "326900 2300-2006-EXIT\n. EXIT.\n327000\n327100 2300-2007-FLOOR-CBSA.\n327200\n327300        IF HOLD-PROV-CBSA = '   10'",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "327100 2300-2007-FLOOR-CBSA\n.\n327200\n327300        IF HOLD-PROV-CBSA = '   10'\n327400           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n327500           AND P-NEW-STATE = 10",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "340500 2300-2007-EXIT\n. EXIT.\n340600\n340700 2300-2008-FLOOR-CBSA.\n340800\n340900        IF HOLD-PROV-CBSA = '   39'",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "340700 2300-2008-FLOOR-CBSA\n.\n340800\n340900        IF HOLD-PROV-CBSA = '   39'\n341000           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n341100           AND P-NEW-STATE = 33\n341200               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n341300               MOVE '   33' TO HOLD-PROV-CBSA.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "354000 2300-2008-EXIT\n. EXIT.\n354100\n354200**************YEARCHANGE 2009.3 **********************      *****\n354300\n354400 2300-2009-FLOOR-CBSA.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "354400 2300-2009-FLOOR-CBSA\n.\n354500\n354600        IF HOLD-PROV-CBSA = '   04'\n354700           AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n354800           AND P-NEW-STATE = 04\n354900               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "374400 2300-2009-EXIT\n. EXIT.\n374500\n374600**************YEARCHANGE 2010.0 **********************      *****",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "374800 2300-2010-FLOOR-CBSA\n.\n374900\n375000        IF HOLD-PROV-CBSA = '   33'\n375100          AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n375200          AND P-NEW-STATE = 33",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "390700 2300-2010-EXIT\n. EXIT.\n390800",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "391200 2300-2011-FLOOR-CBSA\n.\n391300\n391400        IF HOLD-PROV-CBSA = '   45'\n391500          AND P-NEW-CBSA-SPEC-PAY-IND  = 'Y'\n391600          AND P-NEW-STATE = 45\n391700               MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND\n391800               MOVE '   45' TO HOLD-PROV-CBSA.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "409300 2300-2011-EXIT\n. EXIT.\n409400",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "409700 2300-2012-FLOOR-CBSA\n.\n409800\n409900**************YEARCHANGE 2012.0 ******************************",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "431300 2300-2012-EXIT\n. EXIT.\n431400",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "431700 2300-2013-FLOOR-CBSA\n.\n431800\n431900**************YEARCHANGE 2013.0 ******************************\n432000",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "451000 2300-2013-EXIT\n. EXIT.\n451100\n451200",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "451300 2300-2014-FLOOR-CBSA\n.\n451400\n451500**************YEARCHANGE 2014.0 ******************************\n451600",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "467800 2300-2014-EXIT\n. EXIT.\n467900\n468000**************YEARCHANGE 2015.0 ******************************\n468100 2300-2015-FWD-FLOOR-CBSA.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "468100 2300-2015-FWD-FLOOR-CBSA\n.\n468200\n468300**----------------------------------------------------------------\n468400** ENSURE THE CBSA WAGE INDEX IS A VALID VALUE, ELSE SET ERROR RTC\n468500**----------------------------------------------------------------\n468600     IF W-NEW-CBSA-WI NOT NUMERIC",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "471700                 T-CBSA\n (MA2) NOT = HOLD-RURAL-CBSA\n471800         GO TO 0690-BYPASS\n471900        END-IF\n472000       END-IF\n472100      END-IF\n472200     END-IF.\n472300",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "471900        END-IF\n\n472000       END-IF\n472100      END-IF\n472200     END-IF.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "472000       END-IF\n\n472100      END-IF\n472200     END-IF.\n472300",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "472100      END-IF\n\n472200     END-IF.\n472300\n472400     IF PPS-RTC = 00",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "472200     END-IF\n.\n472300",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "472700          B-21-DISCHARGE-DATE\n < 20201001\n472800        IF H-CBSA-PROV-BLANK = '   '\n472900          GO TO 0690-BYPASS\n473000        ELSE\n473100          PERFORM 0690-GET-RURAL-FLOOR-WAGE-INDX THRU 0690-EXIT\n473200          GO TO 0690-BYPASS\n473300        END-IF",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "473300        END-IF\n\n473400       END-IF\n473500      END-IF\n473600     END-IF.\n473700",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "473400       END-IF\n\n473500      END-IF\n473600     END-IF.\n473700\n473800     IF PPS-RTC = 00",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "473500      END-IF\n\n473600     END-IF.\n473700\n473800     IF PPS-RTC = 00",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "473600     END-IF\n.\n473700",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "474300                 T-CBSA\n (MA2) NOT = HOLD-RURAL-CBSA\n474400       END-IF\n474500     END-IF.\n474600\n474700 0690-BYPASS.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "474400       END-IF\n\n474500     END-IF.\n474600\n474700 0690-BYPASS.\n474800",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "474500     END-IF\n.\n474600\n474700 0690-BYPASS.\n474800\n474900*    IF W-NEW-CBSA-WI NOT NUMERIC",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "474700 0690-BYPASS\n.\n474800\n474900*    IF W-NEW-CBSA-WI NOT NUMERIC\n475000*       MOVE 0 TO W-NEW-CBSA-WI.\n475100\n475200*------------------------------------------------------------*\n475300* IF NO RURAL WAGE INDEX FOUND, SET TO ZERO (VALID BECAUSE   *",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "476600                   WAGE-NEW-CBSA-INDEX-RECORD\n\n476700        MOVE 'N' TO P-NEW-CBSA-SPEC-PAY-IND",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "477000 2300-2015-EXIT\n. EXIT.\n477100\n477200**************YEARCHANGE 2015.0 ******************************\n477300 2350-2015-FWD-FLOOR-CBSA-PR.\n477400",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "477300 2350-2015-FWD-FLOOR-CBSA-PR\n.\n477400\n477500**----------------------------------------------------------------\n477600** ENSURE PR CBSA WAGE INDEX IS A VALID VALUE, ELSE SET ERROR RTC\n477700**----------------------------------------------------------------\n477800     IF W-NEW-CBSA-PR-WI NOT NUMERIC",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "481200 2350-2015-EXIT\n. EXIT.\n481300\n481400**************YEARCHANGE 2015.0 ******************************",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "481500 2400-CONVERT-PSF\n.\n481600***************************************************************\n481700*              CONVERSION FOR MILLENNIUM                      *",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "482600        W-P-NEW-EFF-DATE\n = '00000000'\n482700        MOVE ZEROES TO W-P-EFF-DATE",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "484500        W-P-NEW-REPORT-DATE\n = '00000000'\n484600        MOVE ZEROES TO W-P-REPORT-DATE",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "485500        W-P-NEW-FY-BEGIN-DATE\n = '00000000'\n485600        MOVE ZEROES TO W-P-FY-BEGIN-DATE\n485700     ELSE",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "487000        W-P-NEW-TERMINATION-DATE\n = '00000000'\n487100        MOVE ZEROES TO W-P-TERMINATION-DATE\n487200     ELSE\n487300        MOVE  W-P-NEW-TERM-DT-YY    TO W-P-TERM-DT-YY\n487400        MOVE  W-P-NEW-TERM-DT-MM    TO W-P-TERM-DT-MM\n487500        MOVE  W-P-NEW-TERM-DT-DD    TO W-P-TERM-DT-DD.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "488100        P-NEW-FYE-DATE\n               = '00000000'\n488200        MOVE ZEROES TO W-P-FISCAL-YEAR-END\n488300     ELSE\n488400        MOVE  W-P-NEW-FYE-YY       TO W-P-YY\n488500        MOVE  W-P-NEW-FYE-MM       TO W-P-MM",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "490200 2400-EXIT\n.   EXIT.\n490300\n490400 2500-2000-WI-LUGAR.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "490400 2500-2000-WI-LUGAR\n.\n490500***************************************************************\n490600****    FOR FY 2000 NEW LUGAR HOSPITALS ONLY                  *\n490700***************************************************************",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "496200 2500-2000-EXIT\n.   EXIT.\n496300\n496400 2500-2001-WI-LUGAR.\n496500***************************************************************\n496600****    FOR FY 2001 NEW LUGAR HOSPITALS ONLY                  *\n496700***************************************************************",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "496400 2500-2001-WI-LUGAR\n.\n496500***************************************************************\n496600****    FOR FY 2001 NEW LUGAR HOSPITALS ONLY                  *\n496700***************************************************************\n496800     IF (P-NEW-PROVIDER-NO = '010043')\n496900            AND (P-NEW-STAND-AMT-LOC-MSA = '1000'\n497000            AND P-NEW-WAGE-INDEX-LOC-MSA = '1000'",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "502800 2500-2001-EXIT\n.   EXIT.\n502900\n503000 2500-2003-WI-LUGAR.\n503100***************************************************************",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "503000 2500-2003-WI-LUGAR\n.\n503100***************************************************************\n503200****    FOR FY 2003 NEW LUGAR HOSPITALS ONLY                  *\n503300***************************************************************\n503400     IF (P-NEW-PROVIDER-NO = '110130')\n503500            AND (P-NEW-STAND-AMT-LOC-MSA = '  11'\n503600            AND P-NEW-WAGE-INDEX-LOC-MSA = '  11'",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "504100 2500-2003-EXIT\n.   EXIT.\n504200\n504300 2700-2002-WI-401-HOSPITAL.\n504400***************************************************************\n504500****    FOR FY 2002 SECTION 401 HOSPITALS                     *\n504600***************************************************************\n504700     IF (P-NEW-PROVIDER-NO = '050192' OR '050286' OR",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "504300 2700-2002-WI-401-HOSPITAL\n.\n504400***************************************************************\n504500****    FOR FY 2002 SECTION 401 HOSPITALS                     *\n504600***************************************************************\n504700     IF (P-NEW-PROVIDER-NO = '050192' OR '050286' OR\n504800                             '050446' OR '050469' OR\n504900                             '050528' OR '050542')",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "505100                        P-NEW-STAND-AMT-LOC-MSA\n.\n505200\n505300     IF (P-NEW-PROVIDER-NO = '100048' OR '100118')\n505400         MOVE '  10' TO HOLD-PROV-MSAX\n505500                        P-NEW-STAND-AMT-LOC-MSA.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "505500                        P-NEW-STAND-AMT-LOC-MSA\n.\n505600\n505700     IF (P-NEW-PROVIDER-NO = '170137')",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "505900                        P-NEW-STAND-AMT-LOC-MSA\n.\n506000\n506100     IF (P-NEW-PROVIDER-NO = '190048' OR '190110')\n506200         MOVE '  19' TO HOLD-PROV-MSAX",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "506300                        P-NEW-STAND-AMT-LOC-MSA\n.\n506400",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "506700                        P-NEW-STAND-AMT-LOC-MSA\n.\n506800\n506900     IF (P-NEW-PROVIDER-NO = '260006')",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "507100                        P-NEW-STAND-AMT-LOC-MSA\n.\n507200\n507300     IF (P-NEW-PROVIDER-NO = '290038')\n507400         MOVE '  29' TO HOLD-PROV-MSAX",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "507500                        P-NEW-STAND-AMT-LOC-MSA\n.\n507600",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "507900                        P-NEW-STAND-AMT-LOC-MSA\n.\n508000\n508100     IF (P-NEW-PROVIDER-NO = '390106')\n508200         MOVE '  39' TO HOLD-PROV-MSAX\n508300                        P-NEW-STAND-AMT-LOC-MSA.\n508400\n508500     IF (P-NEW-PROVIDER-NO = '520007' OR '520153')",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "508300                        P-NEW-STAND-AMT-LOC-MSA\n.\n508400\n508500     IF (P-NEW-PROVIDER-NO = '520007' OR '520153')",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "508700                        P-NEW-STAND-AMT-LOC-MSA\n.\n508800",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "508900 2700-2002-EXIT\n.   EXIT.\n509000",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "509100 2700-2003-WI-401-HOSPITAL\n.\n509200***************************************************************\n509300****    FOR FY 2003 SECTION 401 HOSPITALS                     *\n509400***************************************************************",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "509900                        P-NEW-STAND-AMT-LOC-MSA\n.\n510000",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "510300                        P-NEW-STAND-AMT-LOC-MSA\n.\n510400\n510500     IF (P-NEW-PROVIDER-NO = '170137')\n510600         MOVE '  17' TO HOLD-PROV-MSAX\n510700                        P-NEW-STAND-AMT-LOC-MSA.\n510800",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "510700                        P-NEW-STAND-AMT-LOC-MSA\n.\n510800\n510900     IF (P-NEW-PROVIDER-NO = '190048' OR '190110')\n511000         MOVE '  19' TO HOLD-PROV-MSAX\n511100                        P-NEW-STAND-AMT-LOC-MSA.\n511200\n511300     IF (P-NEW-PROVIDER-NO = '230078')",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "511100                        P-NEW-STAND-AMT-LOC-MSA\n.\n511200\n511300     IF (P-NEW-PROVIDER-NO = '230078')\n511400         MOVE '  23' TO HOLD-PROV-MSAX",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "511500                        P-NEW-STAND-AMT-LOC-MSA\n.\n511600\n511700     IF (P-NEW-PROVIDER-NO = '260006')\n511800         MOVE '  26' TO HOLD-PROV-MSAX\n511900                        P-NEW-STAND-AMT-LOC-MSA.\n512000\n512100     IF (P-NEW-PROVIDER-NO = '300009')",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "511900                        P-NEW-STAND-AMT-LOC-MSA\n.\n512000\n512100     IF (P-NEW-PROVIDER-NO = '300009')\n512200         MOVE '  30' TO HOLD-PROV-MSAX\n512300                        P-NEW-STAND-AMT-LOC-MSA.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "512300                        P-NEW-STAND-AMT-LOC-MSA\n.\n512400\n512500     IF (P-NEW-PROVIDER-NO = '380084')\n512600         MOVE '  38' TO HOLD-PROV-MSAX\n512700                        P-NEW-STAND-AMT-LOC-MSA.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "512700                        P-NEW-STAND-AMT-LOC-MSA\n.\n512800\n512900 2700-2003-EXIT.   EXIT.\n513000\n513100 2700-2004-WI-401-HOSPITAL.\n513200***************************************************************",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "512900 2700-2003-EXIT\n.   EXIT.\n513000",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "513100 2700-2004-WI-401-HOSPITAL\n.\n513200***************************************************************\n513300****    FOR FY 2004 SECTION 401 HOSPITALS                     *\n513400***************************************************************\n513500     IF (P-NEW-PROVIDER-NO = '050192' OR '050286' OR\n513600                             '050469' OR '050528' OR\n513700                             '050618')",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "513900                        P-NEW-STAND-AMT-LOC-MSA\n.\n514000\n514100     IF (P-NEW-PROVIDER-NO = '100048' OR '100118')",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "514300                        P-NEW-STAND-AMT-LOC-MSA\n.\n514400\n514500     IF (P-NEW-PROVIDER-NO = '170137')\n514600         MOVE '  17' TO HOLD-PROV-MSAX\n514700                        P-NEW-STAND-AMT-LOC-MSA.\n514800",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "514700                        P-NEW-STAND-AMT-LOC-MSA\n.\n514800\n514900     IF (P-NEW-PROVIDER-NO = '190048' OR '190110')\n515000         MOVE '  19' TO HOLD-PROV-MSAX\n515100                        P-NEW-STAND-AMT-LOC-MSA.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "515100                        P-NEW-STAND-AMT-LOC-MSA\n.\n515200\n515300     IF (P-NEW-PROVIDER-NO = '230078')\n515400         MOVE '  23' TO HOLD-PROV-MSAX\n515500                        P-NEW-STAND-AMT-LOC-MSA.\n515600\n515700     IF (P-NEW-PROVIDER-NO = '260006')",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "515500                        P-NEW-STAND-AMT-LOC-MSA\n.\n515600",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "515900                        P-NEW-STAND-AMT-LOC-MSA\n.\n516000\n516100     IF (P-NEW-PROVIDER-NO = '300009')\n516200         MOVE '  30' TO HOLD-PROV-MSAX\n516300                        P-NEW-STAND-AMT-LOC-MSA.\n516400\n516500     IF (P-NEW-PROVIDER-NO = '380084')",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "516300                        P-NEW-STAND-AMT-LOC-MSA\n.\n516400",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "516700                        P-NEW-STAND-AMT-LOC-MSA\n.\n516800\n516900     IF (P-NEW-PROVIDER-NO = '390106')",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "517100                        P-NEW-STAND-AMT-LOC-MSA\n.\n517200\n517300 2700-2004-EXIT.   EXIT.\n517400",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "517300 2700-2004-EXIT\n.   EXIT.\n517400\n517500 2700-2005-WI-401-HOSPITAL.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "517500 2700-2005-WI-401-HOSPITAL\n.\n517600***************************************************************\n517700****    FOR FY 2005 SECTION 401 HOSPITALS  OCT THRU MAR 2005  *\n517800***************************************************************",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "518400                        P-NEW-CBSA-STAND-AMT-LOC\n.\n518500\n518600     IF (P-NEW-PROVIDER-NO = '070004')",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "518800                        P-NEW-CBSA-STAND-AMT-LOC\n.\n518900\n519000     IF (P-NEW-PROVIDER-NO = '100048' OR '100118')",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "519200                        P-NEW-CBSA-STAND-AMT-LOC\n.\n519300",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "519600                        P-NEW-CBSA-STAND-AMT-LOC\n.\n519700",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "520000                        P-NEW-CBSA-STAND-AMT-LOC\n.\n520100\n520200     IF (P-NEW-PROVIDER-NO = '230078')\n520300         MOVE '   23' TO HOLD-PROV-CBSA\n520400                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "520400                        P-NEW-CBSA-STAND-AMT-LOC\n.\n520500",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "520800                        P-NEW-CBSA-STAND-AMT-LOC\n.\n520900\n521000     IF (P-NEW-PROVIDER-NO = '290038' OR '291301')",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "521200                        P-NEW-CBSA-STAND-AMT-LOC\n.\n521300\n521400     IF (P-NEW-PROVIDER-NO = '300009')\n521500         MOVE '   30' TO HOLD-PROV-CBSA\n521600                        P-NEW-CBSA-STAND-AMT-LOC.\n521700\n521800     IF (P-NEW-PROVIDER-NO = '380084')",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "521600                        P-NEW-CBSA-STAND-AMT-LOC\n.\n521700\n521800     IF (P-NEW-PROVIDER-NO = '380084')\n521900         MOVE '   38' TO HOLD-PROV-CBSA",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "522000                        P-NEW-CBSA-STAND-AMT-LOC\n.\n522100\n522200     IF (P-NEW-PROVIDER-NO = '390106' OR '390181')\n522300         MOVE '   39' TO HOLD-PROV-CBSA",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "522400                        P-NEW-CBSA-STAND-AMT-LOC\n.\n522500\n522600 2700-2005-EXIT.   EXIT.\n522700\n522800 2750-2005-WI-401-HOSPITAL.\n522900***************************************************************\n523000****  FOR FY 2005 SECTION 401 HOSPITALS EFFECTIVE APR 1,2005  *",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "522600 2700-2005-EXIT\n.   EXIT.\n522700\n522800 2750-2005-WI-401-HOSPITAL.\n522900***************************************************************\n523000****  FOR FY 2005 SECTION 401 HOSPITALS EFFECTIVE APR 1,2005  *",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "522800 2750-2005-WI-401-HOSPITAL\n.\n522900***************************************************************",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "523400                        P-NEW-CBSA-STAND-AMT-LOC\n.\n523500\n523600     IF (P-NEW-PROVIDER-NO = '040075')\n523700         MOVE '   04' TO HOLD-PROV-CBSA",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "523800                        P-NEW-CBSA-STAND-AMT-LOC\n.\n523900\n524000     IF (P-NEW-PROVIDER-NO = '050192' OR '050469' OR\n524100                             '050528' OR '050618')\n524200         MOVE '   05' TO HOLD-PROV-CBSA\n524300                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "524300                        P-NEW-CBSA-STAND-AMT-LOC\n.\n524400\n524500     IF (P-NEW-PROVIDER-NO = '070004')\n524600         MOVE '   07' TO HOLD-PROV-CBSA\n524700                        P-NEW-CBSA-STAND-AMT-LOC.\n524800\n524900     IF (P-NEW-PROVIDER-NO = '100048' OR '100134')",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "524700                        P-NEW-CBSA-STAND-AMT-LOC\n.\n524800",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "525100                        P-NEW-CBSA-STAND-AMT-LOC\n.\n525200",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "525500                        P-NEW-CBSA-STAND-AMT-LOC\n.\n525600",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "525900                        P-NEW-CBSA-STAND-AMT-LOC\n.\n526000\n526100     IF (P-NEW-PROVIDER-NO = '150051' OR '150078')\n526200         MOVE '   15' TO HOLD-PROV-CBSA\n526300                        P-NEW-CBSA-STAND-AMT-LOC.\n526400",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "526300                        P-NEW-CBSA-STAND-AMT-LOC\n.\n526400\n526500     IF (P-NEW-PROVIDER-NO = '170137')",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "526700                        P-NEW-CBSA-STAND-AMT-LOC\n.\n526800\n526900     IF (P-NEW-PROVIDER-NO = '190048')\n527000         MOVE '   19' TO HOLD-PROV-CBSA\n527100                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "527100                        P-NEW-CBSA-STAND-AMT-LOC\n.\n527200\n527300     IF (P-NEW-PROVIDER-NO = '230078')\n527400         MOVE '   23' TO HOLD-PROV-CBSA\n527500                        P-NEW-CBSA-STAND-AMT-LOC.\n527600",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "527500                        P-NEW-CBSA-STAND-AMT-LOC\n.\n527600\n527700     IF (P-NEW-PROVIDER-NO = '240037')\n527800         MOVE '   24' TO HOLD-PROV-CBSA\n527900                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "527900                        P-NEW-CBSA-STAND-AMT-LOC\n.\n528000\n528100     IF (P-NEW-PROVIDER-NO = '260006' OR '260122')\n528200         MOVE '   26' TO HOLD-PROV-CBSA\n528300                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "528300                        P-NEW-CBSA-STAND-AMT-LOC\n.\n528400\n528500     IF (P-NEW-PROVIDER-NO = '300009')\n528600         MOVE '   30' TO HOLD-PROV-CBSA\n528700                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "528700                        P-NEW-CBSA-STAND-AMT-LOC\n.\n528800\n528900     IF (P-NEW-PROVIDER-NO = '370054')\n529000         MOVE '   37' TO HOLD-PROV-CBSA\n529100                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "529100                        P-NEW-CBSA-STAND-AMT-LOC\n.\n529200\n529300     IF (P-NEW-PROVIDER-NO = '380040' OR '380084')\n529400         MOVE '   38' TO HOLD-PROV-CBSA\n529500                        P-NEW-CBSA-STAND-AMT-LOC.\n529600\n529700     IF (P-NEW-PROVIDER-NO = '390181' OR '390183' OR",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "529500                        P-NEW-CBSA-STAND-AMT-LOC\n.\n529600\n529700     IF (P-NEW-PROVIDER-NO = '390181' OR '390183' OR\n529800                             '390201')\n529900         MOVE '   39' TO HOLD-PROV-CBSA",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "530000                        P-NEW-CBSA-STAND-AMT-LOC\n.\n530100\n530200     IF (P-NEW-PROVIDER-NO = '450052' OR '450078' OR\n530300                             '450243' OR '450276' OR\n530400                             '450348')\n530500         MOVE '   45' TO HOLD-PROV-CBSA",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "530600                        P-NEW-CBSA-STAND-AMT-LOC\n.\n530700\n530800     IF (P-NEW-PROVIDER-NO = '500023' OR '500037' OR\n530900                             '500122' OR '500147' OR\n531000                             '500148')\n531100         MOVE '   50' TO HOLD-PROV-CBSA\n531200                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "531200                        P-NEW-CBSA-STAND-AMT-LOC\n.\n531300\n531400 2750-2005-EXIT.   EXIT.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "531400 2750-2005-EXIT\n.   EXIT.\n531500",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "531600 2800-2006-WI-401-HOSPITAL\n.\n531700***************************************************************\n531800****  FOR FY 2006 SECTION 401 HOSPITALS EFFECTIVE OCT 1,2005  *\n531900***************************************************************",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "532200                        P-NEW-CBSA-STAND-AMT-LOC\n.\n532300\n532400     IF (P-NEW-PROVIDER-NO = '040075')\n532500         MOVE '   04' TO HOLD-PROV-CBSA\n532600                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "532600                        P-NEW-CBSA-STAND-AMT-LOC\n.\n532700\n532800     IF (P-NEW-PROVIDER-NO = '050192' OR '050469' OR\n532900                             '050528' OR '050618')\n533000         MOVE '   05' TO HOLD-PROV-CBSA",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "533100                        P-NEW-CBSA-STAND-AMT-LOC\n.\n533200",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "533500                        P-NEW-CBSA-STAND-AMT-LOC\n.\n533600\n533700     IF (P-NEW-PROVIDER-NO = '100048' OR '100134')\n533800         MOVE '   10' TO HOLD-PROV-CBSA\n533900                        P-NEW-CBSA-STAND-AMT-LOC.\n534000\n534100     IF (P-NEW-PROVIDER-NO = '130018')",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "533900                        P-NEW-CBSA-STAND-AMT-LOC\n.\n534000\n534100     IF (P-NEW-PROVIDER-NO = '130018')\n534200         MOVE '   13' TO HOLD-PROV-CBSA\n534300                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "534300                        P-NEW-CBSA-STAND-AMT-LOC\n.\n534400\n534500     IF (P-NEW-PROVIDER-NO = '140167')",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "534700                        P-NEW-CBSA-STAND-AMT-LOC\n.\n534800\n534900     IF B-21-DISCHARGE-DATE > 20051231\n535000        IF (P-NEW-PROVIDER-NO = '150078')\n535100           MOVE '   15' TO HOLD-PROV-CBSA\n535200                          P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "535200                          P-NEW-CBSA-STAND-AMT-LOC\n.\n535300\n535400     IF B-21-DISCHARGE-DATE < 20060101",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "535700                          P-NEW-CBSA-STAND-AMT-LOC\n.\n535800",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "536100                        P-NEW-CBSA-STAND-AMT-LOC\n.\n536200\n536300     IF (P-NEW-PROVIDER-NO = '190048' OR '190110')\n536400         MOVE '   19' TO HOLD-PROV-CBSA\n536500                        P-NEW-CBSA-STAND-AMT-LOC.\n536600",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "536500                        P-NEW-CBSA-STAND-AMT-LOC\n.\n536600\n536700     IF (P-NEW-PROVIDER-NO = '230042' OR '230078')\n536800         MOVE '   23' TO HOLD-PROV-CBSA\n536900                        P-NEW-CBSA-STAND-AMT-LOC.\n537000",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "536900                        P-NEW-CBSA-STAND-AMT-LOC\n.\n537000\n537100     IF (P-NEW-PROVIDER-NO = '240037' OR '240122')\n537200         MOVE '   24' TO HOLD-PROV-CBSA\n537300                        P-NEW-CBSA-STAND-AMT-LOC.\n537400\n537500     IF (P-NEW-PROVIDER-NO = '260006')",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "537300                        P-NEW-CBSA-STAND-AMT-LOC\n.\n537400\n537500     IF (P-NEW-PROVIDER-NO = '260006')",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "537700                        P-NEW-CBSA-STAND-AMT-LOC\n.\n537800\n537900     IF (P-NEW-PROVIDER-NO = '300009')\n538000         MOVE '   30' TO HOLD-PROV-CBSA\n538100                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "538100                        P-NEW-CBSA-STAND-AMT-LOC\n.\n538200\n538300     IF (P-NEW-PROVIDER-NO = '330268')\n538400         MOVE '   33' TO HOLD-PROV-CBSA\n538500                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "538500                        P-NEW-CBSA-STAND-AMT-LOC\n.\n538600\n538700     IF (P-NEW-PROVIDER-NO = '370054')\n538800         MOVE '   37' TO HOLD-PROV-CBSA",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "538900                        P-NEW-CBSA-STAND-AMT-LOC\n.\n539000\n539100     IF (P-NEW-PROVIDER-NO = '380040' OR '380084')\n539200         MOVE '   38' TO HOLD-PROV-CBSA\n539300                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "539300                        P-NEW-CBSA-STAND-AMT-LOC\n.\n539400\n539500     IF (P-NEW-PROVIDER-NO = '390181' OR '390183' OR\n539600                             '390201')\n539700         MOVE '   39' TO HOLD-PROV-CBSA\n539800                        P-NEW-CBSA-STAND-AMT-LOC.\n539900",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "539800                        P-NEW-CBSA-STAND-AMT-LOC\n.\n539900\n540000     IF (P-NEW-PROVIDER-NO = '440135')\n540100         MOVE '   44' TO HOLD-PROV-CBSA\n540200                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "540200                        P-NEW-CBSA-STAND-AMT-LOC\n.\n540300\n540400     IF (P-NEW-PROVIDER-NO = '450052' OR '450078' OR\n540500                             '450243' OR '450276' OR\n540600                             '450348')",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "540800                        P-NEW-CBSA-STAND-AMT-LOC\n.\n540900\n541000     IF (P-NEW-PROVIDER-NO = '500023' OR '500043' OR\n541100                             '500086' OR '500103' OR",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "541500                        P-NEW-CBSA-STAND-AMT-LOC\n.\n541600\n541700 2800-2006-EXIT.   EXIT.\n541800\n541900 2800-2007-WI-401-HOSPITAL.\n542000***************************************************************",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "541700 2800-2006-EXIT\n.   EXIT.\n541800\n541900 2800-2007-WI-401-HOSPITAL.\n542000***************************************************************\n542100****  FOR FY 2007 SECTION 401 HOSPITALS EFFECTIVE OCT 1,2006  *\n542200***************************************************************",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "541900 2800-2007-WI-401-HOSPITAL\n.\n542000***************************************************************",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "542700                        P-NEW-CBSA-STAND-AMT-LOC\n.\n542800\n542900     IF (P-NEW-PROVIDER-NO = '070004')\n543000         MOVE '   07' TO HOLD-PROV-CBSA\n543100                        P-NEW-CBSA-STAND-AMT-LOC.\n543200",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "543100                        P-NEW-CBSA-STAND-AMT-LOC\n.\n543200\n543300     IF (P-NEW-PROVIDER-NO = '100048' OR '100134')\n543400         MOVE '   10' TO HOLD-PROV-CBSA\n543500                        P-NEW-CBSA-STAND-AMT-LOC.\n543600",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "543500                        P-NEW-CBSA-STAND-AMT-LOC\n.\n543600\n543700     IF (P-NEW-PROVIDER-NO = '140167')\n543800         MOVE '   14' TO HOLD-PROV-CBSA\n543900                        P-NEW-CBSA-STAND-AMT-LOC.\n544000",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "543900                        P-NEW-CBSA-STAND-AMT-LOC\n.\n544000\n544100     IF (P-NEW-PROVIDER-NO = '170137')\n544200         MOVE '   17' TO HOLD-PROV-CBSA",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "544300                        P-NEW-CBSA-STAND-AMT-LOC\n.\n544400\n544500     IF (P-NEW-PROVIDER-NO = '230078')\n544600         MOVE '   23' TO HOLD-PROV-CBSA",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "544700                        P-NEW-CBSA-STAND-AMT-LOC\n.\n544800\n544900     IF (P-NEW-PROVIDER-NO = '260006' OR '260047' OR '260195')\n545000         MOVE '   26' TO HOLD-PROV-CBSA\n545100                        P-NEW-CBSA-STAND-AMT-LOC.\n545200",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "545100                        P-NEW-CBSA-STAND-AMT-LOC\n.\n545200\n545300     IF (P-NEW-PROVIDER-NO = '330044' OR '330245' OR '330268')\n545400         MOVE '   33' TO HOLD-PROV-CBSA\n545500                        P-NEW-CBSA-STAND-AMT-LOC.\n545600\n545700     IF (P-NEW-PROVIDER-NO = '360125')",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "545500                        P-NEW-CBSA-STAND-AMT-LOC\n.\n545600\n545700     IF (P-NEW-PROVIDER-NO = '360125')\n545800         MOVE '   36' TO HOLD-PROV-CBSA\n545900                        P-NEW-CBSA-STAND-AMT-LOC.\n546000\n546100     IF (P-NEW-PROVIDER-NO = '370054')",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "545900                        P-NEW-CBSA-STAND-AMT-LOC\n.\n546000\n546100     IF (P-NEW-PROVIDER-NO = '370054')",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "546300                        P-NEW-CBSA-STAND-AMT-LOC\n.\n546400\n546500     IF (P-NEW-PROVIDER-NO = '380040')\n546600         MOVE '   38' TO HOLD-PROV-CBSA\n546700                        P-NEW-CBSA-STAND-AMT-LOC.\n546800\n546900     IF (P-NEW-PROVIDER-NO = '440135' OR '440144')",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "546700                        P-NEW-CBSA-STAND-AMT-LOC\n.\n546800\n546900     IF (P-NEW-PROVIDER-NO = '440135' OR '440144')\n547000         MOVE '   44' TO HOLD-PROV-CBSA\n547100                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "547100                        P-NEW-CBSA-STAND-AMT-LOC\n.\n547200\n547300     IF (P-NEW-PROVIDER-NO = '450052' OR '450078' OR\n547400                             '450243' OR '450348')\n547500         MOVE '   45' TO HOLD-PROV-CBSA",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "547600                        P-NEW-CBSA-STAND-AMT-LOC\n.\n547700\n547800     IF (P-NEW-PROVIDER-NO = '500148')",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "548000                        P-NEW-CBSA-STAND-AMT-LOC\n.\n548100\n548200     IF (P-NEW-PROVIDER-NO = '520060')\n548300         MOVE '   52' TO HOLD-PROV-CBSA\n548400                        P-NEW-CBSA-STAND-AMT-LOC.\n548500",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "548400                        P-NEW-CBSA-STAND-AMT-LOC\n.\n548500\n548600 2800-2007-EXIT.   EXIT.\n548700",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "548600 2800-2007-EXIT\n.   EXIT.\n548700\n548800 2800-2008-WI-401-HOSPITAL.\n548900***************************************************************\n549000****  FOR FY 2008 SECTION 401 HOSPITALS EFFECTIVE OCT 1,2007  *\n549100***************************************************************\n549200",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "548800 2800-2008-WI-401-HOSPITAL\n.\n548900***************************************************************\n549000****  FOR FY 2008 SECTION 401 HOSPITALS EFFECTIVE OCT 1,2007  *\n549100***************************************************************\n549200\n549300     IF (P-NEW-PROVIDER-NO = '050192' OR\n549400                             '050528' OR '050618')",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "549600                        P-NEW-CBSA-STAND-AMT-LOC\n.\n549700\n549800     IF (P-NEW-PROVIDER-NO = '100134')",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "550000                        P-NEW-CBSA-STAND-AMT-LOC\n.\n550100\n550200     IF (P-NEW-PROVIDER-NO = '170137')\n550300         MOVE '   17' TO HOLD-PROV-CBSA\n550400                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "550400                        P-NEW-CBSA-STAND-AMT-LOC\n.\n550500",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "550800                        P-NEW-CBSA-STAND-AMT-LOC\n.\n550900",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "551200                        P-NEW-CBSA-STAND-AMT-LOC\n.\n551300\n551400     IF (P-NEW-PROVIDER-NO = '260006' OR '260195')\n551500         MOVE '   26' TO HOLD-PROV-CBSA\n551600                        P-NEW-CBSA-STAND-AMT-LOC.\n551700",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "551600                        P-NEW-CBSA-STAND-AMT-LOC\n.\n551700\n551800     IF (P-NEW-PROVIDER-NO = '330268')\n551900         MOVE '   33' TO HOLD-PROV-CBSA\n552000                        P-NEW-CBSA-STAND-AMT-LOC.\n552100\n552200     IF (P-NEW-PROVIDER-NO = '360125')",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "552000                        P-NEW-CBSA-STAND-AMT-LOC\n.\n552100\n552200     IF (P-NEW-PROVIDER-NO = '360125')",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "552400                        P-NEW-CBSA-STAND-AMT-LOC\n.\n552500\n552600     IF (P-NEW-PROVIDER-NO = '370054')",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "552800                        P-NEW-CBSA-STAND-AMT-LOC\n.\n552900\n553000     IF (P-NEW-PROVIDER-NO = '380040')\n553100         MOVE '   38' TO HOLD-PROV-CBSA\n553200                        P-NEW-CBSA-STAND-AMT-LOC.\n553300\n553400     IF (P-NEW-PROVIDER-NO = '390130' OR '390183' OR",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "553200                        P-NEW-CBSA-STAND-AMT-LOC\n.\n553300\n553400     IF (P-NEW-PROVIDER-NO = '390130' OR '390183' OR\n553500                             '390185' OR '390201')\n553600         MOVE '   39' TO HOLD-PROV-CBSA",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "553700                        P-NEW-CBSA-STAND-AMT-LOC\n.\n553800",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "554100                        P-NEW-CBSA-STAND-AMT-LOC\n.\n554200\n554300     IF (P-NEW-PROVIDER-NO = '450052' OR '450078' OR\n554400                             '450243' OR '450348')",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "554600                        P-NEW-CBSA-STAND-AMT-LOC\n.\n554700\n554800     IF (P-NEW-PROVIDER-NO = '500148')\n554900         MOVE '   50' TO HOLD-PROV-CBSA\n555000                        P-NEW-CBSA-STAND-AMT-LOC.\n555100",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "555000                        P-NEW-CBSA-STAND-AMT-LOC\n.\n555100\n555200 2800-2008-EXIT.   EXIT.\n555300\n555400 2800-2009-WI-401-HOSPITAL.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "555200 2800-2008-EXIT\n.   EXIT.\n555300\n555400 2800-2009-WI-401-HOSPITAL.\n555500***************************************************************\n555600****  FOR FY 2009 SECTION 401 HOSPITALS EFFECTIVE OCT 1, 2009 *",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "555400 2800-2009-WI-401-HOSPITAL\n.\n555500***************************************************************\n555600****  FOR FY 2009 SECTION 401 HOSPITALS EFFECTIVE OCT 1, 2009 *\n555700***************************************************************\n555800",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "556100                        P-NEW-CBSA-STAND-AMT-LOC\n.\n556200\n556300     IF (P-NEW-PROVIDER-NO = '234202' OR\n556400                             '329008' OR '040140')\n556500         MOVE '   05' TO HOLD-PROV-CBSA\n556600                        P-NEW-CBSA-STAND-AMT-LOC.\n556700",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "556600                        P-NEW-CBSA-STAND-AMT-LOC\n.\n556700\n556800     IF (P-NEW-PROVIDER-NO = '070004' OR\n556900                             '070036')\n557000         MOVE '   07' TO HOLD-PROV-CBSA",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "557100                        P-NEW-CBSA-STAND-AMT-LOC\n.\n557200\n557300     IF (P-NEW-PROVIDER-NO = '100048' OR\n557400                             '100118' OR '100134')\n557500         MOVE '   10' TO HOLD-PROV-CBSA\n557600                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "557600                        P-NEW-CBSA-STAND-AMT-LOC\n.\n557700\n557800     IF (P-NEW-PROVIDER-NO = '140167')",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "558000                        P-NEW-CBSA-STAND-AMT-LOC\n.\n558100\n558200     IF (P-NEW-PROVIDER-NO = '170137')\n558300         MOVE '   17' TO HOLD-PROV-CBSA\n558400                        P-NEW-CBSA-STAND-AMT-LOC.\n558500\n558600     IF (P-NEW-PROVIDER-NO = '180038')",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "558400                        P-NEW-CBSA-STAND-AMT-LOC\n.\n558500\n558600     IF (P-NEW-PROVIDER-NO = '180038')\n558700         MOVE '   18' TO HOLD-PROV-CBSA",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "558800                        P-NEW-CBSA-STAND-AMT-LOC\n.\n558900\n559000     IF (P-NEW-PROVIDER-NO = '220051')",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "559200                        P-NEW-CBSA-STAND-AMT-LOC\n.\n559300\n559400     IF (P-NEW-PROVIDER-NO = '230078')",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "559600                        P-NEW-CBSA-STAND-AMT-LOC\n.\n559700\n559800     IF (P-NEW-PROVIDER-NO = '250017')",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "560000                        P-NEW-CBSA-STAND-AMT-LOC\n.\n560100",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "560400                        P-NEW-CBSA-STAND-AMT-LOC\n.\n560500\n560600     IF (P-NEW-PROVIDER-NO = '330235' OR '330268')",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "560800                        P-NEW-CBSA-STAND-AMT-LOC\n.\n560900\n561000     IF (P-NEW-PROVIDER-NO = '360125')\n561100         MOVE '   36' TO HOLD-PROV-CBSA",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "561200                        P-NEW-CBSA-STAND-AMT-LOC\n.\n561300\n561400     IF (P-NEW-PROVIDER-NO = '370054')\n561500         MOVE '   37' TO HOLD-PROV-CBSA\n561600                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "561600                        P-NEW-CBSA-STAND-AMT-LOC\n.\n561700\n561800     IF (P-NEW-PROVIDER-NO = '380040')",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "562000                        P-NEW-CBSA-STAND-AMT-LOC\n.\n562100",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "562500                        P-NEW-CBSA-STAND-AMT-LOC\n.\n562600\n562700     IF (P-NEW-PROVIDER-NO = '440135')\n562800         MOVE '   44' TO HOLD-PROV-CBSA\n562900                        P-NEW-CBSA-STAND-AMT-LOC.\n563000\n563100     IF (P-NEW-PROVIDER-NO = '450052' OR '450078' OR",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "562900                        P-NEW-CBSA-STAND-AMT-LOC\n.\n563000\n563100     IF (P-NEW-PROVIDER-NO = '450052' OR '450078' OR\n563200                             '450243' OR '450348')\n563300         MOVE '   45' TO HOLD-PROV-CBSA",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "563400                        P-NEW-CBSA-STAND-AMT-LOC\n.\n563500\n563600     IF (P-NEW-PROVIDER-NO = '490116')\n563700         MOVE '   49' TO HOLD-PROV-CBSA",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "563800                        P-NEW-CBSA-STAND-AMT-LOC\n.\n563900",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "564200                        P-NEW-CBSA-STAND-AMT-LOC\n.\n564300\n564400 2800-2009-EXIT.   EXIT.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "564400 2800-2009-EXIT\n.   EXIT.\n564500\n564600 2800-2010-WI-401-HOSPITAL.\n564700***************************************************************\n564800****  FOR FY 2010 SECTION 401 HOSPITALS EFFECTIVE OCT 1, 2009 *\n564900***************************************************************",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "564600 2800-2010-WI-401-HOSPITAL\n.\n564700***************************************************************\n564800****  FOR FY 2010 SECTION 401 HOSPITALS EFFECTIVE OCT 1, 2009 *",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "565300                        P-NEW-CBSA-STAND-AMT-LOC\n.\n565400\n565500     IF (P-NEW-PROVIDER-NO = '050192' OR\n565600                             '050528' OR '050618')\n565700         MOVE '   05' TO HOLD-PROV-CBSA\n565800                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "565800                        P-NEW-CBSA-STAND-AMT-LOC\n.\n565900\n566000     IF (P-NEW-PROVIDER-NO = '070004')",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "566200                        P-NEW-CBSA-STAND-AMT-LOC\n.\n566300\n566400     IF (P-NEW-PROVIDER-NO = '100048' OR\n566500                             '100118' OR '100134')\n566600         MOVE '   10' TO HOLD-PROV-CBSA",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "566700                        P-NEW-CBSA-STAND-AMT-LOC\n.\n566800\n566900     IF (P-NEW-PROVIDER-NO = '140167')",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "567100                        P-NEW-CBSA-STAND-AMT-LOC\n.\n567200\n567300     IF (P-NEW-PROVIDER-NO = '170137')\n567400         MOVE '   17' TO HOLD-PROV-CBSA",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "567500                        P-NEW-CBSA-STAND-AMT-LOC\n.\n567600\n567700     IF (P-NEW-PROVIDER-NO = '180038')\n567800         MOVE '   18' TO HOLD-PROV-CBSA\n567900                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "567900                        P-NEW-CBSA-STAND-AMT-LOC\n.\n568000\n568100     IF (P-NEW-PROVIDER-NO = '220051')",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "568300                        P-NEW-CBSA-STAND-AMT-LOC\n.\n568400\n568500     IF (P-NEW-PROVIDER-NO = '230078')",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "568700                        P-NEW-CBSA-STAND-AMT-LOC\n.\n568800\n568900     IF (P-NEW-PROVIDER-NO = '250017')\n569000         MOVE '   25' TO HOLD-PROV-CBSA",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "569100                        P-NEW-CBSA-STAND-AMT-LOC\n.\n569200\n569300     IF (P-NEW-PROVIDER-NO = '260006' OR '260034' OR\n569400                             '260047' OR '260195')\n569500         MOVE '   26' TO HOLD-PROV-CBSA\n569600                        P-NEW-CBSA-STAND-AMT-LOC.\n569700",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "569600                        P-NEW-CBSA-STAND-AMT-LOC\n.\n569700\n569800     IF (P-NEW-PROVIDER-NO = '330235' OR '330268')",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "570000                        P-NEW-CBSA-STAND-AMT-LOC\n.\n570100\n570200     IF (P-NEW-PROVIDER-NO = '300023')",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "570400                        P-NEW-CBSA-STAND-AMT-LOC\n.\n570500\n570600     IF (P-NEW-PROVIDER-NO = '360125')\n570700         MOVE '   36' TO HOLD-PROV-CBSA",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "570800                        P-NEW-CBSA-STAND-AMT-LOC\n.\n570900\n571000     IF (P-NEW-PROVIDER-NO = '370054')\n571100         MOVE '   37' TO HOLD-PROV-CBSA\n571200                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "571200                        P-NEW-CBSA-STAND-AMT-LOC\n.\n571300\n571400     IF (P-NEW-PROVIDER-NO = '380040')\n571500         MOVE '   38' TO HOLD-PROV-CBSA\n571600                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "571600                        P-NEW-CBSA-STAND-AMT-LOC\n.\n571700\n571800     IF (P-NEW-PROVIDER-NO = '390130' OR '390183' OR\n571900                             '390233')\n572000         MOVE '   39' TO HOLD-PROV-CBSA\n572100                        P-NEW-CBSA-STAND-AMT-LOC.\n572200",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "572100                        P-NEW-CBSA-STAND-AMT-LOC\n.\n572200\n572300     IF (P-NEW-PROVIDER-NO = '450052' OR '450078' OR\n572400                             '450243' OR '450348')\n572500         MOVE '   45' TO HOLD-PROV-CBSA",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "572600                        P-NEW-CBSA-STAND-AMT-LOC\n.\n572700\n572800     IF (P-NEW-PROVIDER-NO = '490116')",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "573000                        P-NEW-CBSA-STAND-AMT-LOC\n.\n573100",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "573400                        P-NEW-CBSA-STAND-AMT-LOC\n.\n573500\n573600 2800-2010-EXIT.   EXIT.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "573600 2800-2010-EXIT\n.   EXIT.\n573700",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "573800 2800-2011-WI-401-HOSPITAL\n.\n573900***************************************************************\n574000****  FOR FY 2011 SECTION 401 HOSPITALS EFFECTIVE OCT 1, 2010 *\n574100***************************************************************\n574200*\n574300",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "574600                        P-NEW-CBSA-STAND-AMT-LOC\n.\n574700\n574800     IF (P-NEW-PROVIDER-NO = '050192' OR\n574900                             '050528' OR '050618')\n575000         MOVE '   05' TO HOLD-PROV-CBSA",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "575100                        P-NEW-CBSA-STAND-AMT-LOC\n.\n575200\n575300     IF (P-NEW-PROVIDER-NO = '070004')\n575400         MOVE '   07' TO HOLD-PROV-CBSA\n575500                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "575500                        P-NEW-CBSA-STAND-AMT-LOC\n.\n575600\n575700     IF (P-NEW-PROVIDER-NO = '100048' OR\n575800                             '100118' OR '100134')\n575900         MOVE '   10' TO HOLD-PROV-CBSA",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "576000                        P-NEW-CBSA-STAND-AMT-LOC\n.\n576100",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "576400                        P-NEW-CBSA-STAND-AMT-LOC\n.\n576500\n576600     IF (P-NEW-PROVIDER-NO = '170037' OR '170137')\n576700         MOVE '   17' TO HOLD-PROV-CBSA\n576800                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "576800                        P-NEW-CBSA-STAND-AMT-LOC\n.\n576900",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "577200                        P-NEW-CBSA-STAND-AMT-LOC\n.\n577300",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "577600                        P-NEW-CBSA-STAND-AMT-LOC\n.\n577700\n577800     IF (P-NEW-PROVIDER-NO = '230040' OR '230078')\n577900         MOVE '   23' TO HOLD-PROV-CBSA\n578000                        P-NEW-CBSA-STAND-AMT-LOC.\n578100",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "578000                        P-NEW-CBSA-STAND-AMT-LOC\n.\n578100\n578200     IF (P-NEW-PROVIDER-NO = '260006' OR '260034' OR",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "578500                        P-NEW-CBSA-STAND-AMT-LOC\n.\n578600\n578700     IF (P-NEW-PROVIDER-NO = '300023')",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "578900                        P-NEW-CBSA-STAND-AMT-LOC\n.\n579000\n579100     IF (P-NEW-PROVIDER-NO = '330215' OR '330235' OR\n579200                             '330268')\n579300         MOVE '   33' TO HOLD-PROV-CBSA\n579400                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "579400                        P-NEW-CBSA-STAND-AMT-LOC\n.\n579500",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "579800                        P-NEW-CBSA-STAND-AMT-LOC\n.\n579900\n580000     IF (P-NEW-PROVIDER-NO = '360125')\n580100         MOVE '   36' TO HOLD-PROV-CBSA\n580200                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "580200                        P-NEW-CBSA-STAND-AMT-LOC\n.\n580300",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "580600                        P-NEW-CBSA-STAND-AMT-LOC\n.\n580700\n580800     IF (P-NEW-PROVIDER-NO = '380040')\n580900         MOVE '   38' TO HOLD-PROV-CBSA\n581000                        P-NEW-CBSA-STAND-AMT-LOC.\n581100",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "581000                        P-NEW-CBSA-STAND-AMT-LOC\n.\n581100\n581200     IF (P-NEW-PROVIDER-NO = '390130' OR '390183' OR",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "581500                        P-NEW-CBSA-STAND-AMT-LOC\n.\n581600\n581700     IF (P-NEW-PROVIDER-NO = '450052' OR '450078' OR\n581800                             '450243' OR '450348')\n581900         MOVE '   45' TO HOLD-PROV-CBSA\n582000                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "582000                        P-NEW-CBSA-STAND-AMT-LOC\n.\n582100",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "582400                        P-NEW-CBSA-STAND-AMT-LOC\n.\n582500",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "582800                        P-NEW-CBSA-STAND-AMT-LOC\n.\n582900\n583000",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "583100 2800-2011-EXIT\n.   EXIT.\n583200\n583300\n583400 2800-2012-WI-401-HOSPITAL.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "583400 2800-2012-WI-401-HOSPITAL\n.\n583500***************************************************************\n583600****  FOR FY 2012 SECTION 401 HOSPITALS EFFECTIVE OCT 1, 2011 *",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "584200                        P-NEW-CBSA-STAND-AMT-LOC\n.\n584300\n584400     IF (P-NEW-PROVIDER-NO = '050192' OR\n584500                             '050528' OR '050618')\n584600         MOVE '   05' TO HOLD-PROV-CBSA",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "584700                        P-NEW-CBSA-STAND-AMT-LOC\n.\n584800\n584900     IF (P-NEW-PROVIDER-NO = '070004')\n585000         MOVE '   07' TO HOLD-PROV-CBSA\n585100                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "585100                        P-NEW-CBSA-STAND-AMT-LOC\n.\n585200\n585300     IF (P-NEW-PROVIDER-NO = '100048' OR\n585400                             '100118' OR '100134')\n585500         MOVE '   10' TO HOLD-PROV-CBSA\n585600                        P-NEW-CBSA-STAND-AMT-LOC.\n585700",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "585600                        P-NEW-CBSA-STAND-AMT-LOC\n.\n585700\n585800     IF (P-NEW-PROVIDER-NO = '140167')\n585900         MOVE '   14' TO HOLD-PROV-CBSA\n586000                        P-NEW-CBSA-STAND-AMT-LOC.\n586100\n586200     IF (P-NEW-PROVIDER-NO = '150003')",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "586000                        P-NEW-CBSA-STAND-AMT-LOC\n.\n586100",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "586400                        P-NEW-CBSA-STAND-AMT-LOC\n.\n586500\n586600     IF (P-NEW-PROVIDER-NO = '170074' OR '170137')",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "586800                        P-NEW-CBSA-STAND-AMT-LOC\n.\n586900",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "587200                        P-NEW-CBSA-STAND-AMT-LOC\n.\n587300",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "587600                        P-NEW-CBSA-STAND-AMT-LOC\n.\n587700\n587800     IF (P-NEW-PROVIDER-NO = '230040' OR '230078')",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "588000                        P-NEW-CBSA-STAND-AMT-LOC\n.\n588100\n588200     IF (P-NEW-PROVIDER-NO = '260006' OR '260034' OR\n588300                             '260047' OR '260195')\n588400         MOVE '   26' TO HOLD-PROV-CBSA",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "588500                        P-NEW-CBSA-STAND-AMT-LOC\n.\n588600\n588700     IF (P-NEW-PROVIDER-NO = '300023')\n588800         MOVE '   30' TO HOLD-PROV-CBSA\n588900                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "588900                        P-NEW-CBSA-STAND-AMT-LOC\n.\n589000\n589100     IF (P-NEW-PROVIDER-NO = '330013' OR '330057' OR\n589200                             '330108' OR '330164' OR\n589300                             '330215' OR '330235' OR\n589400                             '330268' OR '330285')\n589500         MOVE '   33' TO HOLD-PROV-CBSA",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "589600                        P-NEW-CBSA-STAND-AMT-LOC\n.\n589700\n589800     IF (P-NEW-PROVIDER-NO = '340010')",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "590000                        P-NEW-CBSA-STAND-AMT-LOC\n.\n590100\n590200     IF (P-NEW-PROVIDER-NO = '360125')\n590300         MOVE '   36' TO HOLD-PROV-CBSA\n590400                        P-NEW-CBSA-STAND-AMT-LOC.\n590500",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "590400                        P-NEW-CBSA-STAND-AMT-LOC\n.\n590500\n590600     IF (P-NEW-PROVIDER-NO = '370054')\n590700         MOVE '   37' TO HOLD-PROV-CBSA\n590800                        P-NEW-CBSA-STAND-AMT-LOC.\n590900\n591000     IF (P-NEW-PROVIDER-NO = '380040')",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "590800                        P-NEW-CBSA-STAND-AMT-LOC\n.\n590900\n591000     IF (P-NEW-PROVIDER-NO = '380040')\n591100         MOVE '   38' TO HOLD-PROV-CBSA",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "591200                        P-NEW-CBSA-STAND-AMT-LOC\n.\n591300",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "591700                        P-NEW-CBSA-STAND-AMT-LOC\n.\n591800\n591900     IF (P-NEW-PROVIDER-NO = '420038')\n592000         MOVE '   42' TO HOLD-PROV-CBSA\n592100                        P-NEW-CBSA-STAND-AMT-LOC.\n592200",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "592100                        P-NEW-CBSA-STAND-AMT-LOC\n.\n592200",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "592600                        P-NEW-CBSA-STAND-AMT-LOC\n.\n592700",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "593000                        P-NEW-CBSA-STAND-AMT-LOC\n.\n593100\n593200     IF (P-NEW-PROVIDER-NO = '500148')",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "593400                        P-NEW-CBSA-STAND-AMT-LOC\n.\n593500\n593600\n593700 2800-2012-EXIT.   EXIT.\n593800\n593900 2800-2013-WI-401-HOSPITAL.\n594000***************************************************************",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "593700 2800-2012-EXIT\n.   EXIT.\n593800\n593900 2800-2013-WI-401-HOSPITAL.\n594000***************************************************************\n594100****  FOR FY 2013 SECTION 401 HOSPITALS EFFECTIVE OCT 1, 2012 *",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "593900 2800-2013-WI-401-HOSPITAL\n.\n594000***************************************************************\n594100****  FOR FY 2013 SECTION 401 HOSPITALS EFFECTIVE OCT 1, 2012 *\n594200***************************************************************",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "594700                        P-NEW-CBSA-STAND-AMT-LOC\n.\n594800",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "595100                        P-NEW-CBSA-STAND-AMT-LOC\n.\n595200\n595300     IF (P-NEW-PROVIDER-NO = '050192' OR\n595400                             '050528' OR '050618')\n595500         MOVE '   05' TO HOLD-PROV-CBSA\n595600                        P-NEW-CBSA-STAND-AMT-LOC.\n595700",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "595600                        P-NEW-CBSA-STAND-AMT-LOC\n.\n595700\n595800     IF (P-NEW-PROVIDER-NO = '070004')\n595900         MOVE '   07' TO HOLD-PROV-CBSA\n596000                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "596000                        P-NEW-CBSA-STAND-AMT-LOC\n.\n596100",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "596500                        P-NEW-CBSA-STAND-AMT-LOC\n.\n596600\n596700     IF (P-NEW-PROVIDER-NO = '170074' OR '170137')\n596800         MOVE '   17' TO HOLD-PROV-CBSA\n596900                        P-NEW-CBSA-STAND-AMT-LOC.\n597000",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "596900                        P-NEW-CBSA-STAND-AMT-LOC\n.\n597000",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "597300                        P-NEW-CBSA-STAND-AMT-LOC\n.\n597400\n597500     IF (P-NEW-PROVIDER-NO = '220051')\n597600         MOVE '   22' TO HOLD-PROV-CBSA\n597700                        P-NEW-CBSA-STAND-AMT-LOC.\n597800",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "597700                        P-NEW-CBSA-STAND-AMT-LOC\n.\n597800\n597900     IF (P-NEW-PROVIDER-NO = '230040' OR '230078')\n598000         MOVE '   23' TO HOLD-PROV-CBSA\n598100                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "598100                        P-NEW-CBSA-STAND-AMT-LOC\n.\n598200",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "598600                        P-NEW-CBSA-STAND-AMT-LOC\n.\n598700\n598800     IF (P-NEW-PROVIDER-NO = '330108' OR\n598900                             '330215' OR '330235' OR\n599000                             '330268')\n599100         MOVE '   33' TO HOLD-PROV-CBSA\n599200                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "599200                        P-NEW-CBSA-STAND-AMT-LOC\n.\n599300",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "599600                        P-NEW-CBSA-STAND-AMT-LOC\n.\n599700\n599800     IF (P-NEW-PROVIDER-NO = '350011')\n599900         MOVE '   35' TO HOLD-PROV-CBSA\n600000                        P-NEW-CBSA-STAND-AMT-LOC.\n600100",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "600000                        P-NEW-CBSA-STAND-AMT-LOC\n.\n600100\n600200     IF (P-NEW-PROVIDER-NO = '360125' OR '360141')\n600300         MOVE '   36' TO HOLD-PROV-CBSA\n600400                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "600400                        P-NEW-CBSA-STAND-AMT-LOC\n.\n600500",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "600800                        P-NEW-CBSA-STAND-AMT-LOC\n.\n600900\n601000     IF (P-NEW-PROVIDER-NO = '380040')",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "601200                        P-NEW-CBSA-STAND-AMT-LOC\n.\n601300\n601400     IF (P-NEW-PROVIDER-NO = '390130' OR '390183' OR",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "601700                        P-NEW-CBSA-STAND-AMT-LOC\n.\n601800\n601900     IF (P-NEW-PROVIDER-NO = '420009' OR '420038')",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "602100                        P-NEW-CBSA-STAND-AMT-LOC\n.\n602200\n602300     IF (P-NEW-PROVIDER-NO = '440189')\n602400         MOVE '   44' TO HOLD-PROV-CBSA\n602500                        P-NEW-CBSA-STAND-AMT-LOC.\n602600",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "602500                        P-NEW-CBSA-STAND-AMT-LOC\n.\n602600",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "603000                        P-NEW-CBSA-STAND-AMT-LOC\n.\n603100",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "603500                        P-NEW-CBSA-STAND-AMT-LOC\n.\n603600\n603700     IF (P-NEW-PROVIDER-NO = '500030' OR '500148')\n603800         MOVE '   50' TO HOLD-PROV-CBSA\n603900                        P-NEW-CBSA-STAND-AMT-LOC.\n604000",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "603900                        P-NEW-CBSA-STAND-AMT-LOC\n.\n604000",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "604100 2800-2013-EXIT\n.   EXIT.\n604200\n604300\n604400 2800-2014-WI-401-HOSPITAL.\n604500***************************************************************\n604600****  FOR FY 2014 SECTION 401 HOSPITALS EFFECTIVE OCT 1, 2012 *\n604700***************************************************************",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "604400 2800-2014-WI-401-HOSPITAL\n.\n604500***************************************************************\n604600****  FOR FY 2014 SECTION 401 HOSPITALS EFFECTIVE OCT 1, 2012 *\n604700***************************************************************",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "605500                        P-NEW-CBSA-STAND-AMT-LOC\n.\n605600\n605700     IF (P-NEW-PROVIDER-NO = '060010')\n605800         MOVE '   06' TO HOLD-PROV-CBSA",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "605900                        P-NEW-CBSA-STAND-AMT-LOC\n.\n606000\n606100     IF (P-NEW-PROVIDER-NO = '070004' OR\n606200                             '070005')\n606300         MOVE '   07' TO HOLD-PROV-CBSA\n606400                        P-NEW-CBSA-STAND-AMT-LOC.\n606500",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "606400                        P-NEW-CBSA-STAND-AMT-LOC\n.\n606500\n606600     IF (P-NEW-PROVIDER-NO = '100048' OR\n606700                             '100090' OR\n606800                             '100118' OR\n606900                             '100134')",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "607100                        P-NEW-CBSA-STAND-AMT-LOC\n.\n607200\n607300     IF (P-NEW-PROVIDER-NO = '140059' OR",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "607600                        P-NEW-CBSA-STAND-AMT-LOC\n.\n607700\n607800     IF (P-NEW-PROVIDER-NO = '170074' OR\n607900                             '170137')\n608000         MOVE '   17' TO HOLD-PROV-CBSA\n608100                        P-NEW-CBSA-STAND-AMT-LOC.\n608200",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "608100                        P-NEW-CBSA-STAND-AMT-LOC\n.\n608200\n608300     IF (P-NEW-PROVIDER-NO = '180016' OR\n608400                             '180038')\n608500         MOVE '   18' TO HOLD-PROV-CBSA",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "608600                        P-NEW-CBSA-STAND-AMT-LOC\n.\n608700\n608800     IF (P-NEW-PROVIDER-NO = '190008')\n608900         MOVE '   19' TO HOLD-PROV-CBSA\n609000                        P-NEW-CBSA-STAND-AMT-LOC.\n609100",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "609000                        P-NEW-CBSA-STAND-AMT-LOC\n.\n609100",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "609400                        P-NEW-CBSA-STAND-AMT-LOC\n.\n609500\n609600     IF (P-NEW-PROVIDER-NO = '230040' OR\n609700                             '230078')",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "609900                        P-NEW-CBSA-STAND-AMT-LOC\n.\n610000\n610100     IF (P-NEW-PROVIDER-NO = '260006' OR\n610200                             '260034' OR\n610300                             '260047' OR\n610400                             '260195')\n610500         MOVE '   26' TO HOLD-PROV-CBSA",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "610600                        P-NEW-CBSA-STAND-AMT-LOC\n.\n610700\n610800     IF (P-NEW-PROVIDER-NO = '290009')\n610900         MOVE '   29' TO HOLD-PROV-CBSA",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "611000                        P-NEW-CBSA-STAND-AMT-LOC\n.\n611100\n611200     IF (P-NEW-PROVIDER-NO = '330108' OR",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "611600                        P-NEW-CBSA-STAND-AMT-LOC\n.\n611700",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "612000                        P-NEW-CBSA-STAND-AMT-LOC\n.\n612100\n612200     IF (P-NEW-PROVIDER-NO = '350011' OR\n612300                             '350015')\n612400         MOVE '   35' TO HOLD-PROV-CBSA\n612500                        P-NEW-CBSA-STAND-AMT-LOC.\n612600",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "612500                        P-NEW-CBSA-STAND-AMT-LOC\n.\n612600\n612700     IF (P-NEW-PROVIDER-NO = '360125')\n612800         MOVE '   36' TO HOLD-PROV-CBSA\n612900                        P-NEW-CBSA-STAND-AMT-LOC.\n613000\n613100     IF (P-NEW-PROVIDER-NO = '370054')",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "612900                        P-NEW-CBSA-STAND-AMT-LOC\n.\n613000\n613100     IF (P-NEW-PROVIDER-NO = '370054')",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "613300                        P-NEW-CBSA-STAND-AMT-LOC\n.\n613400\n613500     IF (P-NEW-PROVIDER-NO = '380040')\n613600         MOVE '   38' TO HOLD-PROV-CBSA\n613700                        P-NEW-CBSA-STAND-AMT-LOC.\n613800",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "613700                        P-NEW-CBSA-STAND-AMT-LOC\n.\n613800\n613900     IF (P-NEW-PROVIDER-NO = '390130' OR",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "614300                        P-NEW-CBSA-STAND-AMT-LOC\n.\n614400\n614500     IF (P-NEW-PROVIDER-NO = '420009' OR\n614600                             '420038')\n614700         MOVE '   42' TO HOLD-PROV-CBSA\n614800                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "614800                        P-NEW-CBSA-STAND-AMT-LOC\n.\n614900\n615000     IF (P-NEW-PROVIDER-NO = '450052' OR\n615100                             '450078' OR\n615200                             '450243' OR\n615300                             '450348')",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "615500                        P-NEW-CBSA-STAND-AMT-LOC\n.\n615600\n615700     IF (P-NEW-PROVIDER-NO = '490004' OR\n615800                             '490116')\n615900         MOVE '   49' TO HOLD-PROV-CBSA\n616000                        P-NEW-CBSA-STAND-AMT-LOC.\n616100",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "616000                        P-NEW-CBSA-STAND-AMT-LOC\n.\n616100",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "616500                        P-NEW-CBSA-STAND-AMT-LOC\n.\n616600\n616700     IF (P-NEW-PROVIDER-NO = '510039')\n616800         MOVE '   51' TO HOLD-PROV-CBSA\n616900                        P-NEW-CBSA-STAND-AMT-LOC.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "616900                        P-NEW-CBSA-STAND-AMT-LOC\n.\n617000\n617100 2800-2014-EXIT.   EXIT.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "617100 2800-2014-EXIT\n.   EXIT.\n617200\n617300 2900-MOVE-PPS-ADDITIONAL-VARS.",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "617300 2900-MOVE-PPS-ADDITIONAL-VARS\n.\n617400\n617500***FYS 2013 AND 2014 - 1319 BYTES***",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "617700        B-21-DISCHARGE-DATE\n <= 20140930\n617800        MOVE PPS-VARIABLES-SECTION1-1314\n617900            TO PPS-VARIABLES-SECTION1\n618000        MOVE PPS-NON-TEMP-RELIEF-PMT-1314\n618100            TO PPS-NON-TEMP-RELIEF-PAYMENT",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "618900     END-IF\n.\n619000\n619100***FYS 2012 AND EARLIER - 1320 BYTES***\n619200     IF B-21-DISCHARGE-DATE < 20121001\n619300        MOVE PPS-VARIABLES-SECTION1-PRE13",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "620400     END-IF\n.\n620500\n620600 2900-EXIT.   EXIT.\n620700",
        "comments": "Section header, indicating the start of a new code block or routine."
    },
    {
        "type": "section_header",
        "description": "Section header example",
        "code": "620600 2900-EXIT\n.   EXIT.\n620700\n620800***************************************************************\n620900******       L A S T   S O U R C E   S T A T E M E N T    *****",
        "comments": "Section header, indicating the start of a new code block or routine."
    }
]